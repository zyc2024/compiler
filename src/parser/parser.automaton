State 0:
## Known stack suffix:
##
## LR(1) items:
main' -> . main [ # ]
## Transitions:
-- On INT shift to state 1
-- On ID shift to state 2
-- On CHAR shift to state 9
-- On BOOL shift to state 10
-- On moduleFile shift to state 23
-- On modTLI shift to state 35
-- On main_aux shift to state 36
-- On main shift to state 39
-- On funcDef shift to state 25
-- On funcDecl shift to state 26
-- On Type shift to state 30
## Reductions:

State 1:
## Known stack suffix:
## INT
## LR(1) items:
Type -> INT . [ LSBRAC ID ]
## Transitions:
## Reductions:
-- On LSBRAC ID
--   reduce production Type -> INT

State 2:
## Known stack suffix:
## ID
## LR(1) items:
funcDecl -> ID . ID LPAREN formalParamList RPAREN [ LCBRAC ]
funcDecl -> ID . LPAREN formalParamList RPAREN [ LCBRAC ]
## Transitions:
-- On LPAREN shift to state 3
-- On ID shift to state 19
## Reductions:

State 3:
## Known stack suffix:
## ID LPAREN
## LR(1) items:
funcDecl -> ID LPAREN . formalParamList RPAREN [ LCBRAC ]
## Transitions:
-- On FINAL shift to state 4
-- On varDecl shift to state 5
-- On option(FINAL) shift to state 6
-- On formalParamList shift to state 15
## Reductions:
-- On INT ID CHAR BOOL
--   reduce production option(FINAL) ->

State 4:
## Known stack suffix:
## FINAL
## LR(1) items:
option(FINAL) -> FINAL . [ INT ID CHAR BOOL ]
## Transitions:
## Reductions:
-- On INT ID CHAR BOOL
--   reduce production option(FINAL) -> FINAL

State 5:
## Known stack suffix:
## varDecl
## LR(1) items:
formalParamList -> varDecl . [ RPAREN COMMA ]
## Transitions:
## Reductions:
-- On RPAREN COMMA
--   reduce production formalParamList -> varDecl

State 6:
## Known stack suffix:
## option(FINAL)
## LR(1) items:
varDecl -> option(FINAL) . Type ID [ RPAREN COMMA ]
varDecl -> option(FINAL) . ID ID [ RPAREN COMMA ]
## Transitions:
-- On INT shift to state 1
-- On ID shift to state 7
-- On CHAR shift to state 9
-- On BOOL shift to state 10
-- On Type shift to state 11
## Reductions:

State 7:
## Known stack suffix:
## option(FINAL) ID
## LR(1) items:
varDecl -> option(FINAL) ID . ID [ RPAREN COMMA ]
## Transitions:
-- On ID shift to state 8
## Reductions:

State 8:
## Known stack suffix:
## option(FINAL) ID ID
## LR(1) items:
varDecl -> option(FINAL) ID ID . [ RPAREN COMMA ]
## Transitions:
## Reductions:
-- On RPAREN COMMA
--   reduce production varDecl -> option(FINAL) ID ID

State 9:
## Known stack suffix:
## CHAR
## LR(1) items:
Type -> CHAR . [ LSBRAC ID ]
## Transitions:
## Reductions:
-- On LSBRAC ID
--   reduce production Type -> CHAR

State 10:
## Known stack suffix:
## BOOL
## LR(1) items:
Type -> BOOL . [ LSBRAC ID ]
## Transitions:
## Reductions:
-- On LSBRAC ID
--   reduce production Type -> BOOL

State 11:
## Known stack suffix:
## option(FINAL) Type
## LR(1) items:
Type -> Type . LSBRAC RSBRAC [ LSBRAC ID ]
varDecl -> option(FINAL) Type . ID [ RPAREN COMMA ]
## Transitions:
-- On LSBRAC shift to state 12
-- On ID shift to state 14
## Reductions:

State 12:
## Known stack suffix:
## Type LSBRAC
## LR(1) items:
Type -> Type LSBRAC . RSBRAC [ LSBRAC ID ]
## Transitions:
-- On RSBRAC shift to state 13
## Reductions:

State 13:
## Known stack suffix:
## Type LSBRAC RSBRAC
## LR(1) items:
Type -> Type LSBRAC RSBRAC . [ LSBRAC ID ]
## Transitions:
## Reductions:
-- On LSBRAC ID
--   reduce production Type -> Type LSBRAC RSBRAC

State 14:
## Known stack suffix:
## option(FINAL) Type ID
## LR(1) items:
varDecl -> option(FINAL) Type ID . [ RPAREN COMMA ]
## Transitions:
## Reductions:
-- On RPAREN COMMA
--   reduce production varDecl -> option(FINAL) Type ID

State 15:
## Known stack suffix:
## ID LPAREN formalParamList
## LR(1) items:
formalParamList -> formalParamList . COMMA varDecl [ RPAREN COMMA ]
funcDecl -> ID LPAREN formalParamList . RPAREN [ LCBRAC ]
## Transitions:
-- On RPAREN shift to state 16
-- On COMMA shift to state 17
## Reductions:

State 16:
## Known stack suffix:
## ID LPAREN formalParamList RPAREN
## LR(1) items:
funcDecl -> ID LPAREN formalParamList RPAREN . [ LCBRAC ]
## Transitions:
## Reductions:
-- On LCBRAC
--   reduce production funcDecl -> ID LPAREN formalParamList RPAREN

State 17:
## Known stack suffix:
## formalParamList COMMA
## LR(1) items:
formalParamList -> formalParamList COMMA . varDecl [ RPAREN COMMA ]
## Transitions:
-- On FINAL shift to state 4
-- On varDecl shift to state 18
-- On option(FINAL) shift to state 6
## Reductions:
-- On INT ID CHAR BOOL
--   reduce production option(FINAL) ->

State 18:
## Known stack suffix:
## formalParamList COMMA varDecl
## LR(1) items:
formalParamList -> formalParamList COMMA varDecl . [ RPAREN COMMA ]
## Transitions:
## Reductions:
-- On RPAREN COMMA
--   reduce production formalParamList -> formalParamList COMMA varDecl

State 19:
## Known stack suffix:
## ID ID
## LR(1) items:
funcDecl -> ID ID . LPAREN formalParamList RPAREN [ LCBRAC ]
## Transitions:
-- On LPAREN shift to state 20
## Reductions:

State 20:
## Known stack suffix:
## ID ID LPAREN
## LR(1) items:
funcDecl -> ID ID LPAREN . formalParamList RPAREN [ LCBRAC ]
## Transitions:
-- On FINAL shift to state 4
-- On varDecl shift to state 5
-- On option(FINAL) shift to state 6
-- On formalParamList shift to state 21
## Reductions:
-- On INT ID CHAR BOOL
--   reduce production option(FINAL) ->

State 21:
## Known stack suffix:
## ID ID LPAREN formalParamList
## LR(1) items:
formalParamList -> formalParamList . COMMA varDecl [ RPAREN COMMA ]
funcDecl -> ID ID LPAREN formalParamList . RPAREN [ LCBRAC ]
## Transitions:
-- On RPAREN shift to state 22
-- On COMMA shift to state 17
## Reductions:

State 22:
## Known stack suffix:
## ID ID LPAREN formalParamList RPAREN
## LR(1) items:
funcDecl -> ID ID LPAREN formalParamList RPAREN . [ LCBRAC ]
## Transitions:
## Reductions:
-- On LCBRAC
--   reduce production funcDecl -> ID ID LPAREN formalParamList RPAREN

State 23:
## Known stack suffix:
## moduleFile
## LR(1) items:
main_aux -> moduleFile . [ INT ID EOF CHAR BOOL ]
moduleFile -> moduleFile . modTLI [ INT ID EOF CHAR BOOL ]
## Transitions:
-- On INT shift to state 1
-- On ID shift to state 2
-- On CHAR shift to state 9
-- On BOOL shift to state 10
-- On modTLI shift to state 24
-- On funcDef shift to state 25
-- On funcDecl shift to state 26
-- On Type shift to state 30
## Reductions:
-- On INT ID EOF CHAR BOOL
--   reduce production main_aux -> moduleFile
** Conflict on INT ID CHAR BOOL

State 24:
## Known stack suffix:
## moduleFile modTLI
## LR(1) items:
moduleFile -> moduleFile modTLI . [ INT ID EOF CHAR BOOL ]
## Transitions:
## Reductions:
-- On INT ID EOF CHAR BOOL
--   reduce production moduleFile -> moduleFile modTLI

State 25:
## Known stack suffix:
## funcDef
## LR(1) items:
modTLI -> funcDef . [ INT ID EOF CHAR BOOL ]
## Transitions:
## Reductions:
-- On INT ID EOF CHAR BOOL
--   reduce production modTLI -> funcDef

State 26:
## Known stack suffix:
## funcDecl
## LR(1) items:
funcDef -> funcDecl . body [ INT ID EOF CHAR BOOL ]
## Transitions:
-- On LCBRAC shift to state 27
-- On body shift to state 29
## Reductions:

State 27:
## Known stack suffix:
## LCBRAC
## LR(1) items:
body -> LCBRAC . RCBRAC [ INT ID EOF CHAR BOOL ]
## Transitions:
-- On RCBRAC shift to state 28
## Reductions:

State 28:
## Known stack suffix:
## LCBRAC RCBRAC
## LR(1) items:
body -> LCBRAC RCBRAC . [ INT ID EOF CHAR BOOL ]
## Transitions:
## Reductions:
-- On INT ID EOF CHAR BOOL
--   reduce production body -> LCBRAC RCBRAC

State 29:
## Known stack suffix:
## funcDecl body
## LR(1) items:
funcDef -> funcDecl body . [ INT ID EOF CHAR BOOL ]
## Transitions:
## Reductions:
-- On INT ID EOF CHAR BOOL
--   reduce production funcDef -> funcDecl body

State 30:
## Known stack suffix:
## Type
## LR(1) items:
Type -> Type . LSBRAC RSBRAC [ LSBRAC ID ]
funcDecl -> Type . ID LPAREN formalParamList RPAREN [ LCBRAC ]
## Transitions:
-- On LSBRAC shift to state 12
-- On ID shift to state 31
## Reductions:

State 31:
## Known stack suffix:
## Type ID
## LR(1) items:
funcDecl -> Type ID . LPAREN formalParamList RPAREN [ LCBRAC ]
## Transitions:
-- On LPAREN shift to state 32
## Reductions:

State 32:
## Known stack suffix:
## Type ID LPAREN
## LR(1) items:
funcDecl -> Type ID LPAREN . formalParamList RPAREN [ LCBRAC ]
## Transitions:
-- On FINAL shift to state 4
-- On varDecl shift to state 5
-- On option(FINAL) shift to state 6
-- On formalParamList shift to state 33
## Reductions:
-- On INT ID CHAR BOOL
--   reduce production option(FINAL) ->

State 33:
## Known stack suffix:
## Type ID LPAREN formalParamList
## LR(1) items:
formalParamList -> formalParamList . COMMA varDecl [ RPAREN COMMA ]
funcDecl -> Type ID LPAREN formalParamList . RPAREN [ LCBRAC ]
## Transitions:
-- On RPAREN shift to state 34
-- On COMMA shift to state 17
## Reductions:

State 34:
## Known stack suffix:
## Type ID LPAREN formalParamList RPAREN
## LR(1) items:
funcDecl -> Type ID LPAREN formalParamList RPAREN . [ LCBRAC ]
## Transitions:
## Reductions:
-- On LCBRAC
--   reduce production funcDecl -> Type ID LPAREN formalParamList RPAREN

State 35:
## Known stack suffix:
## modTLI
## LR(1) items:
moduleFile -> modTLI . [ INT ID EOF CHAR BOOL ]
## Transitions:
## Reductions:
-- On INT ID EOF CHAR BOOL
--   reduce production moduleFile -> modTLI

State 36:
## Known stack suffix:
## main_aux
## LR(1) items:
main -> main_aux . EOF [ # ]
main_aux -> main_aux . moduleFile [ INT ID EOF CHAR BOOL ]
## Transitions:
-- On INT shift to state 1
-- On ID shift to state 2
-- On EOF shift to state 37
-- On CHAR shift to state 9
-- On BOOL shift to state 10
-- On moduleFile shift to state 38
-- On modTLI shift to state 35
-- On funcDef shift to state 25
-- On funcDecl shift to state 26
-- On Type shift to state 30
## Reductions:

State 37:
## Known stack suffix:
## main_aux EOF
## LR(1) items:
main -> main_aux EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production main -> main_aux EOF

State 38:
## Known stack suffix:
## main_aux moduleFile
## LR(1) items:
main_aux -> main_aux moduleFile . [ INT ID EOF CHAR BOOL ]
moduleFile -> moduleFile . modTLI [ INT ID EOF CHAR BOOL ]
## Transitions:
-- On INT shift to state 1
-- On ID shift to state 2
-- On CHAR shift to state 9
-- On BOOL shift to state 10
-- On modTLI shift to state 24
-- On funcDef shift to state 25
-- On funcDecl shift to state 26
-- On Type shift to state 30
## Reductions:
-- On INT ID EOF CHAR BOOL
--   reduce production main_aux -> main_aux moduleFile
** Conflict on INT ID CHAR BOOL

State 39:
## Known stack suffix:
## main
## LR(1) items:
main' -> main . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept main

