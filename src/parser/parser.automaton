State 0:
## Known stack suffix:
##
## LR(1) items:
main' -> . main [ # ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On main shift to state 108
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 109
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:

State 1:
## Known stack suffix:
## SUB
## LR(1) items:
expr -> SUB . expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 107
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:

State 2:
## Known stack suffix:
## STR_LIT
## LR(1) items:
baseLiteral -> STR_LIT . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production baseLiteral -> STR_LIT

State 3:
## Known stack suffix:
## NULL
## LR(1) items:
baseLiteral -> NULL . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production baseLiteral -> NULL

State 4:
## Known stack suffix:
## MODULE_ID
## LR(1) items:
sourceList -> MODULE_ID . [ VOID TYPE PERIOD MODULE_ID INT IMPORT ID EOF CONST CHAR BOOL ]
## Transitions:
## Reductions:
-- On VOID TYPE PERIOD MODULE_ID INT IMPORT ID EOF CONST CHAR BOOL
--   reduce production sourceList -> MODULE_ID

State 5:
## Known stack suffix:
## LSBRAC
## LR(1) items:
literal -> LSBRAC . exprList RSBRAC [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On reqExprList shift to state 101
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On exprList shift to state 104
-- On expr shift to state 106
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:
-- On RSBRAC
--   reduce production exprList ->

State 6:
## Known stack suffix:
## LPAREN
## LR(1) items:
cast -> LPAREN . INT RPAREN [ SUB STR_LIT NULL MODULE_ID LSBRAC LPAREN LNOT INT_LIT ID CHAR_LIT BOOL_LIT BNOT ADD ]
cast -> LPAREN . CHAR RPAREN [ SUB STR_LIT NULL MODULE_ID LSBRAC LPAREN LNOT INT_LIT ID CHAR_LIT BOOL_LIT BNOT ADD ]
primary -> LPAREN . expr RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On INT shift to state 95
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On CHAR shift to state 97
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 99
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:

State 7:
## Known stack suffix:
## LNOT
## LR(1) items:
expr -> LNOT . expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 94
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:

State 8:
## Known stack suffix:
## INT_LIT
## LR(1) items:
baseLiteral -> INT_LIT . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production baseLiteral -> INT_LIT

State 9:
## Known stack suffix:
## ID
## LR(1) items:
expr -> ID . [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
functionCall -> ID . LPAREN reqUnnamedArgsList RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
functionCall -> ID . LPAREN reqNamedArgsList RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
functionCall -> ID . LPAREN RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
primary -> ID . PERIOD ID [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
primary -> ID . LSBRAC expr RSBRAC [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On PERIOD shift to state 10
-- On LSBRAC shift to state 12
-- On LPAREN shift to state 71
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production expr -> ID

State 10:
## Known stack suffix:
## ID PERIOD
## LR(1) items:
primary -> ID PERIOD . ID [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On ID shift to state 11
## Reductions:

State 11:
## Known stack suffix:
## ID PERIOD ID
## LR(1) items:
primary -> ID PERIOD ID . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production primary -> ID PERIOD ID

State 12:
## Known stack suffix:
## ID LSBRAC
## LR(1) items:
primary -> ID LSBRAC . expr RSBRAC [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 92
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:

State 13:
## Known stack suffix:
## CHAR_LIT
## LR(1) items:
baseLiteral -> CHAR_LIT . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production baseLiteral -> CHAR_LIT

State 14:
## Known stack suffix:
## BOOL_LIT
## LR(1) items:
baseLiteral -> BOOL_LIT . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production baseLiteral -> BOOL_LIT

State 15:
## Known stack suffix:
## BNOT
## LR(1) items:
expr -> BNOT . expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 91
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:

State 16:
## Known stack suffix:
## ADD
## LR(1) items:
expr -> ADD . expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 90
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:

State 17:
## Known stack suffix:
## sourceList
## LR(1) items:
functionCall -> sourceList . PERIOD ID LPAREN reqUnnamedArgsList RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
functionCall -> sourceList . PERIOD ID LPAREN reqNamedArgsList RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
functionCall -> sourceList . PERIOD ID LPAREN RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
moduleAccess -> sourceList . PERIOD ID [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
primary -> sourceList . PERIOD ID LSBRAC expr RSBRAC [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
sourceList -> sourceList . PERIOD MODULE_ID [ PERIOD ]
## Transitions:
-- On PERIOD shift to state 18
## Reductions:

State 18:
## Known stack suffix:
## sourceList PERIOD
## LR(1) items:
functionCall -> sourceList PERIOD . ID LPAREN reqUnnamedArgsList RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
functionCall -> sourceList PERIOD . ID LPAREN reqNamedArgsList RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
functionCall -> sourceList PERIOD . ID LPAREN RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
moduleAccess -> sourceList PERIOD . ID [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
primary -> sourceList PERIOD . ID LSBRAC expr RSBRAC [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
sourceList -> sourceList PERIOD . MODULE_ID [ PERIOD ]
## Transitions:
-- On MODULE_ID shift to state 19
-- On ID shift to state 20
## Reductions:

State 19:
## Known stack suffix:
## sourceList PERIOD MODULE_ID
## LR(1) items:
sourceList -> sourceList PERIOD MODULE_ID . [ VOID TYPE PERIOD MODULE_ID INT IMPORT ID EOF CONST CHAR BOOL ]
## Transitions:
## Reductions:
-- On VOID TYPE PERIOD MODULE_ID INT IMPORT ID EOF CONST CHAR BOOL
--   reduce production sourceList -> sourceList PERIOD MODULE_ID

State 20:
## Known stack suffix:
## sourceList PERIOD ID
## LR(1) items:
functionCall -> sourceList PERIOD ID . LPAREN reqUnnamedArgsList RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
functionCall -> sourceList PERIOD ID . LPAREN reqNamedArgsList RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
functionCall -> sourceList PERIOD ID . LPAREN RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
moduleAccess -> sourceList PERIOD ID . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
primary -> sourceList PERIOD ID . LSBRAC expr RSBRAC [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On LSBRAC shift to state 21
-- On LPAREN shift to state 68
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production moduleAccess -> sourceList PERIOD ID

State 21:
## Known stack suffix:
## sourceList PERIOD ID LSBRAC
## LR(1) items:
primary -> sourceList PERIOD ID LSBRAC . expr RSBRAC [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 66
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:

State 22:
## Known stack suffix:
## primary
## LR(1) items:
expr -> primary . [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
primary -> primary . PERIOD ID [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
primary -> primary . LSBRAC expr RSBRAC [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On PERIOD shift to state 23
-- On LSBRAC shift to state 25
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production expr -> primary

State 23:
## Known stack suffix:
## primary PERIOD
## LR(1) items:
primary -> primary PERIOD . ID [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On ID shift to state 24
## Reductions:

State 24:
## Known stack suffix:
## primary PERIOD ID
## LR(1) items:
primary -> primary PERIOD ID . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production primary -> primary PERIOD ID

State 25:
## Known stack suffix:
## primary LSBRAC
## LR(1) items:
primary -> primary LSBRAC . expr RSBRAC [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 31
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:

State 26:
## Known stack suffix:
## moduleAccess
## LR(1) items:
expr -> moduleAccess . [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
primary -> moduleAccess . PERIOD ID [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On PERIOD shift to state 27
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production expr -> moduleAccess

State 27:
## Known stack suffix:
## moduleAccess PERIOD
## LR(1) items:
primary -> moduleAccess PERIOD . ID [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On ID shift to state 28
## Reductions:

State 28:
## Known stack suffix:
## moduleAccess PERIOD ID
## LR(1) items:
primary -> moduleAccess PERIOD ID . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production primary -> moduleAccess PERIOD ID

State 29:
## Known stack suffix:
## literal
## LR(1) items:
primary -> literal . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production primary -> literal

State 30:
## Known stack suffix:
## functionCall
## LR(1) items:
primary -> functionCall . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production primary -> functionCall

State 31:
## Known stack suffix:
## primary LSBRAC expr
## LR(1) items:
expr -> expr . LAND expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LOR expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BAND expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BOR expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GT expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LT expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GTE expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LTE expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . ADD expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . SUB expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MUL expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MOD expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DIV expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
primary -> primary LSBRAC expr . RSBRAC [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 32
-- On RSBRAC shift to state 43
-- On NEQ shift to state 44
-- On MUL shift to state 34
-- On MOD shift to state 39
-- On LTE shift to state 46
-- On LT shift to state 50
-- On LOR shift to state 56
-- On LAND shift to state 64
-- On GTE shift to state 52
-- On GT shift to state 54
-- On DIV shift to state 41
-- On DEQ shift to state 58
-- On BOR shift to state 60
-- On BAND shift to state 62
-- On ADD shift to state 48
## Reductions:

State 32:
## Known stack suffix:
## expr SUB
## LR(1) items:
expr -> expr SUB . expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 33
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:

State 33:
## Known stack suffix:
## expr SUB expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr SUB expr . [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On MUL shift to state 34
-- On MOD shift to state 39
-- On DIV shift to state 41
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN NEQ LTE LT LOR LAND GTE GT EOF DEQ COMMA BOR BAND ADD
--   reduce production expr -> expr SUB expr

State 34:
## Known stack suffix:
## expr MUL
## LR(1) items:
expr -> expr MUL . expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 35
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:

State 35:
## Known stack suffix:
## expr MUL expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr MUL expr . [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production expr -> expr MUL expr

State 36:
## Known stack suffix:
## cast
## LR(1) items:
expr -> cast . expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 37
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:

State 37:
## Known stack suffix:
## cast expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> cast expr . [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production expr -> cast expr

State 38:
## Known stack suffix:
## baseLiteral
## LR(1) items:
literal -> baseLiteral . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production literal -> baseLiteral

State 39:
## Known stack suffix:
## expr MOD
## LR(1) items:
expr -> expr MOD . expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 40
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:

State 40:
## Known stack suffix:
## expr MOD expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr MOD expr . [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production expr -> expr MOD expr

State 41:
## Known stack suffix:
## expr DIV
## LR(1) items:
expr -> expr DIV . expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 42
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:

State 42:
## Known stack suffix:
## expr DIV expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr DIV expr . [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production expr -> expr DIV expr

State 43:
## Known stack suffix:
## primary LSBRAC expr RSBRAC
## LR(1) items:
primary -> primary LSBRAC expr RSBRAC . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production primary -> primary LSBRAC expr RSBRAC

State 44:
## Known stack suffix:
## expr NEQ
## LR(1) items:
expr -> expr NEQ . expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 45
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:

State 45:
## Known stack suffix:
## expr NEQ expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr NEQ expr . [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 32
-- On MUL shift to state 34
-- On MOD shift to state 39
-- On LTE shift to state 46
-- On LT shift to state 50
-- On GTE shift to state 52
-- On GT shift to state 54
-- On DIV shift to state 41
-- On ADD shift to state 48
## Reductions:
-- On SCOLON RSBRAC RPAREN NEQ LOR LAND EOF DEQ COMMA BOR BAND
--   reduce production expr -> expr NEQ expr

State 46:
## Known stack suffix:
## expr LTE
## LR(1) items:
expr -> expr LTE . expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 47
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:

State 47:
## Known stack suffix:
## expr LTE expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr LTE expr . [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 32
-- On MUL shift to state 34
-- On MOD shift to state 39
-- On DIV shift to state 41
-- On ADD shift to state 48
## Reductions:
-- On SCOLON RSBRAC RPAREN NEQ LTE LT LOR LAND GTE GT EOF DEQ COMMA BOR BAND
--   reduce production expr -> expr LTE expr

State 48:
## Known stack suffix:
## expr ADD
## LR(1) items:
expr -> expr ADD . expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 49
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:

State 49:
## Known stack suffix:
## expr ADD expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr ADD expr . [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On MUL shift to state 34
-- On MOD shift to state 39
-- On DIV shift to state 41
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN NEQ LTE LT LOR LAND GTE GT EOF DEQ COMMA BOR BAND ADD
--   reduce production expr -> expr ADD expr

State 50:
## Known stack suffix:
## expr LT
## LR(1) items:
expr -> expr LT . expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 51
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:

State 51:
## Known stack suffix:
## expr LT expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr LT expr . [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 32
-- On MUL shift to state 34
-- On MOD shift to state 39
-- On DIV shift to state 41
-- On ADD shift to state 48
## Reductions:
-- On SCOLON RSBRAC RPAREN NEQ LTE LT LOR LAND GTE GT EOF DEQ COMMA BOR BAND
--   reduce production expr -> expr LT expr

State 52:
## Known stack suffix:
## expr GTE
## LR(1) items:
expr -> expr GTE . expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 53
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:

State 53:
## Known stack suffix:
## expr GTE expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr GTE expr . [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 32
-- On MUL shift to state 34
-- On MOD shift to state 39
-- On DIV shift to state 41
-- On ADD shift to state 48
## Reductions:
-- On SCOLON RSBRAC RPAREN NEQ LTE LT LOR LAND GTE GT EOF DEQ COMMA BOR BAND
--   reduce production expr -> expr GTE expr

State 54:
## Known stack suffix:
## expr GT
## LR(1) items:
expr -> expr GT . expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 55
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:

State 55:
## Known stack suffix:
## expr GT expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr GT expr . [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 32
-- On MUL shift to state 34
-- On MOD shift to state 39
-- On DIV shift to state 41
-- On ADD shift to state 48
## Reductions:
-- On SCOLON RSBRAC RPAREN NEQ LTE LT LOR LAND GTE GT EOF DEQ COMMA BOR BAND
--   reduce production expr -> expr GT expr

State 56:
## Known stack suffix:
## expr LOR
## LR(1) items:
expr -> expr LOR . expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 57
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:

State 57:
## Known stack suffix:
## expr LOR expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr LOR expr . [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 32
-- On NEQ shift to state 44
-- On MUL shift to state 34
-- On MOD shift to state 39
-- On LTE shift to state 46
-- On LT shift to state 50
-- On GTE shift to state 52
-- On GT shift to state 54
-- On DIV shift to state 41
-- On DEQ shift to state 58
-- On BOR shift to state 60
-- On BAND shift to state 62
-- On ADD shift to state 48
## Reductions:
-- On SCOLON RSBRAC RPAREN LOR LAND EOF COMMA
--   reduce production expr -> expr LOR expr

State 58:
## Known stack suffix:
## expr DEQ
## LR(1) items:
expr -> expr DEQ . expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 59
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:

State 59:
## Known stack suffix:
## expr DEQ expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr DEQ expr . [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 32
-- On MUL shift to state 34
-- On MOD shift to state 39
-- On LTE shift to state 46
-- On LT shift to state 50
-- On GTE shift to state 52
-- On GT shift to state 54
-- On DIV shift to state 41
-- On ADD shift to state 48
## Reductions:
-- On SCOLON RSBRAC RPAREN NEQ LOR LAND EOF DEQ COMMA BOR BAND
--   reduce production expr -> expr DEQ expr

State 60:
## Known stack suffix:
## expr BOR
## LR(1) items:
expr -> expr BOR . expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 61
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:

State 61:
## Known stack suffix:
## expr BOR expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr BOR expr . [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 32
-- On NEQ shift to state 44
-- On MUL shift to state 34
-- On MOD shift to state 39
-- On LTE shift to state 46
-- On LT shift to state 50
-- On GTE shift to state 52
-- On GT shift to state 54
-- On DIV shift to state 41
-- On DEQ shift to state 58
-- On ADD shift to state 48
## Reductions:
-- On SCOLON RSBRAC RPAREN LOR LAND EOF COMMA BOR BAND
--   reduce production expr -> expr BOR expr

State 62:
## Known stack suffix:
## expr BAND
## LR(1) items:
expr -> expr BAND . expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 63
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:

State 63:
## Known stack suffix:
## expr BAND expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr BAND expr . [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 32
-- On NEQ shift to state 44
-- On MUL shift to state 34
-- On MOD shift to state 39
-- On LTE shift to state 46
-- On LT shift to state 50
-- On GTE shift to state 52
-- On GT shift to state 54
-- On DIV shift to state 41
-- On DEQ shift to state 58
-- On ADD shift to state 48
## Reductions:
-- On SCOLON RSBRAC RPAREN LOR LAND EOF COMMA BOR BAND
--   reduce production expr -> expr BAND expr

State 64:
## Known stack suffix:
## expr LAND
## LR(1) items:
expr -> expr LAND . expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 65
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:

State 65:
## Known stack suffix:
## expr LAND expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr LAND expr . [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 32
-- On NEQ shift to state 44
-- On MUL shift to state 34
-- On MOD shift to state 39
-- On LTE shift to state 46
-- On LT shift to state 50
-- On GTE shift to state 52
-- On GT shift to state 54
-- On DIV shift to state 41
-- On DEQ shift to state 58
-- On BOR shift to state 60
-- On BAND shift to state 62
-- On ADD shift to state 48
## Reductions:
-- On SCOLON RSBRAC RPAREN LOR LAND EOF COMMA
--   reduce production expr -> expr LAND expr

State 66:
## Known stack suffix:
## sourceList PERIOD ID LSBRAC expr
## LR(1) items:
expr -> expr . LAND expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LOR expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BAND expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BOR expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GT expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LT expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GTE expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LTE expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . ADD expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . SUB expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MUL expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MOD expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DIV expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
primary -> sourceList PERIOD ID LSBRAC expr . RSBRAC [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 32
-- On RSBRAC shift to state 67
-- On NEQ shift to state 44
-- On MUL shift to state 34
-- On MOD shift to state 39
-- On LTE shift to state 46
-- On LT shift to state 50
-- On LOR shift to state 56
-- On LAND shift to state 64
-- On GTE shift to state 52
-- On GT shift to state 54
-- On DIV shift to state 41
-- On DEQ shift to state 58
-- On BOR shift to state 60
-- On BAND shift to state 62
-- On ADD shift to state 48
## Reductions:

State 67:
## Known stack suffix:
## sourceList PERIOD ID LSBRAC expr RSBRAC
## LR(1) items:
primary -> sourceList PERIOD ID LSBRAC expr RSBRAC . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production primary -> sourceList PERIOD ID LSBRAC expr RSBRAC

State 68:
## Known stack suffix:
## sourceList PERIOD ID LPAREN
## LR(1) items:
functionCall -> sourceList PERIOD ID LPAREN . reqUnnamedArgsList RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
functionCall -> sourceList PERIOD ID LPAREN . reqNamedArgsList RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
functionCall -> sourceList PERIOD ID LPAREN . RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On RPAREN shift to state 69
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 70
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On reqUnnamedArgsList shift to state 86
-- On reqNamedArgsList shift to state 88
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 83
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:

State 69:
## Known stack suffix:
## sourceList PERIOD ID LPAREN RPAREN
## LR(1) items:
functionCall -> sourceList PERIOD ID LPAREN RPAREN . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production functionCall -> sourceList PERIOD ID LPAREN RPAREN

State 70:
## Known stack suffix:
## ID
## LR(1) items:
expr -> ID . [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
functionCall -> ID . LPAREN reqUnnamedArgsList RPAREN [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
functionCall -> ID . LPAREN reqNamedArgsList RPAREN [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
functionCall -> ID . LPAREN RPAREN [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
primary -> ID . PERIOD ID [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
primary -> ID . LSBRAC expr RSBRAC [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
reqNamedArgsList -> ID . EQ expr [ RPAREN COMMA ]
## Transitions:
-- On PERIOD shift to state 10
-- On LSBRAC shift to state 12
-- On LPAREN shift to state 71
-- On EQ shift to state 84
## Reductions:
-- On SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD
--   reduce production expr -> ID

State 71:
## Known stack suffix:
## ID LPAREN
## LR(1) items:
functionCall -> ID LPAREN . reqUnnamedArgsList RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
functionCall -> ID LPAREN . reqNamedArgsList RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
functionCall -> ID LPAREN . RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On RPAREN shift to state 72
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 70
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On reqUnnamedArgsList shift to state 73
-- On reqNamedArgsList shift to state 77
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 83
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:

State 72:
## Known stack suffix:
## ID LPAREN RPAREN
## LR(1) items:
functionCall -> ID LPAREN RPAREN . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production functionCall -> ID LPAREN RPAREN

State 73:
## Known stack suffix:
## ID LPAREN reqUnnamedArgsList
## LR(1) items:
functionCall -> ID LPAREN reqUnnamedArgsList . RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
reqUnnamedArgsList -> reqUnnamedArgsList . COMMA expr [ RPAREN COMMA ]
## Transitions:
-- On RPAREN shift to state 74
-- On COMMA shift to state 75
## Reductions:

State 74:
## Known stack suffix:
## ID LPAREN reqUnnamedArgsList RPAREN
## LR(1) items:
functionCall -> ID LPAREN reqUnnamedArgsList RPAREN . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production functionCall -> ID LPAREN reqUnnamedArgsList RPAREN

State 75:
## Known stack suffix:
## reqUnnamedArgsList COMMA
## LR(1) items:
reqUnnamedArgsList -> reqUnnamedArgsList COMMA . expr [ RPAREN COMMA ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 76
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:

State 76:
## Known stack suffix:
## reqUnnamedArgsList COMMA expr
## LR(1) items:
expr -> expr . LAND expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
reqUnnamedArgsList -> reqUnnamedArgsList COMMA expr . [ RPAREN COMMA ]
## Transitions:
-- On SUB shift to state 32
-- On NEQ shift to state 44
-- On MUL shift to state 34
-- On MOD shift to state 39
-- On LTE shift to state 46
-- On LT shift to state 50
-- On LOR shift to state 56
-- On LAND shift to state 64
-- On GTE shift to state 52
-- On GT shift to state 54
-- On DIV shift to state 41
-- On DEQ shift to state 58
-- On BOR shift to state 60
-- On BAND shift to state 62
-- On ADD shift to state 48
## Reductions:
-- On RPAREN COMMA
--   reduce production reqUnnamedArgsList -> reqUnnamedArgsList COMMA expr

State 77:
## Known stack suffix:
## ID LPAREN reqNamedArgsList
## LR(1) items:
functionCall -> ID LPAREN reqNamedArgsList . RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
reqNamedArgsList -> reqNamedArgsList . COMMA ID EQ expr [ RPAREN COMMA ]
## Transitions:
-- On RPAREN shift to state 78
-- On COMMA shift to state 79
## Reductions:

State 78:
## Known stack suffix:
## ID LPAREN reqNamedArgsList RPAREN
## LR(1) items:
functionCall -> ID LPAREN reqNamedArgsList RPAREN . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production functionCall -> ID LPAREN reqNamedArgsList RPAREN

State 79:
## Known stack suffix:
## reqNamedArgsList COMMA
## LR(1) items:
reqNamedArgsList -> reqNamedArgsList COMMA . ID EQ expr [ RPAREN COMMA ]
## Transitions:
-- On ID shift to state 80
## Reductions:

State 80:
## Known stack suffix:
## reqNamedArgsList COMMA ID
## LR(1) items:
reqNamedArgsList -> reqNamedArgsList COMMA ID . EQ expr [ RPAREN COMMA ]
## Transitions:
-- On EQ shift to state 81
## Reductions:

State 81:
## Known stack suffix:
## reqNamedArgsList COMMA ID EQ
## LR(1) items:
reqNamedArgsList -> reqNamedArgsList COMMA ID EQ . expr [ RPAREN COMMA ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 82
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:

State 82:
## Known stack suffix:
## reqNamedArgsList COMMA ID EQ expr
## LR(1) items:
expr -> expr . LAND expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
reqNamedArgsList -> reqNamedArgsList COMMA ID EQ expr . [ RPAREN COMMA ]
## Transitions:
-- On SUB shift to state 32
-- On NEQ shift to state 44
-- On MUL shift to state 34
-- On MOD shift to state 39
-- On LTE shift to state 46
-- On LT shift to state 50
-- On LOR shift to state 56
-- On LAND shift to state 64
-- On GTE shift to state 52
-- On GT shift to state 54
-- On DIV shift to state 41
-- On DEQ shift to state 58
-- On BOR shift to state 60
-- On BAND shift to state 62
-- On ADD shift to state 48
## Reductions:
-- On RPAREN COMMA
--   reduce production reqNamedArgsList -> reqNamedArgsList COMMA ID EQ expr

State 83:
## Known stack suffix:
## expr
## LR(1) items:
expr -> expr . LAND expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
reqUnnamedArgsList -> expr . [ RPAREN COMMA ]
## Transitions:
-- On SUB shift to state 32
-- On NEQ shift to state 44
-- On MUL shift to state 34
-- On MOD shift to state 39
-- On LTE shift to state 46
-- On LT shift to state 50
-- On LOR shift to state 56
-- On LAND shift to state 64
-- On GTE shift to state 52
-- On GT shift to state 54
-- On DIV shift to state 41
-- On DEQ shift to state 58
-- On BOR shift to state 60
-- On BAND shift to state 62
-- On ADD shift to state 48
## Reductions:
-- On RPAREN COMMA
--   reduce production reqUnnamedArgsList -> expr

State 84:
## Known stack suffix:
## ID EQ
## LR(1) items:
reqNamedArgsList -> ID EQ . expr [ RPAREN COMMA ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 85
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:

State 85:
## Known stack suffix:
## ID EQ expr
## LR(1) items:
expr -> expr . LAND expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
reqNamedArgsList -> ID EQ expr . [ RPAREN COMMA ]
## Transitions:
-- On SUB shift to state 32
-- On NEQ shift to state 44
-- On MUL shift to state 34
-- On MOD shift to state 39
-- On LTE shift to state 46
-- On LT shift to state 50
-- On LOR shift to state 56
-- On LAND shift to state 64
-- On GTE shift to state 52
-- On GT shift to state 54
-- On DIV shift to state 41
-- On DEQ shift to state 58
-- On BOR shift to state 60
-- On BAND shift to state 62
-- On ADD shift to state 48
## Reductions:
-- On RPAREN COMMA
--   reduce production reqNamedArgsList -> ID EQ expr

State 86:
## Known stack suffix:
## sourceList PERIOD ID LPAREN reqUnnamedArgsList
## LR(1) items:
functionCall -> sourceList PERIOD ID LPAREN reqUnnamedArgsList . RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
reqUnnamedArgsList -> reqUnnamedArgsList . COMMA expr [ RPAREN COMMA ]
## Transitions:
-- On RPAREN shift to state 87
-- On COMMA shift to state 75
## Reductions:

State 87:
## Known stack suffix:
## sourceList PERIOD ID LPAREN reqUnnamedArgsList RPAREN
## LR(1) items:
functionCall -> sourceList PERIOD ID LPAREN reqUnnamedArgsList RPAREN . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production functionCall -> sourceList PERIOD ID LPAREN reqUnnamedArgsList RPAREN

State 88:
## Known stack suffix:
## sourceList PERIOD ID LPAREN reqNamedArgsList
## LR(1) items:
functionCall -> sourceList PERIOD ID LPAREN reqNamedArgsList . RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
reqNamedArgsList -> reqNamedArgsList . COMMA ID EQ expr [ RPAREN COMMA ]
## Transitions:
-- On RPAREN shift to state 89
-- On COMMA shift to state 79
## Reductions:

State 89:
## Known stack suffix:
## sourceList PERIOD ID LPAREN reqNamedArgsList RPAREN
## LR(1) items:
functionCall -> sourceList PERIOD ID LPAREN reqNamedArgsList RPAREN . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production functionCall -> sourceList PERIOD ID LPAREN reqNamedArgsList RPAREN

State 90:
## Known stack suffix:
## ADD expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> ADD expr . [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On MUL shift to state 34
-- On MOD shift to state 39
-- On DIV shift to state 41
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN NEQ LTE LT LOR LAND GTE GT EOF DEQ COMMA BOR BAND ADD
--   reduce production expr -> ADD expr

State 91:
## Known stack suffix:
## BNOT expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> BNOT expr . [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production expr -> BNOT expr

State 92:
## Known stack suffix:
## ID LSBRAC expr
## LR(1) items:
expr -> expr . LAND expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LOR expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BAND expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BOR expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GT expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LT expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GTE expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LTE expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . ADD expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . SUB expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MUL expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MOD expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DIV expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
primary -> ID LSBRAC expr . RSBRAC [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 32
-- On RSBRAC shift to state 93
-- On NEQ shift to state 44
-- On MUL shift to state 34
-- On MOD shift to state 39
-- On LTE shift to state 46
-- On LT shift to state 50
-- On LOR shift to state 56
-- On LAND shift to state 64
-- On GTE shift to state 52
-- On GT shift to state 54
-- On DIV shift to state 41
-- On DEQ shift to state 58
-- On BOR shift to state 60
-- On BAND shift to state 62
-- On ADD shift to state 48
## Reductions:

State 93:
## Known stack suffix:
## ID LSBRAC expr RSBRAC
## LR(1) items:
primary -> ID LSBRAC expr RSBRAC . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production primary -> ID LSBRAC expr RSBRAC

State 94:
## Known stack suffix:
## LNOT expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> LNOT expr . [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production expr -> LNOT expr

State 95:
## Known stack suffix:
## LPAREN INT
## LR(1) items:
cast -> LPAREN INT . RPAREN [ SUB STR_LIT NULL MODULE_ID LSBRAC LPAREN LNOT INT_LIT ID CHAR_LIT BOOL_LIT BNOT ADD ]
## Transitions:
-- On RPAREN shift to state 96
## Reductions:

State 96:
## Known stack suffix:
## LPAREN INT RPAREN
## LR(1) items:
cast -> LPAREN INT RPAREN . [ SUB STR_LIT NULL MODULE_ID LSBRAC LPAREN LNOT INT_LIT ID CHAR_LIT BOOL_LIT BNOT ADD ]
## Transitions:
## Reductions:
-- On SUB STR_LIT NULL MODULE_ID LSBRAC LPAREN LNOT INT_LIT ID CHAR_LIT BOOL_LIT BNOT ADD
--   reduce production cast -> LPAREN INT RPAREN

State 97:
## Known stack suffix:
## LPAREN CHAR
## LR(1) items:
cast -> LPAREN CHAR . RPAREN [ SUB STR_LIT NULL MODULE_ID LSBRAC LPAREN LNOT INT_LIT ID CHAR_LIT BOOL_LIT BNOT ADD ]
## Transitions:
-- On RPAREN shift to state 98
## Reductions:

State 98:
## Known stack suffix:
## LPAREN CHAR RPAREN
## LR(1) items:
cast -> LPAREN CHAR RPAREN . [ SUB STR_LIT NULL MODULE_ID LSBRAC LPAREN LNOT INT_LIT ID CHAR_LIT BOOL_LIT BNOT ADD ]
## Transitions:
## Reductions:
-- On SUB STR_LIT NULL MODULE_ID LSBRAC LPAREN LNOT INT_LIT ID CHAR_LIT BOOL_LIT BNOT ADD
--   reduce production cast -> LPAREN CHAR RPAREN

State 99:
## Known stack suffix:
## LPAREN expr
## LR(1) items:
expr -> expr . LAND expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LOR expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BAND expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BOR expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GT expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LT expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GTE expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LTE expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . ADD expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . SUB expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MUL expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MOD expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DIV expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
primary -> LPAREN expr . RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 32
-- On RPAREN shift to state 100
-- On NEQ shift to state 44
-- On MUL shift to state 34
-- On MOD shift to state 39
-- On LTE shift to state 46
-- On LT shift to state 50
-- On LOR shift to state 56
-- On LAND shift to state 64
-- On GTE shift to state 52
-- On GT shift to state 54
-- On DIV shift to state 41
-- On DEQ shift to state 58
-- On BOR shift to state 60
-- On BAND shift to state 62
-- On ADD shift to state 48
## Reductions:

State 100:
## Known stack suffix:
## LPAREN expr RPAREN
## LR(1) items:
primary -> LPAREN expr RPAREN . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production primary -> LPAREN expr RPAREN

State 101:
## Known stack suffix:
## reqExprList
## LR(1) items:
exprList -> reqExprList . [ RSBRAC ]
reqExprList -> reqExprList . COMMA expr [ RSBRAC COMMA ]
## Transitions:
-- On COMMA shift to state 102
## Reductions:
-- On RSBRAC
--   reduce production exprList -> reqExprList

State 102:
## Known stack suffix:
## reqExprList COMMA
## LR(1) items:
reqExprList -> reqExprList COMMA . expr [ RSBRAC COMMA ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 103
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:

State 103:
## Known stack suffix:
## reqExprList COMMA expr
## LR(1) items:
expr -> expr . LAND expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
reqExprList -> reqExprList COMMA expr . [ RSBRAC COMMA ]
## Transitions:
-- On SUB shift to state 32
-- On NEQ shift to state 44
-- On MUL shift to state 34
-- On MOD shift to state 39
-- On LTE shift to state 46
-- On LT shift to state 50
-- On LOR shift to state 56
-- On LAND shift to state 64
-- On GTE shift to state 52
-- On GT shift to state 54
-- On DIV shift to state 41
-- On DEQ shift to state 58
-- On BOR shift to state 60
-- On BAND shift to state 62
-- On ADD shift to state 48
## Reductions:
-- On RSBRAC COMMA
--   reduce production reqExprList -> reqExprList COMMA expr

State 104:
## Known stack suffix:
## LSBRAC exprList
## LR(1) items:
literal -> LSBRAC exprList . RSBRAC [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On RSBRAC shift to state 105
## Reductions:

State 105:
## Known stack suffix:
## LSBRAC exprList RSBRAC
## LR(1) items:
literal -> LSBRAC exprList RSBRAC . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production literal -> LSBRAC exprList RSBRAC

State 106:
## Known stack suffix:
## expr
## LR(1) items:
expr -> expr . LAND expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
reqExprList -> expr . [ RSBRAC COMMA ]
## Transitions:
-- On SUB shift to state 32
-- On NEQ shift to state 44
-- On MUL shift to state 34
-- On MOD shift to state 39
-- On LTE shift to state 46
-- On LT shift to state 50
-- On LOR shift to state 56
-- On LAND shift to state 64
-- On GTE shift to state 52
-- On GT shift to state 54
-- On DIV shift to state 41
-- On DEQ shift to state 58
-- On BOR shift to state 60
-- On BAND shift to state 62
-- On ADD shift to state 48
## Reductions:
-- On RSBRAC COMMA
--   reduce production reqExprList -> expr

State 107:
## Known stack suffix:
## SUB expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> SUB expr . [ SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On MUL shift to state 34
-- On MOD shift to state 39
-- On DIV shift to state 41
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN NEQ LTE LT LOR LAND GTE GT EOF DEQ COMMA BOR BAND ADD
--   reduce production expr -> SUB expr

State 108:
## Known stack suffix:
## main
## LR(1) items:
main' -> main . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept main

State 109:
## Known stack suffix:
## expr
## LR(1) items:
expr -> expr . LAND expr [ SUB NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ BOR BAND ADD ]
expr -> expr . LOR expr [ SUB NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ BOR BAND ADD ]
expr -> expr . BAND expr [ SUB NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ BOR BAND ADD ]
expr -> expr . BOR expr [ SUB NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ BOR BAND ADD ]
expr -> expr . GT expr [ SUB NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ BOR BAND ADD ]
expr -> expr . LT expr [ SUB NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ BOR BAND ADD ]
expr -> expr . GTE expr [ SUB NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ BOR BAND ADD ]
expr -> expr . LTE expr [ SUB NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ BOR BAND ADD ]
expr -> expr . ADD expr [ SUB NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ BOR BAND ADD ]
expr -> expr . SUB expr [ SUB NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ BOR BAND ADD ]
expr -> expr . MUL expr [ SUB NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ BOR BAND ADD ]
expr -> expr . MOD expr [ SUB NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ BOR BAND ADD ]
expr -> expr . DIV expr [ SUB NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ BOR BAND ADD ]
main -> expr . EOF [ # ]
## Transitions:
-- On SUB shift to state 32
-- On NEQ shift to state 44
-- On MUL shift to state 34
-- On MOD shift to state 39
-- On LTE shift to state 46
-- On LT shift to state 50
-- On LOR shift to state 56
-- On LAND shift to state 64
-- On GTE shift to state 52
-- On GT shift to state 54
-- On EOF shift to state 110
-- On DIV shift to state 41
-- On DEQ shift to state 58
-- On BOR shift to state 60
-- On BAND shift to state 62
-- On ADD shift to state 48
## Reductions:

State 110:
## Known stack suffix:
## expr EOF
## LR(1) items:
main -> expr EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production main -> expr EOF

State 111:
## Known stack suffix:
##
## LR(1) items:
parseInterface' -> . parseInterface [ # ]
## Transitions:
-- On parseInterface shift to state 112
-- On importList shift to state 113
## Reductions:
-- On VOID TYPE MODULE_ID INT IMPORT ID EOF CONST CHAR BOOL
--   reduce production importList ->

State 112:
## Known stack suffix:
## parseInterface
## LR(1) items:
parseInterface' -> parseInterface . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept parseInterface

State 113:
## Known stack suffix:
## importList
## LR(1) items:
importList -> importList . IMPORT sourceList [ VOID TYPE MODULE_ID INT IMPORT ID EOF CONST CHAR BOOL ]
parseInterface -> importList . interfaceFile EOF [ # ]
## Transitions:
-- On IMPORT shift to state 114
-- On interfaceFile shift to state 117
## Reductions:
-- On VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL
--   reduce production interfaceFile ->

State 114:
## Known stack suffix:
## importList IMPORT
## LR(1) items:
importList -> importList IMPORT . sourceList [ VOID TYPE MODULE_ID INT IMPORT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On MODULE_ID shift to state 4
-- On sourceList shift to state 115
## Reductions:

State 115:
## Known stack suffix:
## importList IMPORT sourceList
## LR(1) items:
importList -> importList IMPORT sourceList . [ VOID TYPE MODULE_ID INT IMPORT ID EOF CONST CHAR BOOL ]
sourceList -> sourceList . PERIOD MODULE_ID [ VOID TYPE PERIOD MODULE_ID INT IMPORT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On PERIOD shift to state 116
## Reductions:
-- On VOID TYPE MODULE_ID INT IMPORT ID EOF CONST CHAR BOOL
--   reduce production importList -> importList IMPORT sourceList

State 116:
## Known stack suffix:
## sourceList PERIOD
## LR(1) items:
sourceList -> sourceList PERIOD . MODULE_ID [ VOID TYPE PERIOD MODULE_ID INT IMPORT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On MODULE_ID shift to state 19
## Reductions:

State 117:
## Known stack suffix:
## importList interfaceFile
## LR(1) items:
interfaceFile -> interfaceFile . varDecl SCOLON [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
interfaceFile -> interfaceFile . functionDecl SCOLON [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
interfaceFile -> interfaceFile . typeExpose [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
interfaceFile -> interfaceFile . typeDef [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
parseInterface -> importList interfaceFile . EOF [ # ]
## Transitions:
-- On VOID shift to state 118
-- On TYPE shift to state 150
-- On MODULE_ID shift to state 4
-- On INT shift to state 121
-- On ID shift to state 160
-- On EOF shift to state 164
-- On CONST shift to state 129
-- On CHAR shift to state 130
-- On BOOL shift to state 132
-- On varDecl shift to state 165
-- On typeExpose shift to state 167
-- On typeDef shift to state 168
-- On sourceList shift to state 134
-- On reqDataTypeList shift to state 169
-- On functionDecl shift to state 176
-- On dataType shift to state 178
## Reductions:

State 118:
## Known stack suffix:
## VOID
## LR(1) items:
functionDecl -> VOID . ID LPAREN varDeclList RPAREN [ SCOLON LCBRAC ]
## Transitions:
-- On ID shift to state 119
## Reductions:

State 119:
## Known stack suffix:
## VOID ID
## LR(1) items:
functionDecl -> VOID ID . LPAREN varDeclList RPAREN [ SCOLON LCBRAC ]
## Transitions:
-- On LPAREN shift to state 120
## Reductions:

State 120:
## Known stack suffix:
## VOID ID LPAREN
## LR(1) items:
functionDecl -> VOID ID LPAREN . varDeclList RPAREN [ SCOLON LCBRAC ]
## Transitions:
-- On MODULE_ID shift to state 4
-- On INT shift to state 121
-- On ID shift to state 125
-- On CONST shift to state 129
-- On CHAR shift to state 130
-- On BOOL shift to state 132
-- On varDeclList shift to state 142
-- On varDecl shift to state 144
-- On sourceList shift to state 134
-- On reqVarDeclList shift to state 145
-- On dataType shift to state 148
## Reductions:
-- On RPAREN
--   reduce production varDeclList ->

State 121:
## Known stack suffix:
## INT
## LR(1) items:
dataType -> INT . kleenelrsbrac [ ID COMMA ]
## Transitions:
-- On kleenelrsbrac shift to state 122
## Reductions:
-- On LSBRAC ID COMMA
--   reduce production kleenelrsbrac ->

State 122:
## Known stack suffix:
## INT kleenelrsbrac
## LR(1) items:
dataType -> INT kleenelrsbrac . [ ID COMMA ]
kleenelrsbrac -> kleenelrsbrac . LSBRAC RSBRAC [ LSBRAC ID COMMA ]
## Transitions:
-- On LSBRAC shift to state 123
## Reductions:
-- On ID COMMA
--   reduce production dataType -> INT kleenelrsbrac

State 123:
## Known stack suffix:
## kleenelrsbrac LSBRAC
## LR(1) items:
kleenelrsbrac -> kleenelrsbrac LSBRAC . RSBRAC [ LSBRAC ID COMMA ]
## Transitions:
-- On RSBRAC shift to state 124
## Reductions:

State 124:
## Known stack suffix:
## kleenelrsbrac LSBRAC RSBRAC
## LR(1) items:
kleenelrsbrac -> kleenelrsbrac LSBRAC RSBRAC . [ LSBRAC ID COMMA ]
## Transitions:
## Reductions:
-- On LSBRAC ID COMMA
--   reduce production kleenelrsbrac -> kleenelrsbrac LSBRAC RSBRAC

State 125:
## Known stack suffix:
## ID
## LR(1) items:
dataType -> ID . [ ID COMMA ]
dataType -> ID . LSBRAC RSBRAC kleenelrsbrac [ ID COMMA ]
## Transitions:
-- On LSBRAC shift to state 126
## Reductions:
-- On ID COMMA
--   reduce production dataType -> ID

State 126:
## Known stack suffix:
## ID LSBRAC
## LR(1) items:
dataType -> ID LSBRAC . RSBRAC kleenelrsbrac [ ID COMMA ]
## Transitions:
-- On RSBRAC shift to state 127
## Reductions:

State 127:
## Known stack suffix:
## ID LSBRAC RSBRAC
## LR(1) items:
dataType -> ID LSBRAC RSBRAC . kleenelrsbrac [ ID COMMA ]
## Transitions:
-- On kleenelrsbrac shift to state 128
## Reductions:
-- On LSBRAC ID COMMA
--   reduce production kleenelrsbrac ->

State 128:
## Known stack suffix:
## ID LSBRAC RSBRAC kleenelrsbrac
## LR(1) items:
dataType -> ID LSBRAC RSBRAC kleenelrsbrac . [ ID COMMA ]
kleenelrsbrac -> kleenelrsbrac . LSBRAC RSBRAC [ LSBRAC ID COMMA ]
## Transitions:
-- On LSBRAC shift to state 123
## Reductions:
-- On ID COMMA
--   reduce production dataType -> ID LSBRAC RSBRAC kleenelrsbrac

State 129:
## Known stack suffix:
## CONST
## LR(1) items:
varDecl -> CONST . dataType ID [ SCOLON RPAREN RCBRAC EQ COMMA ]
## Transitions:
-- On MODULE_ID shift to state 4
-- On INT shift to state 121
-- On ID shift to state 125
-- On CHAR shift to state 130
-- On BOOL shift to state 132
-- On sourceList shift to state 134
-- On dataType shift to state 140
## Reductions:

State 130:
## Known stack suffix:
## CHAR
## LR(1) items:
dataType -> CHAR . kleenelrsbrac [ ID COMMA ]
## Transitions:
-- On kleenelrsbrac shift to state 131
## Reductions:
-- On LSBRAC ID COMMA
--   reduce production kleenelrsbrac ->

State 131:
## Known stack suffix:
## CHAR kleenelrsbrac
## LR(1) items:
dataType -> CHAR kleenelrsbrac . [ ID COMMA ]
kleenelrsbrac -> kleenelrsbrac . LSBRAC RSBRAC [ LSBRAC ID COMMA ]
## Transitions:
-- On LSBRAC shift to state 123
## Reductions:
-- On ID COMMA
--   reduce production dataType -> CHAR kleenelrsbrac

State 132:
## Known stack suffix:
## BOOL
## LR(1) items:
dataType -> BOOL . kleenelrsbrac [ ID COMMA ]
## Transitions:
-- On kleenelrsbrac shift to state 133
## Reductions:
-- On LSBRAC ID COMMA
--   reduce production kleenelrsbrac ->

State 133:
## Known stack suffix:
## BOOL kleenelrsbrac
## LR(1) items:
dataType -> BOOL kleenelrsbrac . [ ID COMMA ]
kleenelrsbrac -> kleenelrsbrac . LSBRAC RSBRAC [ LSBRAC ID COMMA ]
## Transitions:
-- On LSBRAC shift to state 123
## Reductions:
-- On ID COMMA
--   reduce production dataType -> BOOL kleenelrsbrac

State 134:
## Known stack suffix:
## sourceList
## LR(1) items:
dataType -> sourceList . PERIOD ID [ ID COMMA ]
dataType -> sourceList . PERIOD ID LSBRAC RSBRAC kleenelrsbrac [ ID COMMA ]
sourceList -> sourceList . PERIOD MODULE_ID [ PERIOD ]
## Transitions:
-- On PERIOD shift to state 135
## Reductions:

State 135:
## Known stack suffix:
## sourceList PERIOD
## LR(1) items:
dataType -> sourceList PERIOD . ID [ ID COMMA ]
dataType -> sourceList PERIOD . ID LSBRAC RSBRAC kleenelrsbrac [ ID COMMA ]
sourceList -> sourceList PERIOD . MODULE_ID [ PERIOD ]
## Transitions:
-- On MODULE_ID shift to state 19
-- On ID shift to state 136
## Reductions:

State 136:
## Known stack suffix:
## sourceList PERIOD ID
## LR(1) items:
dataType -> sourceList PERIOD ID . [ ID COMMA ]
dataType -> sourceList PERIOD ID . LSBRAC RSBRAC kleenelrsbrac [ ID COMMA ]
## Transitions:
-- On LSBRAC shift to state 137
## Reductions:
-- On ID COMMA
--   reduce production dataType -> sourceList PERIOD ID

State 137:
## Known stack suffix:
## sourceList PERIOD ID LSBRAC
## LR(1) items:
dataType -> sourceList PERIOD ID LSBRAC . RSBRAC kleenelrsbrac [ ID COMMA ]
## Transitions:
-- On RSBRAC shift to state 138
## Reductions:

State 138:
## Known stack suffix:
## sourceList PERIOD ID LSBRAC RSBRAC
## LR(1) items:
dataType -> sourceList PERIOD ID LSBRAC RSBRAC . kleenelrsbrac [ ID COMMA ]
## Transitions:
-- On kleenelrsbrac shift to state 139
## Reductions:
-- On LSBRAC ID COMMA
--   reduce production kleenelrsbrac ->

State 139:
## Known stack suffix:
## sourceList PERIOD ID LSBRAC RSBRAC kleenelrsbrac
## LR(1) items:
dataType -> sourceList PERIOD ID LSBRAC RSBRAC kleenelrsbrac . [ ID COMMA ]
kleenelrsbrac -> kleenelrsbrac . LSBRAC RSBRAC [ LSBRAC ID COMMA ]
## Transitions:
-- On LSBRAC shift to state 123
## Reductions:
-- On ID COMMA
--   reduce production dataType -> sourceList PERIOD ID LSBRAC RSBRAC kleenelrsbrac

State 140:
## Known stack suffix:
## CONST dataType
## LR(1) items:
varDecl -> CONST dataType . ID [ SCOLON RPAREN RCBRAC EQ COMMA ]
## Transitions:
-- On ID shift to state 141
## Reductions:

State 141:
## Known stack suffix:
## CONST dataType ID
## LR(1) items:
varDecl -> CONST dataType ID . [ SCOLON RPAREN RCBRAC EQ COMMA ]
## Transitions:
## Reductions:
-- On SCOLON RPAREN RCBRAC EQ COMMA
--   reduce production varDecl -> CONST dataType ID

State 142:
## Known stack suffix:
## VOID ID LPAREN varDeclList
## LR(1) items:
functionDecl -> VOID ID LPAREN varDeclList . RPAREN [ SCOLON LCBRAC ]
## Transitions:
-- On RPAREN shift to state 143
## Reductions:

State 143:
## Known stack suffix:
## VOID ID LPAREN varDeclList RPAREN
## LR(1) items:
functionDecl -> VOID ID LPAREN varDeclList RPAREN . [ SCOLON LCBRAC ]
## Transitions:
## Reductions:
-- On SCOLON LCBRAC
--   reduce production functionDecl -> VOID ID LPAREN varDeclList RPAREN

State 144:
## Known stack suffix:
## varDecl
## LR(1) items:
reqVarDeclList -> varDecl . [ RPAREN RCBRAC COMMA ]
## Transitions:
## Reductions:
-- On RPAREN RCBRAC COMMA
--   reduce production reqVarDeclList -> varDecl

State 145:
## Known stack suffix:
## reqVarDeclList
## LR(1) items:
reqVarDeclList -> reqVarDeclList . COMMA varDecl [ RPAREN RCBRAC COMMA ]
varDeclList -> reqVarDeclList . [ RPAREN RCBRAC ]
## Transitions:
-- On COMMA shift to state 146
## Reductions:
-- On RPAREN RCBRAC
--   reduce production varDeclList -> reqVarDeclList

State 146:
## Known stack suffix:
## reqVarDeclList COMMA
## LR(1) items:
reqVarDeclList -> reqVarDeclList COMMA . varDecl [ RPAREN RCBRAC COMMA ]
## Transitions:
-- On MODULE_ID shift to state 4
-- On INT shift to state 121
-- On ID shift to state 125
-- On CONST shift to state 129
-- On CHAR shift to state 130
-- On BOOL shift to state 132
-- On varDecl shift to state 147
-- On sourceList shift to state 134
-- On dataType shift to state 148
## Reductions:

State 147:
## Known stack suffix:
## reqVarDeclList COMMA varDecl
## LR(1) items:
reqVarDeclList -> reqVarDeclList COMMA varDecl . [ RPAREN RCBRAC COMMA ]
## Transitions:
## Reductions:
-- On RPAREN RCBRAC COMMA
--   reduce production reqVarDeclList -> reqVarDeclList COMMA varDecl

State 148:
## Known stack suffix:
## dataType
## LR(1) items:
varDecl -> dataType . ID [ SCOLON RPAREN RCBRAC EQ COMMA ]
## Transitions:
-- On ID shift to state 149
## Reductions:

State 149:
## Known stack suffix:
## dataType ID
## LR(1) items:
varDecl -> dataType ID . [ SCOLON RPAREN RCBRAC EQ COMMA ]
## Transitions:
## Reductions:
-- On SCOLON RPAREN RCBRAC EQ COMMA
--   reduce production varDecl -> dataType ID

State 150:
## Known stack suffix:
## TYPE
## LR(1) items:
typeDef -> TYPE . ID EQ LCBRAC varDeclList RCBRAC [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
typeExpose -> TYPE . ID COLON LCBRAC varDeclList RCBRAC [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On ID shift to state 151
## Reductions:

State 151:
## Known stack suffix:
## TYPE ID
## LR(1) items:
typeDef -> TYPE ID . EQ LCBRAC varDeclList RCBRAC [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
typeExpose -> TYPE ID . COLON LCBRAC varDeclList RCBRAC [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On EQ shift to state 152
-- On COLON shift to state 156
## Reductions:

State 152:
## Known stack suffix:
## TYPE ID EQ
## LR(1) items:
typeDef -> TYPE ID EQ . LCBRAC varDeclList RCBRAC [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On LCBRAC shift to state 153
## Reductions:

State 153:
## Known stack suffix:
## TYPE ID EQ LCBRAC
## LR(1) items:
typeDef -> TYPE ID EQ LCBRAC . varDeclList RCBRAC [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On MODULE_ID shift to state 4
-- On INT shift to state 121
-- On ID shift to state 125
-- On CONST shift to state 129
-- On CHAR shift to state 130
-- On BOOL shift to state 132
-- On varDeclList shift to state 154
-- On varDecl shift to state 144
-- On sourceList shift to state 134
-- On reqVarDeclList shift to state 145
-- On dataType shift to state 148
## Reductions:
-- On RCBRAC
--   reduce production varDeclList ->

State 154:
## Known stack suffix:
## TYPE ID EQ LCBRAC varDeclList
## LR(1) items:
typeDef -> TYPE ID EQ LCBRAC varDeclList . RCBRAC [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On RCBRAC shift to state 155
## Reductions:

State 155:
## Known stack suffix:
## TYPE ID EQ LCBRAC varDeclList RCBRAC
## LR(1) items:
typeDef -> TYPE ID EQ LCBRAC varDeclList RCBRAC . [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
## Reductions:
-- On VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL
--   reduce production typeDef -> TYPE ID EQ LCBRAC varDeclList RCBRAC

State 156:
## Known stack suffix:
## TYPE ID COLON
## LR(1) items:
typeExpose -> TYPE ID COLON . LCBRAC varDeclList RCBRAC [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On LCBRAC shift to state 157
## Reductions:

State 157:
## Known stack suffix:
## TYPE ID COLON LCBRAC
## LR(1) items:
typeExpose -> TYPE ID COLON LCBRAC . varDeclList RCBRAC [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On MODULE_ID shift to state 4
-- On INT shift to state 121
-- On ID shift to state 125
-- On CONST shift to state 129
-- On CHAR shift to state 130
-- On BOOL shift to state 132
-- On varDeclList shift to state 158
-- On varDecl shift to state 144
-- On sourceList shift to state 134
-- On reqVarDeclList shift to state 145
-- On dataType shift to state 148
## Reductions:
-- On RCBRAC
--   reduce production varDeclList ->

State 158:
## Known stack suffix:
## TYPE ID COLON LCBRAC varDeclList
## LR(1) items:
typeExpose -> TYPE ID COLON LCBRAC varDeclList . RCBRAC [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On RCBRAC shift to state 159
## Reductions:

State 159:
## Known stack suffix:
## TYPE ID COLON LCBRAC varDeclList RCBRAC
## LR(1) items:
typeExpose -> TYPE ID COLON LCBRAC varDeclList RCBRAC . [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
## Reductions:
-- On VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL
--   reduce production typeExpose -> TYPE ID COLON LCBRAC varDeclList RCBRAC

State 160:
## Known stack suffix:
## ID
## LR(1) items:
dataType -> ID . [ ID COMMA ]
dataType -> ID . LSBRAC RSBRAC kleenelrsbrac [ ID COMMA ]
functionDecl -> ID . LPAREN varDeclList RPAREN [ SCOLON LCBRAC ]
## Transitions:
-- On LSBRAC shift to state 126
-- On LPAREN shift to state 161
## Reductions:
-- On ID COMMA
--   reduce production dataType -> ID

State 161:
## Known stack suffix:
## ID LPAREN
## LR(1) items:
functionDecl -> ID LPAREN . varDeclList RPAREN [ SCOLON LCBRAC ]
## Transitions:
-- On MODULE_ID shift to state 4
-- On INT shift to state 121
-- On ID shift to state 125
-- On CONST shift to state 129
-- On CHAR shift to state 130
-- On BOOL shift to state 132
-- On varDeclList shift to state 162
-- On varDecl shift to state 144
-- On sourceList shift to state 134
-- On reqVarDeclList shift to state 145
-- On dataType shift to state 148
## Reductions:
-- On RPAREN
--   reduce production varDeclList ->

State 162:
## Known stack suffix:
## ID LPAREN varDeclList
## LR(1) items:
functionDecl -> ID LPAREN varDeclList . RPAREN [ SCOLON LCBRAC ]
## Transitions:
-- On RPAREN shift to state 163
## Reductions:

State 163:
## Known stack suffix:
## ID LPAREN varDeclList RPAREN
## LR(1) items:
functionDecl -> ID LPAREN varDeclList RPAREN . [ SCOLON LCBRAC ]
## Transitions:
## Reductions:
-- On SCOLON LCBRAC
--   reduce production functionDecl -> ID LPAREN varDeclList RPAREN

State 164:
## Known stack suffix:
## importList interfaceFile EOF
## LR(1) items:
parseInterface -> importList interfaceFile EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production parseInterface -> importList interfaceFile EOF

State 165:
## Known stack suffix:
## interfaceFile varDecl
## LR(1) items:
interfaceFile -> interfaceFile varDecl . SCOLON [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On SCOLON shift to state 166
## Reductions:

State 166:
## Known stack suffix:
## interfaceFile varDecl SCOLON
## LR(1) items:
interfaceFile -> interfaceFile varDecl SCOLON . [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
## Reductions:
-- On VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL
--   reduce production interfaceFile -> interfaceFile varDecl SCOLON

State 167:
## Known stack suffix:
## interfaceFile typeExpose
## LR(1) items:
interfaceFile -> interfaceFile typeExpose . [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
## Reductions:
-- On VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL
--   reduce production interfaceFile -> interfaceFile typeExpose

State 168:
## Known stack suffix:
## interfaceFile typeDef
## LR(1) items:
interfaceFile -> interfaceFile typeDef . [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
## Reductions:
-- On VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL
--   reduce production interfaceFile -> interfaceFile typeDef

State 169:
## Known stack suffix:
## reqDataTypeList
## LR(1) items:
functionDecl -> reqDataTypeList . ID LPAREN varDeclList RPAREN [ SCOLON LCBRAC ]
reqDataTypeList -> reqDataTypeList . COMMA dataType [ ID COMMA ]
## Transitions:
-- On ID shift to state 170
-- On COMMA shift to state 174
## Reductions:

State 170:
## Known stack suffix:
## reqDataTypeList ID
## LR(1) items:
functionDecl -> reqDataTypeList ID . LPAREN varDeclList RPAREN [ SCOLON LCBRAC ]
## Transitions:
-- On LPAREN shift to state 171
## Reductions:

State 171:
## Known stack suffix:
## reqDataTypeList ID LPAREN
## LR(1) items:
functionDecl -> reqDataTypeList ID LPAREN . varDeclList RPAREN [ SCOLON LCBRAC ]
## Transitions:
-- On MODULE_ID shift to state 4
-- On INT shift to state 121
-- On ID shift to state 125
-- On CONST shift to state 129
-- On CHAR shift to state 130
-- On BOOL shift to state 132
-- On varDeclList shift to state 172
-- On varDecl shift to state 144
-- On sourceList shift to state 134
-- On reqVarDeclList shift to state 145
-- On dataType shift to state 148
## Reductions:
-- On RPAREN
--   reduce production varDeclList ->

State 172:
## Known stack suffix:
## reqDataTypeList ID LPAREN varDeclList
## LR(1) items:
functionDecl -> reqDataTypeList ID LPAREN varDeclList . RPAREN [ SCOLON LCBRAC ]
## Transitions:
-- On RPAREN shift to state 173
## Reductions:

State 173:
## Known stack suffix:
## reqDataTypeList ID LPAREN varDeclList RPAREN
## LR(1) items:
functionDecl -> reqDataTypeList ID LPAREN varDeclList RPAREN . [ SCOLON LCBRAC ]
## Transitions:
## Reductions:
-- On SCOLON LCBRAC
--   reduce production functionDecl -> reqDataTypeList ID LPAREN varDeclList RPAREN

State 174:
## Known stack suffix:
## reqDataTypeList COMMA
## LR(1) items:
reqDataTypeList -> reqDataTypeList COMMA . dataType [ ID COMMA ]
## Transitions:
-- On MODULE_ID shift to state 4
-- On INT shift to state 121
-- On ID shift to state 125
-- On CHAR shift to state 130
-- On BOOL shift to state 132
-- On sourceList shift to state 134
-- On dataType shift to state 175
## Reductions:

State 175:
## Known stack suffix:
## reqDataTypeList COMMA dataType
## LR(1) items:
reqDataTypeList -> reqDataTypeList COMMA dataType . [ ID COMMA ]
## Transitions:
## Reductions:
-- On ID COMMA
--   reduce production reqDataTypeList -> reqDataTypeList COMMA dataType

State 176:
## Known stack suffix:
## interfaceFile functionDecl
## LR(1) items:
interfaceFile -> interfaceFile functionDecl . SCOLON [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On SCOLON shift to state 177
## Reductions:

State 177:
## Known stack suffix:
## interfaceFile functionDecl SCOLON
## LR(1) items:
interfaceFile -> interfaceFile functionDecl SCOLON . [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
## Reductions:
-- On VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL
--   reduce production interfaceFile -> interfaceFile functionDecl SCOLON

State 178:
## Known stack suffix:
## dataType
## LR(1) items:
functionDecl -> dataType . ID LPAREN varDeclList RPAREN [ SCOLON LCBRAC ]
reqDataTypeList -> dataType . COMMA dataType [ ID COMMA ]
varDecl -> dataType . ID [ SCOLON EQ ]
## Transitions:
-- On ID shift to state 179
-- On COMMA shift to state 183
## Reductions:

State 179:
## Known stack suffix:
## dataType ID
## LR(1) items:
functionDecl -> dataType ID . LPAREN varDeclList RPAREN [ SCOLON LCBRAC ]
varDecl -> dataType ID . [ SCOLON EQ ]
## Transitions:
-- On LPAREN shift to state 180
## Reductions:
-- On SCOLON EQ
--   reduce production varDecl -> dataType ID

State 180:
## Known stack suffix:
## dataType ID LPAREN
## LR(1) items:
functionDecl -> dataType ID LPAREN . varDeclList RPAREN [ SCOLON LCBRAC ]
## Transitions:
-- On MODULE_ID shift to state 4
-- On INT shift to state 121
-- On ID shift to state 125
-- On CONST shift to state 129
-- On CHAR shift to state 130
-- On BOOL shift to state 132
-- On varDeclList shift to state 181
-- On varDecl shift to state 144
-- On sourceList shift to state 134
-- On reqVarDeclList shift to state 145
-- On dataType shift to state 148
## Reductions:
-- On RPAREN
--   reduce production varDeclList ->

State 181:
## Known stack suffix:
## dataType ID LPAREN varDeclList
## LR(1) items:
functionDecl -> dataType ID LPAREN varDeclList . RPAREN [ SCOLON LCBRAC ]
## Transitions:
-- On RPAREN shift to state 182
## Reductions:

State 182:
## Known stack suffix:
## dataType ID LPAREN varDeclList RPAREN
## LR(1) items:
functionDecl -> dataType ID LPAREN varDeclList RPAREN . [ SCOLON LCBRAC ]
## Transitions:
## Reductions:
-- On SCOLON LCBRAC
--   reduce production functionDecl -> dataType ID LPAREN varDeclList RPAREN

State 183:
## Known stack suffix:
## dataType COMMA
## LR(1) items:
reqDataTypeList -> dataType COMMA . dataType [ ID COMMA ]
## Transitions:
-- On MODULE_ID shift to state 4
-- On INT shift to state 121
-- On ID shift to state 125
-- On CHAR shift to state 130
-- On BOOL shift to state 132
-- On sourceList shift to state 134
-- On dataType shift to state 184
## Reductions:

State 184:
## Known stack suffix:
## dataType COMMA dataType
## LR(1) items:
reqDataTypeList -> dataType COMMA dataType . [ ID COMMA ]
## Transitions:
## Reductions:
-- On ID COMMA
--   reduce production reqDataTypeList -> dataType COMMA dataType

State 185:
## Known stack suffix:
##
## LR(1) items:
parseModule' -> . parseModule [ # ]
## Transitions:
-- On parseModule shift to state 186
-- On importList shift to state 187
## Reductions:
-- On VOID TYPE MODULE_ID INT IMPORT ID EOF CONST CHAR BOOL
--   reduce production importList ->

State 186:
## Known stack suffix:
## parseModule
## LR(1) items:
parseModule' -> parseModule . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept parseModule

State 187:
## Known stack suffix:
## importList
## LR(1) items:
importList -> importList . IMPORT sourceList [ VOID TYPE MODULE_ID INT IMPORT ID EOF CONST CHAR BOOL ]
parseModule -> importList . moduleFile EOF [ # ]
## Transitions:
-- On IMPORT shift to state 114
-- On moduleFile shift to state 188
## Reductions:
-- On VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL
--   reduce production moduleFile ->

State 188:
## Known stack suffix:
## importList moduleFile
## LR(1) items:
moduleFile -> moduleFile . functionDef [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
moduleFile -> moduleFile . varDecl SCOLON [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
moduleFile -> moduleFile . varDecl EQ constArg SCOLON [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
moduleFile -> moduleFile . typeDef [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
parseModule -> importList moduleFile . EOF [ # ]
## Transitions:
-- On VOID shift to state 118
-- On TYPE shift to state 189
-- On MODULE_ID shift to state 4
-- On INT shift to state 121
-- On ID shift to state 160
-- On EOF shift to state 191
-- On CONST shift to state 129
-- On CHAR shift to state 130
-- On BOOL shift to state 132
-- On varDecl shift to state 192
-- On typeDef shift to state 225
-- On sourceList shift to state 134
-- On reqDataTypeList shift to state 169
-- On functionDef shift to state 226
-- On functionDecl shift to state 227
-- On dataType shift to state 178
## Reductions:

State 189:
## Known stack suffix:
## TYPE
## LR(1) items:
typeDef -> TYPE . ID EQ LCBRAC varDeclList RCBRAC [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On ID shift to state 190
## Reductions:

State 190:
## Known stack suffix:
## TYPE ID
## LR(1) items:
typeDef -> TYPE ID . EQ LCBRAC varDeclList RCBRAC [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On EQ shift to state 152
## Reductions:

State 191:
## Known stack suffix:
## importList moduleFile EOF
## LR(1) items:
parseModule -> importList moduleFile EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production parseModule -> importList moduleFile EOF

State 192:
## Known stack suffix:
## moduleFile varDecl
## LR(1) items:
moduleFile -> moduleFile varDecl . SCOLON [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
moduleFile -> moduleFile varDecl . EQ constArg SCOLON [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On SCOLON shift to state 193
-- On EQ shift to state 194
## Reductions:

State 193:
## Known stack suffix:
## moduleFile varDecl SCOLON
## LR(1) items:
moduleFile -> moduleFile varDecl SCOLON . [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
## Reductions:
-- On VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL
--   reduce production moduleFile -> moduleFile varDecl SCOLON

State 194:
## Known stack suffix:
## moduleFile varDecl EQ
## LR(1) items:
moduleFile -> moduleFile varDecl EQ . constArg SCOLON [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 195
-- On INT_LIT shift to state 8
-- On ID shift to state 196
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On sourceList shift to state 200
-- On constConstructorCall shift to state 208
-- On constArray shift to state 209
-- On constArg shift to state 223
-- On baseLiteral shift to state 211
## Reductions:

State 195:
## Known stack suffix:
## LSBRAC
## LR(1) items:
constArray -> LSBRAC . constArgList RSBRAC [ SCOLON RSBRAC RPAREN COMMA ]
## Transitions:
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 195
-- On INT_LIT shift to state 8
-- On ID shift to state 196
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On sourceList shift to state 200
-- On reqConstArgList shift to state 217
-- On constConstructorCall shift to state 208
-- On constArray shift to state 209
-- On constArgList shift to state 220
-- On constArg shift to state 222
-- On baseLiteral shift to state 211
## Reductions:
-- On RSBRAC
--   reduce production constArgList ->

State 196:
## Known stack suffix:
## ID
## LR(1) items:
constConstructorCall -> ID . LPAREN constNamedArgsList RPAREN [ SCOLON RSBRAC RPAREN COMMA ]
## Transitions:
-- On LPAREN shift to state 197
## Reductions:

State 197:
## Known stack suffix:
## ID LPAREN
## LR(1) items:
constConstructorCall -> ID LPAREN . constNamedArgsList RPAREN [ SCOLON RSBRAC RPAREN COMMA ]
## Transitions:
-- On ID shift to state 198
-- On reqConstNamedArgsList shift to state 204
-- On constNamedArgsList shift to state 215
## Reductions:
-- On RPAREN
--   reduce production constNamedArgsList ->

State 198:
## Known stack suffix:
## ID
## LR(1) items:
reqConstNamedArgsList -> ID . EQ constArg [ RPAREN COMMA ]
## Transitions:
-- On EQ shift to state 199
## Reductions:

State 199:
## Known stack suffix:
## ID EQ
## LR(1) items:
reqConstNamedArgsList -> ID EQ . constArg [ RPAREN COMMA ]
## Transitions:
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 195
-- On INT_LIT shift to state 8
-- On ID shift to state 196
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On sourceList shift to state 200
-- On constConstructorCall shift to state 208
-- On constArray shift to state 209
-- On constArg shift to state 214
-- On baseLiteral shift to state 211
## Reductions:

State 200:
## Known stack suffix:
## sourceList
## LR(1) items:
constConstructorCall -> sourceList . PERIOD ID LPAREN constNamedArgsList RPAREN [ SCOLON RSBRAC RPAREN COMMA ]
sourceList -> sourceList . PERIOD MODULE_ID [ PERIOD ]
## Transitions:
-- On PERIOD shift to state 201
## Reductions:

State 201:
## Known stack suffix:
## sourceList PERIOD
## LR(1) items:
constConstructorCall -> sourceList PERIOD . ID LPAREN constNamedArgsList RPAREN [ SCOLON RSBRAC RPAREN COMMA ]
sourceList -> sourceList PERIOD . MODULE_ID [ PERIOD ]
## Transitions:
-- On MODULE_ID shift to state 19
-- On ID shift to state 202
## Reductions:

State 202:
## Known stack suffix:
## sourceList PERIOD ID
## LR(1) items:
constConstructorCall -> sourceList PERIOD ID . LPAREN constNamedArgsList RPAREN [ SCOLON RSBRAC RPAREN COMMA ]
## Transitions:
-- On LPAREN shift to state 203
## Reductions:

State 203:
## Known stack suffix:
## sourceList PERIOD ID LPAREN
## LR(1) items:
constConstructorCall -> sourceList PERIOD ID LPAREN . constNamedArgsList RPAREN [ SCOLON RSBRAC RPAREN COMMA ]
## Transitions:
-- On ID shift to state 198
-- On reqConstNamedArgsList shift to state 204
-- On constNamedArgsList shift to state 212
## Reductions:
-- On RPAREN
--   reduce production constNamedArgsList ->

State 204:
## Known stack suffix:
## reqConstNamedArgsList
## LR(1) items:
constNamedArgsList -> reqConstNamedArgsList . [ RPAREN ]
reqConstNamedArgsList -> reqConstNamedArgsList . COMMA ID EQ constArg [ RPAREN COMMA ]
## Transitions:
-- On COMMA shift to state 205
## Reductions:
-- On RPAREN
--   reduce production constNamedArgsList -> reqConstNamedArgsList

State 205:
## Known stack suffix:
## reqConstNamedArgsList COMMA
## LR(1) items:
reqConstNamedArgsList -> reqConstNamedArgsList COMMA . ID EQ constArg [ RPAREN COMMA ]
## Transitions:
-- On ID shift to state 206
## Reductions:

State 206:
## Known stack suffix:
## reqConstNamedArgsList COMMA ID
## LR(1) items:
reqConstNamedArgsList -> reqConstNamedArgsList COMMA ID . EQ constArg [ RPAREN COMMA ]
## Transitions:
-- On EQ shift to state 207
## Reductions:

State 207:
## Known stack suffix:
## reqConstNamedArgsList COMMA ID EQ
## LR(1) items:
reqConstNamedArgsList -> reqConstNamedArgsList COMMA ID EQ . constArg [ RPAREN COMMA ]
## Transitions:
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 195
-- On INT_LIT shift to state 8
-- On ID shift to state 196
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On sourceList shift to state 200
-- On constConstructorCall shift to state 208
-- On constArray shift to state 209
-- On constArg shift to state 210
-- On baseLiteral shift to state 211
## Reductions:

State 208:
## Known stack suffix:
## constConstructorCall
## LR(1) items:
constArg -> constConstructorCall . [ SCOLON RSBRAC RPAREN COMMA ]
## Transitions:
## Reductions:
-- On SCOLON RSBRAC RPAREN COMMA
--   reduce production constArg -> constConstructorCall

State 209:
## Known stack suffix:
## constArray
## LR(1) items:
constArg -> constArray . [ SCOLON RSBRAC RPAREN COMMA ]
## Transitions:
## Reductions:
-- On SCOLON RSBRAC RPAREN COMMA
--   reduce production constArg -> constArray

State 210:
## Known stack suffix:
## reqConstNamedArgsList COMMA ID EQ constArg
## LR(1) items:
reqConstNamedArgsList -> reqConstNamedArgsList COMMA ID EQ constArg . [ RPAREN COMMA ]
## Transitions:
## Reductions:
-- On RPAREN COMMA
--   reduce production reqConstNamedArgsList -> reqConstNamedArgsList COMMA ID EQ constArg

State 211:
## Known stack suffix:
## baseLiteral
## LR(1) items:
constArg -> baseLiteral . [ SCOLON RSBRAC RPAREN COMMA ]
## Transitions:
## Reductions:
-- On SCOLON RSBRAC RPAREN COMMA
--   reduce production constArg -> baseLiteral

State 212:
## Known stack suffix:
## sourceList PERIOD ID LPAREN constNamedArgsList
## LR(1) items:
constConstructorCall -> sourceList PERIOD ID LPAREN constNamedArgsList . RPAREN [ SCOLON RSBRAC RPAREN COMMA ]
## Transitions:
-- On RPAREN shift to state 213
## Reductions:

State 213:
## Known stack suffix:
## sourceList PERIOD ID LPAREN constNamedArgsList RPAREN
## LR(1) items:
constConstructorCall -> sourceList PERIOD ID LPAREN constNamedArgsList RPAREN . [ SCOLON RSBRAC RPAREN COMMA ]
## Transitions:
## Reductions:
-- On SCOLON RSBRAC RPAREN COMMA
--   reduce production constConstructorCall -> sourceList PERIOD ID LPAREN constNamedArgsList RPAREN

State 214:
## Known stack suffix:
## ID EQ constArg
## LR(1) items:
reqConstNamedArgsList -> ID EQ constArg . [ RPAREN COMMA ]
## Transitions:
## Reductions:
-- On RPAREN COMMA
--   reduce production reqConstNamedArgsList -> ID EQ constArg

State 215:
## Known stack suffix:
## ID LPAREN constNamedArgsList
## LR(1) items:
constConstructorCall -> ID LPAREN constNamedArgsList . RPAREN [ SCOLON RSBRAC RPAREN COMMA ]
## Transitions:
-- On RPAREN shift to state 216
## Reductions:

State 216:
## Known stack suffix:
## ID LPAREN constNamedArgsList RPAREN
## LR(1) items:
constConstructorCall -> ID LPAREN constNamedArgsList RPAREN . [ SCOLON RSBRAC RPAREN COMMA ]
## Transitions:
## Reductions:
-- On SCOLON RSBRAC RPAREN COMMA
--   reduce production constConstructorCall -> ID LPAREN constNamedArgsList RPAREN

State 217:
## Known stack suffix:
## reqConstArgList
## LR(1) items:
constArgList -> reqConstArgList . [ RSBRAC ]
reqConstArgList -> reqConstArgList . COMMA constArg [ RSBRAC COMMA ]
## Transitions:
-- On COMMA shift to state 218
## Reductions:
-- On RSBRAC
--   reduce production constArgList -> reqConstArgList

State 218:
## Known stack suffix:
## reqConstArgList COMMA
## LR(1) items:
reqConstArgList -> reqConstArgList COMMA . constArg [ RSBRAC COMMA ]
## Transitions:
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 195
-- On INT_LIT shift to state 8
-- On ID shift to state 196
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On sourceList shift to state 200
-- On constConstructorCall shift to state 208
-- On constArray shift to state 209
-- On constArg shift to state 219
-- On baseLiteral shift to state 211
## Reductions:

State 219:
## Known stack suffix:
## reqConstArgList COMMA constArg
## LR(1) items:
reqConstArgList -> reqConstArgList COMMA constArg . [ RSBRAC COMMA ]
## Transitions:
## Reductions:
-- On RSBRAC COMMA
--   reduce production reqConstArgList -> reqConstArgList COMMA constArg

State 220:
## Known stack suffix:
## LSBRAC constArgList
## LR(1) items:
constArray -> LSBRAC constArgList . RSBRAC [ SCOLON RSBRAC RPAREN COMMA ]
## Transitions:
-- On RSBRAC shift to state 221
## Reductions:

State 221:
## Known stack suffix:
## LSBRAC constArgList RSBRAC
## LR(1) items:
constArray -> LSBRAC constArgList RSBRAC . [ SCOLON RSBRAC RPAREN COMMA ]
## Transitions:
## Reductions:
-- On SCOLON RSBRAC RPAREN COMMA
--   reduce production constArray -> LSBRAC constArgList RSBRAC

State 222:
## Known stack suffix:
## constArg
## LR(1) items:
reqConstArgList -> constArg . [ RSBRAC COMMA ]
## Transitions:
## Reductions:
-- On RSBRAC COMMA
--   reduce production reqConstArgList -> constArg

State 223:
## Known stack suffix:
## moduleFile varDecl EQ constArg
## LR(1) items:
moduleFile -> moduleFile varDecl EQ constArg . SCOLON [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On SCOLON shift to state 224
## Reductions:

State 224:
## Known stack suffix:
## moduleFile varDecl EQ constArg SCOLON
## LR(1) items:
moduleFile -> moduleFile varDecl EQ constArg SCOLON . [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
## Reductions:
-- On VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL
--   reduce production moduleFile -> moduleFile varDecl EQ constArg SCOLON

State 225:
## Known stack suffix:
## moduleFile typeDef
## LR(1) items:
moduleFile -> moduleFile typeDef . [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
## Reductions:
-- On VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL
--   reduce production moduleFile -> moduleFile typeDef

State 226:
## Known stack suffix:
## moduleFile functionDef
## LR(1) items:
moduleFile -> moduleFile functionDef . [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
## Reductions:
-- On VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL
--   reduce production moduleFile -> moduleFile functionDef

State 227:
## Known stack suffix:
## functionDecl
## LR(1) items:
functionDef -> functionDecl . body [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On LCBRAC shift to state 228
-- On body shift to state 311
## Reductions:

State 228:
## Known stack suffix:
## LCBRAC
## LR(1) items:
body -> LCBRAC . stmtList RCBRAC [ WHILE VOID USCORE TYPE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR EOF ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
-- On stmtList shift to state 229
## Reductions:
-- On WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL
--   reduce production stmtList ->

State 229:
## Known stack suffix:
## LCBRAC stmtList
## LR(1) items:
body -> LCBRAC stmtList . RCBRAC [ WHILE VOID USCORE TYPE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR EOF ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
stmtList -> stmtList . stmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
-- On WHILE shift to state 230
-- On USCORE shift to state 234
-- On STR_LIT shift to state 2
-- On RETURN shift to state 235
-- On RCBRAC shift to state 308
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 239
-- On LCBRAC shift to state 228
-- On INT_LIT shift to state 8
-- On INT shift to state 121
-- On IF shift to state 240
-- On ID shift to state 244
-- On FOR shift to state 250
-- On CONTINUE shift to state 258
-- On CONST shift to state 129
-- On CHAR_LIT shift to state 13
-- On CHAR shift to state 130
-- On BREAK shift to state 260
-- On BOOL_LIT shift to state 14
-- On BOOL shift to state 132
-- On varDecl shift to state 262
-- On stmt shift to state 309
-- On sourceList shift to state 264
-- On primary shift to state 270
-- On otherStmt shift to state 276
-- On openStmt shift to state 301
-- On moduleAccess shift to state 278
-- On literal shift to state 29
-- On lhsList shift to state 281
-- On lhs shift to state 291
-- On functionCall shift to state 30
-- On dataType shift to state 148
-- On closedStmt shift to state 310
-- On body shift to state 297
-- On baseLiteral shift to state 38
-- On assignment shift to state 298
## Reductions:

State 230:
## Known stack suffix:
## WHILE
## LR(1) items:
closedStmt -> WHILE . LPAREN expr RPAREN closedStmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
openStmt -> WHILE . LPAREN expr RPAREN openStmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
-- On LPAREN shift to state 231
## Reductions:

State 231:
## Known stack suffix:
## WHILE LPAREN
## LR(1) items:
closedStmt -> WHILE LPAREN . expr RPAREN closedStmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
openStmt -> WHILE LPAREN . expr RPAREN openStmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 232
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:

State 232:
## Known stack suffix:
## WHILE LPAREN expr
## LR(1) items:
closedStmt -> WHILE LPAREN expr . RPAREN closedStmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
expr -> expr . LAND expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LOR expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BAND expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BOR expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GT expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LT expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GTE expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LTE expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . ADD expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . SUB expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MUL expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MOD expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DIV expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
openStmt -> WHILE LPAREN expr . RPAREN openStmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
-- On SUB shift to state 32
-- On RPAREN shift to state 233
-- On NEQ shift to state 44
-- On MUL shift to state 34
-- On MOD shift to state 39
-- On LTE shift to state 46
-- On LT shift to state 50
-- On LOR shift to state 56
-- On LAND shift to state 64
-- On GTE shift to state 52
-- On GT shift to state 54
-- On DIV shift to state 41
-- On DEQ shift to state 58
-- On BOR shift to state 60
-- On BAND shift to state 62
-- On ADD shift to state 48
## Reductions:

State 233:
## Known stack suffix:
## WHILE LPAREN expr RPAREN
## LR(1) items:
closedStmt -> WHILE LPAREN expr RPAREN . closedStmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
openStmt -> WHILE LPAREN expr RPAREN . openStmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
-- On WHILE shift to state 230
-- On USCORE shift to state 234
-- On STR_LIT shift to state 2
-- On RETURN shift to state 235
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 239
-- On LCBRAC shift to state 228
-- On INT_LIT shift to state 8
-- On INT shift to state 121
-- On IF shift to state 240
-- On ID shift to state 244
-- On FOR shift to state 250
-- On CONTINUE shift to state 258
-- On CONST shift to state 129
-- On CHAR_LIT shift to state 13
-- On CHAR shift to state 130
-- On BREAK shift to state 260
-- On BOOL_LIT shift to state 14
-- On BOOL shift to state 132
-- On varDecl shift to state 262
-- On sourceList shift to state 264
-- On primary shift to state 270
-- On otherStmt shift to state 276
-- On openStmt shift to state 306
-- On moduleAccess shift to state 278
-- On literal shift to state 29
-- On lhsList shift to state 281
-- On lhs shift to state 291
-- On functionCall shift to state 30
-- On dataType shift to state 148
-- On closedStmt shift to state 307
-- On body shift to state 297
-- On baseLiteral shift to state 38
-- On assignment shift to state 298
## Reductions:

State 234:
## Known stack suffix:
## USCORE
## LR(1) items:
lhs -> USCORE . [ EQ COMMA ]
## Transitions:
## Reductions:
-- On EQ COMMA
--   reduce production lhs -> USCORE

State 235:
## Known stack suffix:
## RETURN
## LR(1) items:
otherStmt -> RETURN . optExpr SCOLON [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On optExpr shift to state 236
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 238
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:
-- On SCOLON
--   reduce production optExpr ->

State 236:
## Known stack suffix:
## RETURN optExpr
## LR(1) items:
otherStmt -> RETURN optExpr . SCOLON [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
-- On SCOLON shift to state 237
## Reductions:

State 237:
## Known stack suffix:
## RETURN optExpr SCOLON
## LR(1) items:
otherStmt -> RETURN optExpr SCOLON . [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
## Reductions:
-- On WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL
--   reduce production otherStmt -> RETURN optExpr SCOLON

State 238:
## Known stack suffix:
## expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
optExpr -> expr . [ SCOLON RPAREN ]
## Transitions:
-- On SUB shift to state 32
-- On NEQ shift to state 44
-- On MUL shift to state 34
-- On MOD shift to state 39
-- On LTE shift to state 46
-- On LT shift to state 50
-- On LOR shift to state 56
-- On LAND shift to state 64
-- On GTE shift to state 52
-- On GT shift to state 54
-- On DIV shift to state 41
-- On DEQ shift to state 58
-- On BOR shift to state 60
-- On BAND shift to state 62
-- On ADD shift to state 48
## Reductions:
-- On SCOLON RPAREN
--   reduce production optExpr -> expr

State 239:
## Known stack suffix:
## LPAREN
## LR(1) items:
primary -> LPAREN . expr RPAREN [ PERIOD LSBRAC ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 99
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:

State 240:
## Known stack suffix:
## IF
## LR(1) items:
closedStmt -> IF . LPAREN expr RPAREN closedStmt ELSE closedStmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
openStmt -> IF . LPAREN expr RPAREN stmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
openStmt -> IF . LPAREN expr RPAREN closedStmt ELSE openStmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
-- On LPAREN shift to state 241
## Reductions:

State 241:
## Known stack suffix:
## IF LPAREN
## LR(1) items:
closedStmt -> IF LPAREN . expr RPAREN closedStmt ELSE closedStmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
openStmt -> IF LPAREN . expr RPAREN stmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
openStmt -> IF LPAREN . expr RPAREN closedStmt ELSE openStmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 242
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:

State 242:
## Known stack suffix:
## IF LPAREN expr
## LR(1) items:
closedStmt -> IF LPAREN expr . RPAREN closedStmt ELSE closedStmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
expr -> expr . LAND expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LOR expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BAND expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BOR expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GT expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LT expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GTE expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LTE expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . ADD expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . SUB expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MUL expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MOD expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DIV expr [ SUB RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
openStmt -> IF LPAREN expr . RPAREN stmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
openStmt -> IF LPAREN expr . RPAREN closedStmt ELSE openStmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
-- On SUB shift to state 32
-- On RPAREN shift to state 243
-- On NEQ shift to state 44
-- On MUL shift to state 34
-- On MOD shift to state 39
-- On LTE shift to state 46
-- On LT shift to state 50
-- On LOR shift to state 56
-- On LAND shift to state 64
-- On GTE shift to state 52
-- On GT shift to state 54
-- On DIV shift to state 41
-- On DEQ shift to state 58
-- On BOR shift to state 60
-- On BAND shift to state 62
-- On ADD shift to state 48
## Reductions:

State 243:
## Known stack suffix:
## IF LPAREN expr RPAREN
## LR(1) items:
closedStmt -> IF LPAREN expr RPAREN . closedStmt ELSE closedStmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
openStmt -> IF LPAREN expr RPAREN . stmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
openStmt -> IF LPAREN expr RPAREN . closedStmt ELSE openStmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
-- On WHILE shift to state 230
-- On USCORE shift to state 234
-- On STR_LIT shift to state 2
-- On RETURN shift to state 235
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 239
-- On LCBRAC shift to state 228
-- On INT_LIT shift to state 8
-- On INT shift to state 121
-- On IF shift to state 240
-- On ID shift to state 244
-- On FOR shift to state 250
-- On CONTINUE shift to state 258
-- On CONST shift to state 129
-- On CHAR_LIT shift to state 13
-- On CHAR shift to state 130
-- On BREAK shift to state 260
-- On BOOL_LIT shift to state 14
-- On BOOL shift to state 132
-- On varDecl shift to state 262
-- On stmt shift to state 300
-- On sourceList shift to state 264
-- On primary shift to state 270
-- On otherStmt shift to state 276
-- On openStmt shift to state 301
-- On moduleAccess shift to state 278
-- On literal shift to state 29
-- On lhsList shift to state 281
-- On lhs shift to state 291
-- On functionCall shift to state 30
-- On dataType shift to state 148
-- On closedStmt shift to state 302
-- On body shift to state 297
-- On baseLiteral shift to state 38
-- On assignment shift to state 298
## Reductions:

State 244:
## Known stack suffix:
## ID
## LR(1) items:
dataType -> ID . [ ID ]
dataType -> ID . LSBRAC RSBRAC kleenelrsbrac [ ID ]
functionCall -> ID . LPAREN reqUnnamedArgsList RPAREN [ PERIOD LSBRAC ]
functionCall -> ID . LPAREN reqNamedArgsList RPAREN [ PERIOD LSBRAC ]
functionCall -> ID . LPAREN RPAREN [ PERIOD LSBRAC ]
lhs -> ID . [ EQ COMMA ]
lhs -> ID . PERIOD ID [ EQ COMMA ]
lhs -> ID . LSBRAC expr RSBRAC [ EQ COMMA ]
primary -> ID . PERIOD ID [ PERIOD LSBRAC ]
primary -> ID . LSBRAC expr RSBRAC [ PERIOD LSBRAC ]
## Transitions:
-- On PERIOD shift to state 245
-- On LSBRAC shift to state 247
-- On LPAREN shift to state 71
## Reductions:
-- On ID
--   reduce production dataType -> ID
-- On EQ COMMA
--   reduce production lhs -> ID

State 245:
## Known stack suffix:
## ID PERIOD
## LR(1) items:
lhs -> ID PERIOD . ID [ EQ COMMA ]
primary -> ID PERIOD . ID [ PERIOD LSBRAC ]
## Transitions:
-- On ID shift to state 246
## Reductions:

State 246:
## Known stack suffix:
## ID PERIOD ID
## LR(1) items:
lhs -> ID PERIOD ID . [ EQ COMMA ]
primary -> ID PERIOD ID . [ PERIOD LSBRAC ]
## Transitions:
## Reductions:
-- On EQ COMMA
--   reduce production lhs -> ID PERIOD ID
-- On PERIOD LSBRAC
--   reduce production primary -> ID PERIOD ID

State 247:
## Known stack suffix:
## ID LSBRAC
## LR(1) items:
dataType -> ID LSBRAC . RSBRAC kleenelrsbrac [ ID ]
lhs -> ID LSBRAC . expr RSBRAC [ EQ COMMA ]
primary -> ID LSBRAC . expr RSBRAC [ PERIOD LSBRAC ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On RSBRAC shift to state 127
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 248
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:

State 248:
## Known stack suffix:
## ID LSBRAC expr
## LR(1) items:
expr -> expr . LAND expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LOR expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BAND expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BOR expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GT expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LT expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GTE expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LTE expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . ADD expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . SUB expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MUL expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MOD expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DIV expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
lhs -> ID LSBRAC expr . RSBRAC [ EQ COMMA ]
primary -> ID LSBRAC expr . RSBRAC [ PERIOD LSBRAC ]
## Transitions:
-- On SUB shift to state 32
-- On RSBRAC shift to state 249
-- On NEQ shift to state 44
-- On MUL shift to state 34
-- On MOD shift to state 39
-- On LTE shift to state 46
-- On LT shift to state 50
-- On LOR shift to state 56
-- On LAND shift to state 64
-- On GTE shift to state 52
-- On GT shift to state 54
-- On DIV shift to state 41
-- On DEQ shift to state 58
-- On BOR shift to state 60
-- On BAND shift to state 62
-- On ADD shift to state 48
## Reductions:

State 249:
## Known stack suffix:
## ID LSBRAC expr RSBRAC
## LR(1) items:
lhs -> ID LSBRAC expr RSBRAC . [ EQ COMMA ]
primary -> ID LSBRAC expr RSBRAC . [ PERIOD LSBRAC ]
## Transitions:
## Reductions:
-- On EQ COMMA
--   reduce production lhs -> ID LSBRAC expr RSBRAC
-- On PERIOD LSBRAC
--   reduce production primary -> ID LSBRAC expr RSBRAC

State 250:
## Known stack suffix:
## FOR
## LR(1) items:
closedStmt -> FOR . LPAREN optExpr SCOLON optExpr SCOLON optExpr RPAREN closedStmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
openStmt -> FOR . LPAREN optExpr SCOLON optExpr SCOLON optExpr RPAREN openStmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
-- On LPAREN shift to state 251
## Reductions:

State 251:
## Known stack suffix:
## FOR LPAREN
## LR(1) items:
closedStmt -> FOR LPAREN . optExpr SCOLON optExpr SCOLON optExpr RPAREN closedStmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
openStmt -> FOR LPAREN . optExpr SCOLON optExpr SCOLON optExpr RPAREN openStmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On optExpr shift to state 252
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 238
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:
-- On SCOLON
--   reduce production optExpr ->

State 252:
## Known stack suffix:
## FOR LPAREN optExpr
## LR(1) items:
closedStmt -> FOR LPAREN optExpr . SCOLON optExpr SCOLON optExpr RPAREN closedStmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
openStmt -> FOR LPAREN optExpr . SCOLON optExpr SCOLON optExpr RPAREN openStmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
-- On SCOLON shift to state 253
## Reductions:

State 253:
## Known stack suffix:
## FOR LPAREN optExpr SCOLON
## LR(1) items:
closedStmt -> FOR LPAREN optExpr SCOLON . optExpr SCOLON optExpr RPAREN closedStmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
openStmt -> FOR LPAREN optExpr SCOLON . optExpr SCOLON optExpr RPAREN openStmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On optExpr shift to state 254
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 238
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:
-- On SCOLON
--   reduce production optExpr ->

State 254:
## Known stack suffix:
## FOR LPAREN optExpr SCOLON optExpr
## LR(1) items:
closedStmt -> FOR LPAREN optExpr SCOLON optExpr . SCOLON optExpr RPAREN closedStmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
openStmt -> FOR LPAREN optExpr SCOLON optExpr . SCOLON optExpr RPAREN openStmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
-- On SCOLON shift to state 255
## Reductions:

State 255:
## Known stack suffix:
## FOR LPAREN optExpr SCOLON optExpr SCOLON
## LR(1) items:
closedStmt -> FOR LPAREN optExpr SCOLON optExpr SCOLON . optExpr RPAREN closedStmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
openStmt -> FOR LPAREN optExpr SCOLON optExpr SCOLON . optExpr RPAREN openStmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On optExpr shift to state 256
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 238
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:
-- On RPAREN
--   reduce production optExpr ->

State 256:
## Known stack suffix:
## FOR LPAREN optExpr SCOLON optExpr SCOLON optExpr
## LR(1) items:
closedStmt -> FOR LPAREN optExpr SCOLON optExpr SCOLON optExpr . RPAREN closedStmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
openStmt -> FOR LPAREN optExpr SCOLON optExpr SCOLON optExpr . RPAREN openStmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
-- On RPAREN shift to state 257
## Reductions:

State 257:
## Known stack suffix:
## FOR LPAREN optExpr SCOLON optExpr SCOLON optExpr RPAREN
## LR(1) items:
closedStmt -> FOR LPAREN optExpr SCOLON optExpr SCOLON optExpr RPAREN . closedStmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
openStmt -> FOR LPAREN optExpr SCOLON optExpr SCOLON optExpr RPAREN . openStmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
-- On WHILE shift to state 230
-- On USCORE shift to state 234
-- On STR_LIT shift to state 2
-- On RETURN shift to state 235
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 239
-- On LCBRAC shift to state 228
-- On INT_LIT shift to state 8
-- On INT shift to state 121
-- On IF shift to state 240
-- On ID shift to state 244
-- On FOR shift to state 250
-- On CONTINUE shift to state 258
-- On CONST shift to state 129
-- On CHAR_LIT shift to state 13
-- On CHAR shift to state 130
-- On BREAK shift to state 260
-- On BOOL_LIT shift to state 14
-- On BOOL shift to state 132
-- On varDecl shift to state 262
-- On sourceList shift to state 264
-- On primary shift to state 270
-- On otherStmt shift to state 276
-- On openStmt shift to state 277
-- On moduleAccess shift to state 278
-- On literal shift to state 29
-- On lhsList shift to state 281
-- On lhs shift to state 291
-- On functionCall shift to state 30
-- On dataType shift to state 148
-- On closedStmt shift to state 296
-- On body shift to state 297
-- On baseLiteral shift to state 38
-- On assignment shift to state 298
## Reductions:

State 258:
## Known stack suffix:
## CONTINUE
## LR(1) items:
otherStmt -> CONTINUE . SCOLON [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
-- On SCOLON shift to state 259
## Reductions:

State 259:
## Known stack suffix:
## CONTINUE SCOLON
## LR(1) items:
otherStmt -> CONTINUE SCOLON . [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
## Reductions:
-- On WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL
--   reduce production otherStmt -> CONTINUE SCOLON

State 260:
## Known stack suffix:
## BREAK
## LR(1) items:
otherStmt -> BREAK . SCOLON [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
-- On SCOLON shift to state 261
## Reductions:

State 261:
## Known stack suffix:
## BREAK SCOLON
## LR(1) items:
otherStmt -> BREAK SCOLON . [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
## Reductions:
-- On WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL
--   reduce production otherStmt -> BREAK SCOLON

State 262:
## Known stack suffix:
## varDecl
## LR(1) items:
lhs -> varDecl . [ EQ COMMA ]
otherStmt -> varDecl . SCOLON [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
-- On SCOLON shift to state 263
## Reductions:
-- On EQ COMMA
--   reduce production lhs -> varDecl

State 263:
## Known stack suffix:
## varDecl SCOLON
## LR(1) items:
otherStmt -> varDecl SCOLON . [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
## Reductions:
-- On WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL
--   reduce production otherStmt -> varDecl SCOLON

State 264:
## Known stack suffix:
## sourceList
## LR(1) items:
dataType -> sourceList . PERIOD ID [ ID ]
dataType -> sourceList . PERIOD ID LSBRAC RSBRAC kleenelrsbrac [ ID ]
functionCall -> sourceList . PERIOD ID LPAREN reqUnnamedArgsList RPAREN [ PERIOD LSBRAC ]
functionCall -> sourceList . PERIOD ID LPAREN reqNamedArgsList RPAREN [ PERIOD LSBRAC ]
functionCall -> sourceList . PERIOD ID LPAREN RPAREN [ PERIOD LSBRAC ]
lhs -> sourceList . PERIOD ID LSBRAC expr RSBRAC [ EQ COMMA ]
moduleAccess -> sourceList . PERIOD ID [ PERIOD EQ COMMA ]
primary -> sourceList . PERIOD ID LSBRAC expr RSBRAC [ PERIOD LSBRAC ]
sourceList -> sourceList . PERIOD MODULE_ID [ PERIOD ]
## Transitions:
-- On PERIOD shift to state 265
## Reductions:

State 265:
## Known stack suffix:
## sourceList PERIOD
## LR(1) items:
dataType -> sourceList PERIOD . ID [ ID ]
dataType -> sourceList PERIOD . ID LSBRAC RSBRAC kleenelrsbrac [ ID ]
functionCall -> sourceList PERIOD . ID LPAREN reqUnnamedArgsList RPAREN [ PERIOD LSBRAC ]
functionCall -> sourceList PERIOD . ID LPAREN reqNamedArgsList RPAREN [ PERIOD LSBRAC ]
functionCall -> sourceList PERIOD . ID LPAREN RPAREN [ PERIOD LSBRAC ]
lhs -> sourceList PERIOD . ID LSBRAC expr RSBRAC [ EQ COMMA ]
moduleAccess -> sourceList PERIOD . ID [ PERIOD EQ COMMA ]
primary -> sourceList PERIOD . ID LSBRAC expr RSBRAC [ PERIOD LSBRAC ]
sourceList -> sourceList PERIOD . MODULE_ID [ PERIOD ]
## Transitions:
-- On MODULE_ID shift to state 19
-- On ID shift to state 266
## Reductions:

State 266:
## Known stack suffix:
## sourceList PERIOD ID
## LR(1) items:
dataType -> sourceList PERIOD ID . [ ID ]
dataType -> sourceList PERIOD ID . LSBRAC RSBRAC kleenelrsbrac [ ID ]
functionCall -> sourceList PERIOD ID . LPAREN reqUnnamedArgsList RPAREN [ PERIOD LSBRAC ]
functionCall -> sourceList PERIOD ID . LPAREN reqNamedArgsList RPAREN [ PERIOD LSBRAC ]
functionCall -> sourceList PERIOD ID . LPAREN RPAREN [ PERIOD LSBRAC ]
lhs -> sourceList PERIOD ID . LSBRAC expr RSBRAC [ EQ COMMA ]
moduleAccess -> sourceList PERIOD ID . [ PERIOD EQ COMMA ]
primary -> sourceList PERIOD ID . LSBRAC expr RSBRAC [ PERIOD LSBRAC ]
## Transitions:
-- On LSBRAC shift to state 267
-- On LPAREN shift to state 68
## Reductions:
-- On ID
--   reduce production dataType -> sourceList PERIOD ID
-- On PERIOD EQ COMMA
--   reduce production moduleAccess -> sourceList PERIOD ID

State 267:
## Known stack suffix:
## sourceList PERIOD ID LSBRAC
## LR(1) items:
dataType -> sourceList PERIOD ID LSBRAC . RSBRAC kleenelrsbrac [ ID ]
lhs -> sourceList PERIOD ID LSBRAC . expr RSBRAC [ EQ COMMA ]
primary -> sourceList PERIOD ID LSBRAC . expr RSBRAC [ PERIOD LSBRAC ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On RSBRAC shift to state 138
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 268
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:

State 268:
## Known stack suffix:
## sourceList PERIOD ID LSBRAC expr
## LR(1) items:
expr -> expr . LAND expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LOR expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BAND expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BOR expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GT expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LT expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GTE expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LTE expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . ADD expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . SUB expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MUL expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MOD expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DIV expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
lhs -> sourceList PERIOD ID LSBRAC expr . RSBRAC [ EQ COMMA ]
primary -> sourceList PERIOD ID LSBRAC expr . RSBRAC [ PERIOD LSBRAC ]
## Transitions:
-- On SUB shift to state 32
-- On RSBRAC shift to state 269
-- On NEQ shift to state 44
-- On MUL shift to state 34
-- On MOD shift to state 39
-- On LTE shift to state 46
-- On LT shift to state 50
-- On LOR shift to state 56
-- On LAND shift to state 64
-- On GTE shift to state 52
-- On GT shift to state 54
-- On DIV shift to state 41
-- On DEQ shift to state 58
-- On BOR shift to state 60
-- On BAND shift to state 62
-- On ADD shift to state 48
## Reductions:

State 269:
## Known stack suffix:
## sourceList PERIOD ID LSBRAC expr RSBRAC
## LR(1) items:
lhs -> sourceList PERIOD ID LSBRAC expr RSBRAC . [ EQ COMMA ]
primary -> sourceList PERIOD ID LSBRAC expr RSBRAC . [ PERIOD LSBRAC ]
## Transitions:
## Reductions:
-- On EQ COMMA
--   reduce production lhs -> sourceList PERIOD ID LSBRAC expr RSBRAC
-- On PERIOD LSBRAC
--   reduce production primary -> sourceList PERIOD ID LSBRAC expr RSBRAC

State 270:
## Known stack suffix:
## primary
## LR(1) items:
lhs -> primary . PERIOD ID [ EQ COMMA ]
lhs -> primary . LSBRAC expr RSBRAC [ EQ COMMA ]
primary -> primary . PERIOD ID [ PERIOD LSBRAC ]
primary -> primary . LSBRAC expr RSBRAC [ PERIOD LSBRAC ]
## Transitions:
-- On PERIOD shift to state 271
-- On LSBRAC shift to state 273
## Reductions:

State 271:
## Known stack suffix:
## primary PERIOD
## LR(1) items:
lhs -> primary PERIOD . ID [ EQ COMMA ]
primary -> primary PERIOD . ID [ PERIOD LSBRAC ]
## Transitions:
-- On ID shift to state 272
## Reductions:

State 272:
## Known stack suffix:
## primary PERIOD ID
## LR(1) items:
lhs -> primary PERIOD ID . [ EQ COMMA ]
primary -> primary PERIOD ID . [ PERIOD LSBRAC ]
## Transitions:
## Reductions:
-- On EQ COMMA
--   reduce production lhs -> primary PERIOD ID
-- On PERIOD LSBRAC
--   reduce production primary -> primary PERIOD ID

State 273:
## Known stack suffix:
## primary LSBRAC
## LR(1) items:
lhs -> primary LSBRAC . expr RSBRAC [ EQ COMMA ]
primary -> primary LSBRAC . expr RSBRAC [ PERIOD LSBRAC ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 274
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:

State 274:
## Known stack suffix:
## primary LSBRAC expr
## LR(1) items:
expr -> expr . LAND expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LOR expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BAND expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BOR expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GT expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LT expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GTE expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LTE expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . ADD expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . SUB expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MUL expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MOD expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DIV expr [ SUB RSBRAC NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
lhs -> primary LSBRAC expr . RSBRAC [ EQ COMMA ]
primary -> primary LSBRAC expr . RSBRAC [ PERIOD LSBRAC ]
## Transitions:
-- On SUB shift to state 32
-- On RSBRAC shift to state 275
-- On NEQ shift to state 44
-- On MUL shift to state 34
-- On MOD shift to state 39
-- On LTE shift to state 46
-- On LT shift to state 50
-- On LOR shift to state 56
-- On LAND shift to state 64
-- On GTE shift to state 52
-- On GT shift to state 54
-- On DIV shift to state 41
-- On DEQ shift to state 58
-- On BOR shift to state 60
-- On BAND shift to state 62
-- On ADD shift to state 48
## Reductions:

State 275:
## Known stack suffix:
## primary LSBRAC expr RSBRAC
## LR(1) items:
lhs -> primary LSBRAC expr RSBRAC . [ EQ COMMA ]
primary -> primary LSBRAC expr RSBRAC . [ PERIOD LSBRAC ]
## Transitions:
## Reductions:
-- On EQ COMMA
--   reduce production lhs -> primary LSBRAC expr RSBRAC
-- On PERIOD LSBRAC
--   reduce production primary -> primary LSBRAC expr RSBRAC

State 276:
## Known stack suffix:
## otherStmt
## LR(1) items:
closedStmt -> otherStmt . [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
## Reductions:
-- On WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL
--   reduce production closedStmt -> otherStmt

State 277:
## Known stack suffix:
## FOR LPAREN optExpr SCOLON optExpr SCOLON optExpr RPAREN openStmt
## LR(1) items:
openStmt -> FOR LPAREN optExpr SCOLON optExpr SCOLON optExpr RPAREN openStmt . [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
## Reductions:
-- On WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL
--   reduce production openStmt -> FOR LPAREN optExpr SCOLON optExpr SCOLON optExpr RPAREN openStmt

State 278:
## Known stack suffix:
## moduleAccess
## LR(1) items:
lhs -> moduleAccess . PERIOD ID [ EQ COMMA ]
lhs -> moduleAccess . [ EQ COMMA ]
primary -> moduleAccess . PERIOD ID [ PERIOD LSBRAC ]
## Transitions:
-- On PERIOD shift to state 279
## Reductions:
-- On EQ COMMA
--   reduce production lhs -> moduleAccess

State 279:
## Known stack suffix:
## moduleAccess PERIOD
## LR(1) items:
lhs -> moduleAccess PERIOD . ID [ EQ COMMA ]
primary -> moduleAccess PERIOD . ID [ PERIOD LSBRAC ]
## Transitions:
-- On ID shift to state 280
## Reductions:

State 280:
## Known stack suffix:
## moduleAccess PERIOD ID
## LR(1) items:
lhs -> moduleAccess PERIOD ID . [ EQ COMMA ]
primary -> moduleAccess PERIOD ID . [ PERIOD LSBRAC ]
## Transitions:
## Reductions:
-- On EQ COMMA
--   reduce production lhs -> moduleAccess PERIOD ID
-- On PERIOD LSBRAC
--   reduce production primary -> moduleAccess PERIOD ID

State 281:
## Known stack suffix:
## lhsList
## LR(1) items:
assignment -> lhsList . EQ functionCall [ SCOLON ]
lhsList -> lhsList . COMMA lhs [ EQ COMMA ]
## Transitions:
-- On EQ shift to state 282
-- On COMMA shift to state 288
## Reductions:

State 282:
## Known stack suffix:
## lhsList EQ
## LR(1) items:
assignment -> lhsList EQ . functionCall [ SCOLON ]
## Transitions:
-- On MODULE_ID shift to state 4
-- On ID shift to state 283
-- On sourceList shift to state 284
-- On functionCall shift to state 287
## Reductions:

State 283:
## Known stack suffix:
## ID
## LR(1) items:
functionCall -> ID . LPAREN reqUnnamedArgsList RPAREN [ SCOLON ]
functionCall -> ID . LPAREN reqNamedArgsList RPAREN [ SCOLON ]
functionCall -> ID . LPAREN RPAREN [ SCOLON ]
## Transitions:
-- On LPAREN shift to state 71
## Reductions:

State 284:
## Known stack suffix:
## sourceList
## LR(1) items:
functionCall -> sourceList . PERIOD ID LPAREN reqUnnamedArgsList RPAREN [ SCOLON ]
functionCall -> sourceList . PERIOD ID LPAREN reqNamedArgsList RPAREN [ SCOLON ]
functionCall -> sourceList . PERIOD ID LPAREN RPAREN [ SCOLON ]
sourceList -> sourceList . PERIOD MODULE_ID [ PERIOD ]
## Transitions:
-- On PERIOD shift to state 285
## Reductions:

State 285:
## Known stack suffix:
## sourceList PERIOD
## LR(1) items:
functionCall -> sourceList PERIOD . ID LPAREN reqUnnamedArgsList RPAREN [ SCOLON ]
functionCall -> sourceList PERIOD . ID LPAREN reqNamedArgsList RPAREN [ SCOLON ]
functionCall -> sourceList PERIOD . ID LPAREN RPAREN [ SCOLON ]
sourceList -> sourceList PERIOD . MODULE_ID [ PERIOD ]
## Transitions:
-- On MODULE_ID shift to state 19
-- On ID shift to state 286
## Reductions:

State 286:
## Known stack suffix:
## sourceList PERIOD ID
## LR(1) items:
functionCall -> sourceList PERIOD ID . LPAREN reqUnnamedArgsList RPAREN [ SCOLON ]
functionCall -> sourceList PERIOD ID . LPAREN reqNamedArgsList RPAREN [ SCOLON ]
functionCall -> sourceList PERIOD ID . LPAREN RPAREN [ SCOLON ]
## Transitions:
-- On LPAREN shift to state 68
## Reductions:

State 287:
## Known stack suffix:
## lhsList EQ functionCall
## LR(1) items:
assignment -> lhsList EQ functionCall . [ SCOLON ]
## Transitions:
## Reductions:
-- On SCOLON
--   reduce production assignment -> lhsList EQ functionCall

State 288:
## Known stack suffix:
## lhsList COMMA
## LR(1) items:
lhsList -> lhsList COMMA . lhs [ EQ COMMA ]
## Transitions:
-- On USCORE shift to state 234
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 239
-- On INT_LIT shift to state 8
-- On INT shift to state 121
-- On ID shift to state 244
-- On CONST shift to state 129
-- On CHAR_LIT shift to state 13
-- On CHAR shift to state 130
-- On BOOL_LIT shift to state 14
-- On BOOL shift to state 132
-- On varDecl shift to state 289
-- On sourceList shift to state 264
-- On primary shift to state 270
-- On moduleAccess shift to state 278
-- On literal shift to state 29
-- On lhs shift to state 290
-- On functionCall shift to state 30
-- On dataType shift to state 148
-- On baseLiteral shift to state 38
## Reductions:

State 289:
## Known stack suffix:
## varDecl
## LR(1) items:
lhs -> varDecl . [ EQ COMMA ]
## Transitions:
## Reductions:
-- On EQ COMMA
--   reduce production lhs -> varDecl

State 290:
## Known stack suffix:
## lhsList COMMA lhs
## LR(1) items:
lhsList -> lhsList COMMA lhs . [ EQ COMMA ]
## Transitions:
## Reductions:
-- On EQ COMMA
--   reduce production lhsList -> lhsList COMMA lhs

State 291:
## Known stack suffix:
## lhs
## LR(1) items:
assignment -> lhs . EQ expr [ SCOLON ]
lhsList -> lhs . COMMA lhs [ EQ COMMA ]
## Transitions:
-- On EQ shift to state 292
-- On COMMA shift to state 294
## Reductions:

State 292:
## Known stack suffix:
## lhs EQ
## LR(1) items:
assignment -> lhs EQ . expr [ SCOLON ]
## Transitions:
-- On SUB shift to state 1
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 13
-- On BOOL_LIT shift to state 14
-- On BNOT shift to state 15
-- On ADD shift to state 16
-- On sourceList shift to state 17
-- On primary shift to state 22
-- On moduleAccess shift to state 26
-- On literal shift to state 29
-- On functionCall shift to state 30
-- On expr shift to state 293
-- On cast shift to state 36
-- On baseLiteral shift to state 38
## Reductions:

State 293:
## Known stack suffix:
## lhs EQ expr
## LR(1) items:
assignment -> lhs EQ expr . [ SCOLON ]
expr -> expr . LAND expr [ SUB SCOLON NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 32
-- On NEQ shift to state 44
-- On MUL shift to state 34
-- On MOD shift to state 39
-- On LTE shift to state 46
-- On LT shift to state 50
-- On LOR shift to state 56
-- On LAND shift to state 64
-- On GTE shift to state 52
-- On GT shift to state 54
-- On DIV shift to state 41
-- On DEQ shift to state 58
-- On BOR shift to state 60
-- On BAND shift to state 62
-- On ADD shift to state 48
## Reductions:
-- On SCOLON
--   reduce production assignment -> lhs EQ expr

State 294:
## Known stack suffix:
## lhs COMMA
## LR(1) items:
lhsList -> lhs COMMA . lhs [ EQ COMMA ]
## Transitions:
-- On USCORE shift to state 234
-- On STR_LIT shift to state 2
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 239
-- On INT_LIT shift to state 8
-- On INT shift to state 121
-- On ID shift to state 244
-- On CONST shift to state 129
-- On CHAR_LIT shift to state 13
-- On CHAR shift to state 130
-- On BOOL_LIT shift to state 14
-- On BOOL shift to state 132
-- On varDecl shift to state 289
-- On sourceList shift to state 264
-- On primary shift to state 270
-- On moduleAccess shift to state 278
-- On literal shift to state 29
-- On lhs shift to state 295
-- On functionCall shift to state 30
-- On dataType shift to state 148
-- On baseLiteral shift to state 38
## Reductions:

State 295:
## Known stack suffix:
## lhs COMMA lhs
## LR(1) items:
lhsList -> lhs COMMA lhs . [ EQ COMMA ]
## Transitions:
## Reductions:
-- On EQ COMMA
--   reduce production lhsList -> lhs COMMA lhs

State 296:
## Known stack suffix:
## FOR LPAREN optExpr SCOLON optExpr SCOLON optExpr RPAREN closedStmt
## LR(1) items:
closedStmt -> FOR LPAREN optExpr SCOLON optExpr SCOLON optExpr RPAREN closedStmt . [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
## Reductions:
-- On WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL
--   reduce production closedStmt -> FOR LPAREN optExpr SCOLON optExpr SCOLON optExpr RPAREN closedStmt

State 297:
## Known stack suffix:
## body
## LR(1) items:
otherStmt -> body . [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
## Reductions:
-- On WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL
--   reduce production otherStmt -> body

State 298:
## Known stack suffix:
## assignment
## LR(1) items:
otherStmt -> assignment . SCOLON [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
-- On SCOLON shift to state 299
## Reductions:

State 299:
## Known stack suffix:
## assignment SCOLON
## LR(1) items:
otherStmt -> assignment SCOLON . [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
## Reductions:
-- On WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL
--   reduce production otherStmt -> assignment SCOLON

State 300:
## Known stack suffix:
## IF LPAREN expr RPAREN stmt
## LR(1) items:
openStmt -> IF LPAREN expr RPAREN stmt . [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
## Reductions:
-- On WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL
--   reduce production openStmt -> IF LPAREN expr RPAREN stmt

State 301:
## Known stack suffix:
## openStmt
## LR(1) items:
stmt -> openStmt . [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
## Reductions:
-- On WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL
--   reduce production stmt -> openStmt

State 302:
## Known stack suffix:
## IF LPAREN expr RPAREN closedStmt
## LR(1) items:
closedStmt -> IF LPAREN expr RPAREN closedStmt . ELSE closedStmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
openStmt -> IF LPAREN expr RPAREN closedStmt . ELSE openStmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
stmt -> closedStmt . [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
-- On ELSE shift to state 303
## Reductions:
-- On WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL
--   reduce production stmt -> closedStmt

State 303:
## Known stack suffix:
## IF LPAREN expr RPAREN closedStmt ELSE
## LR(1) items:
closedStmt -> IF LPAREN expr RPAREN closedStmt ELSE . closedStmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
openStmt -> IF LPAREN expr RPAREN closedStmt ELSE . openStmt [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
-- On WHILE shift to state 230
-- On USCORE shift to state 234
-- On STR_LIT shift to state 2
-- On RETURN shift to state 235
-- On NULL shift to state 3
-- On MODULE_ID shift to state 4
-- On LSBRAC shift to state 5
-- On LPAREN shift to state 239
-- On LCBRAC shift to state 228
-- On INT_LIT shift to state 8
-- On INT shift to state 121
-- On IF shift to state 240
-- On ID shift to state 244
-- On FOR shift to state 250
-- On CONTINUE shift to state 258
-- On CONST shift to state 129
-- On CHAR_LIT shift to state 13
-- On CHAR shift to state 130
-- On BREAK shift to state 260
-- On BOOL_LIT shift to state 14
-- On BOOL shift to state 132
-- On varDecl shift to state 262
-- On sourceList shift to state 264
-- On primary shift to state 270
-- On otherStmt shift to state 276
-- On openStmt shift to state 304
-- On moduleAccess shift to state 278
-- On literal shift to state 29
-- On lhsList shift to state 281
-- On lhs shift to state 291
-- On functionCall shift to state 30
-- On dataType shift to state 148
-- On closedStmt shift to state 305
-- On body shift to state 297
-- On baseLiteral shift to state 38
-- On assignment shift to state 298
## Reductions:

State 304:
## Known stack suffix:
## IF LPAREN expr RPAREN closedStmt ELSE openStmt
## LR(1) items:
openStmt -> IF LPAREN expr RPAREN closedStmt ELSE openStmt . [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
## Reductions:
-- On WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL
--   reduce production openStmt -> IF LPAREN expr RPAREN closedStmt ELSE openStmt

State 305:
## Known stack suffix:
## IF LPAREN expr RPAREN closedStmt ELSE closedStmt
## LR(1) items:
closedStmt -> IF LPAREN expr RPAREN closedStmt ELSE closedStmt . [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
## Reductions:
-- On WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL
--   reduce production closedStmt -> IF LPAREN expr RPAREN closedStmt ELSE closedStmt

State 306:
## Known stack suffix:
## WHILE LPAREN expr RPAREN openStmt
## LR(1) items:
openStmt -> WHILE LPAREN expr RPAREN openStmt . [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
## Reductions:
-- On WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL
--   reduce production openStmt -> WHILE LPAREN expr RPAREN openStmt

State 307:
## Known stack suffix:
## WHILE LPAREN expr RPAREN closedStmt
## LR(1) items:
closedStmt -> WHILE LPAREN expr RPAREN closedStmt . [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
## Reductions:
-- On WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL
--   reduce production closedStmt -> WHILE LPAREN expr RPAREN closedStmt

State 308:
## Known stack suffix:
## LCBRAC stmtList RCBRAC
## LR(1) items:
body -> LCBRAC stmtList RCBRAC . [ WHILE VOID USCORE TYPE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR EOF ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
## Reductions:
-- On WHILE VOID USCORE TYPE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR EOF ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL
--   reduce production body -> LCBRAC stmtList RCBRAC

State 309:
## Known stack suffix:
## stmtList stmt
## LR(1) items:
stmtList -> stmtList stmt . [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
## Reductions:
-- On WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL
--   reduce production stmtList -> stmtList stmt

State 310:
## Known stack suffix:
## closedStmt
## LR(1) items:
stmt -> closedStmt . [ WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL ]
## Transitions:
## Reductions:
-- On WHILE USCORE STR_LIT RETURN RCBRAC NULL MODULE_ID LSBRAC LPAREN LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL
--   reduce production stmt -> closedStmt

State 311:
## Known stack suffix:
## functionDecl body
## LR(1) items:
functionDef -> functionDecl body . [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
## Reductions:
-- On VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL
--   reduce production functionDef -> functionDecl body

