State 0:
## Known stack suffix:
##
## LR(1) items:
main' -> . main [ # ]
## Transitions:
-- On USCORE shift to state 1
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On INT shift to state 95
-- On ID shift to state 99
-- On CONST shift to state 105
-- On CHAR_LIT shift to state 11
-- On CHAR shift to state 108
-- On BOOL_LIT shift to state 12
-- On BOOL shift to state 110
-- On BNOT shift to state 13
-- On varDecl shift to state 120
-- On sourceList shift to state 121
-- On primary shift to state 127
-- On moduleAccess shift to state 131
-- On main shift to state 132
-- On literal shift to state 22
-- On lhsList shift to state 133
-- On lhs shift to state 147
-- On functionCall shift to state 23
-- On expr shift to state 142
-- On dataType shift to state 145
-- On cast shift to state 31
-- On assignment shift to state 152
## Reductions:

State 1:
## Known stack suffix:
## USCORE
## LR(1) items:
lhs -> USCORE . [ EQ COMMA ]
## Transitions:
## Reductions:
-- On EQ COMMA
--   reduce production lhs -> USCORE

State 2:
## Known stack suffix:
## SUB
## LR(1) items:
expr -> SUB . expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On BNOT shift to state 13
-- On sourceList shift to state 14
-- On primary shift to state 19
-- On moduleAccess shift to state 21
-- On literal shift to state 22
-- On functionCall shift to state 23
-- On expr shift to state 94
-- On cast shift to state 31
## Reductions:

State 3:
## Known stack suffix:
## STR_LIT
## LR(1) items:
literal -> STR_LIT . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production literal -> STR_LIT

State 4:
## Known stack suffix:
## NULL
## LR(1) items:
literal -> NULL . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production literal -> NULL

State 5:
## Known stack suffix:
## MODULE_ID
## LR(1) items:
sourceList -> MODULE_ID . [ VOID TYPE PERIOD MODULE_ID INT IMPORT ID EOF CONST CHAR BOOL ]
## Transitions:
## Reductions:
-- On VOID TYPE PERIOD MODULE_ID INT IMPORT ID EOF CONST CHAR BOOL
--   reduce production sourceList -> MODULE_ID

State 6:
## Known stack suffix:
## LPAREN
## LR(1) items:
cast -> LPAREN . INT RPAREN [ SUB STR_LIT NULL MODULE_ID LPAREN LNOT INT_LIT ID CHAR_LIT BOOL_LIT BNOT ]
cast -> LPAREN . CHAR RPAREN [ SUB STR_LIT NULL MODULE_ID LPAREN LNOT INT_LIT ID CHAR_LIT BOOL_LIT BNOT ]
primary -> LPAREN . expr RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On INT shift to state 88
-- On ID shift to state 9
-- On CHAR_LIT shift to state 11
-- On CHAR shift to state 90
-- On BOOL_LIT shift to state 12
-- On BNOT shift to state 13
-- On sourceList shift to state 14
-- On primary shift to state 19
-- On moduleAccess shift to state 21
-- On literal shift to state 22
-- On functionCall shift to state 23
-- On expr shift to state 92
-- On cast shift to state 31
## Reductions:

State 7:
## Known stack suffix:
## LNOT
## LR(1) items:
expr -> LNOT . expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On BNOT shift to state 13
-- On sourceList shift to state 14
-- On primary shift to state 19
-- On moduleAccess shift to state 21
-- On literal shift to state 22
-- On functionCall shift to state 23
-- On expr shift to state 87
-- On cast shift to state 31
## Reductions:

State 8:
## Known stack suffix:
## INT_LIT
## LR(1) items:
literal -> INT_LIT . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production literal -> INT_LIT

State 9:
## Known stack suffix:
## ID
## LR(1) items:
expr -> ID . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
functionCall -> ID . LPAREN reqUnnamedArgsList RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
functionCall -> ID . LPAREN reqNamedArgsList RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
functionCall -> ID . LPAREN RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
primary -> ID . LSBRAC expr RSBRAC [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On LSBRAC shift to state 10
-- On LPAREN shift to state 65
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production expr -> ID

State 10:
## Known stack suffix:
## ID LSBRAC
## LR(1) items:
primary -> ID LSBRAC . expr RSBRAC [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On BNOT shift to state 13
-- On sourceList shift to state 14
-- On primary shift to state 19
-- On moduleAccess shift to state 21
-- On literal shift to state 22
-- On functionCall shift to state 23
-- On expr shift to state 85
-- On cast shift to state 31
## Reductions:

State 11:
## Known stack suffix:
## CHAR_LIT
## LR(1) items:
literal -> CHAR_LIT . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production literal -> CHAR_LIT

State 12:
## Known stack suffix:
## BOOL_LIT
## LR(1) items:
literal -> BOOL_LIT . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production literal -> BOOL_LIT

State 13:
## Known stack suffix:
## BNOT
## LR(1) items:
expr -> BNOT . expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On BNOT shift to state 13
-- On sourceList shift to state 14
-- On primary shift to state 19
-- On moduleAccess shift to state 21
-- On literal shift to state 22
-- On functionCall shift to state 23
-- On expr shift to state 84
-- On cast shift to state 31
## Reductions:

State 14:
## Known stack suffix:
## sourceList
## LR(1) items:
functionCall -> sourceList . PERIOD ID LPAREN reqUnnamedArgsList RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
functionCall -> sourceList . PERIOD ID LPAREN reqNamedArgsList RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
functionCall -> sourceList . PERIOD ID LPAREN RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
moduleAccess -> sourceList . PERIOD ID [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
primary -> sourceList . PERIOD ID LSBRAC expr RSBRAC [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
sourceList -> sourceList . PERIOD MODULE_ID [ PERIOD ]
## Transitions:
-- On PERIOD shift to state 15
## Reductions:

State 15:
## Known stack suffix:
## sourceList PERIOD
## LR(1) items:
functionCall -> sourceList PERIOD . ID LPAREN reqUnnamedArgsList RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
functionCall -> sourceList PERIOD . ID LPAREN reqNamedArgsList RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
functionCall -> sourceList PERIOD . ID LPAREN RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
moduleAccess -> sourceList PERIOD . ID [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
primary -> sourceList PERIOD . ID LSBRAC expr RSBRAC [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
sourceList -> sourceList PERIOD . MODULE_ID [ PERIOD ]
## Transitions:
-- On MODULE_ID shift to state 16
-- On ID shift to state 17
## Reductions:

State 16:
## Known stack suffix:
## sourceList PERIOD MODULE_ID
## LR(1) items:
sourceList -> sourceList PERIOD MODULE_ID . [ VOID TYPE PERIOD MODULE_ID INT IMPORT ID EOF CONST CHAR BOOL ]
## Transitions:
## Reductions:
-- On VOID TYPE PERIOD MODULE_ID INT IMPORT ID EOF CONST CHAR BOOL
--   reduce production sourceList -> sourceList PERIOD MODULE_ID

State 17:
## Known stack suffix:
## sourceList PERIOD ID
## LR(1) items:
functionCall -> sourceList PERIOD ID . LPAREN reqUnnamedArgsList RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
functionCall -> sourceList PERIOD ID . LPAREN reqNamedArgsList RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
functionCall -> sourceList PERIOD ID . LPAREN RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
moduleAccess -> sourceList PERIOD ID . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
primary -> sourceList PERIOD ID . LSBRAC expr RSBRAC [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On LSBRAC shift to state 18
-- On LPAREN shift to state 62
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production moduleAccess -> sourceList PERIOD ID

State 18:
## Known stack suffix:
## sourceList PERIOD ID LSBRAC
## LR(1) items:
primary -> sourceList PERIOD ID LSBRAC . expr RSBRAC [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On BNOT shift to state 13
-- On sourceList shift to state 14
-- On primary shift to state 19
-- On moduleAccess shift to state 21
-- On literal shift to state 22
-- On functionCall shift to state 23
-- On expr shift to state 60
-- On cast shift to state 31
## Reductions:

State 19:
## Known stack suffix:
## primary
## LR(1) items:
expr -> primary . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
primary -> primary . LSBRAC expr RSBRAC [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On LSBRAC shift to state 20
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production expr -> primary

State 20:
## Known stack suffix:
## primary LSBRAC
## LR(1) items:
primary -> primary LSBRAC . expr RSBRAC [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On BNOT shift to state 13
-- On sourceList shift to state 14
-- On primary shift to state 19
-- On moduleAccess shift to state 21
-- On literal shift to state 22
-- On functionCall shift to state 23
-- On expr shift to state 24
-- On cast shift to state 31
## Reductions:

State 21:
## Known stack suffix:
## moduleAccess
## LR(1) items:
expr -> moduleAccess . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production expr -> moduleAccess

State 22:
## Known stack suffix:
## literal
## LR(1) items:
primary -> literal . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production primary -> literal

State 23:
## Known stack suffix:
## functionCall
## LR(1) items:
primary -> functionCall . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production primary -> functionCall

State 24:
## Known stack suffix:
## primary LSBRAC expr
## LR(1) items:
expr -> expr . LAND expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LOR expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BAND expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BOR expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GT expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LT expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GTE expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LTE expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . ADD expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . SUB expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MUL expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MOD expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DIV expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
primary -> expr . PERIOD ID [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
primary -> primary LSBRAC expr . RSBRAC [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 25
-- On RSBRAC shift to state 37
-- On PERIOD shift to state 27
-- On NEQ shift to state 38
-- On MUL shift to state 29
-- On MOD shift to state 33
-- On LTE shift to state 40
-- On LT shift to state 44
-- On LOR shift to state 50
-- On LAND shift to state 58
-- On GTE shift to state 46
-- On GT shift to state 48
-- On DIV shift to state 35
-- On DEQ shift to state 52
-- On BOR shift to state 54
-- On BAND shift to state 56
-- On ADD shift to state 42
## Reductions:

State 25:
## Known stack suffix:
## expr SUB
## LR(1) items:
expr -> expr SUB . expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On BNOT shift to state 13
-- On sourceList shift to state 14
-- On primary shift to state 19
-- On moduleAccess shift to state 21
-- On literal shift to state 22
-- On functionCall shift to state 23
-- On expr shift to state 26
-- On cast shift to state 31
## Reductions:

State 26:
## Known stack suffix:
## expr SUB expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr SUB expr . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
primary -> expr . PERIOD ID [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On PERIOD shift to state 27
-- On MUL shift to state 29
-- On MOD shift to state 33
-- On DIV shift to state 35
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN NEQ LTE LT LOR LAND GTE GT EOF DEQ COMMA BOR BAND ADD
--   reduce production expr -> expr SUB expr

State 27:
## Known stack suffix:
## expr PERIOD
## LR(1) items:
primary -> expr PERIOD . ID [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On ID shift to state 28
## Reductions:

State 28:
## Known stack suffix:
## expr PERIOD ID
## LR(1) items:
primary -> expr PERIOD ID . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production primary -> expr PERIOD ID

State 29:
## Known stack suffix:
## expr MUL
## LR(1) items:
expr -> expr MUL . expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On BNOT shift to state 13
-- On sourceList shift to state 14
-- On primary shift to state 19
-- On moduleAccess shift to state 21
-- On literal shift to state 22
-- On functionCall shift to state 23
-- On expr shift to state 30
-- On cast shift to state 31
## Reductions:

State 30:
## Known stack suffix:
## expr MUL expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr MUL expr . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
primary -> expr . PERIOD ID [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On PERIOD shift to state 27
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production expr -> expr MUL expr

State 31:
## Known stack suffix:
## cast
## LR(1) items:
expr -> cast . expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On BNOT shift to state 13
-- On sourceList shift to state 14
-- On primary shift to state 19
-- On moduleAccess shift to state 21
-- On literal shift to state 22
-- On functionCall shift to state 23
-- On expr shift to state 32
-- On cast shift to state 31
## Reductions:

State 32:
## Known stack suffix:
## cast expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> cast expr . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
primary -> expr . PERIOD ID [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On PERIOD shift to state 27
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production expr -> cast expr

State 33:
## Known stack suffix:
## expr MOD
## LR(1) items:
expr -> expr MOD . expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On BNOT shift to state 13
-- On sourceList shift to state 14
-- On primary shift to state 19
-- On moduleAccess shift to state 21
-- On literal shift to state 22
-- On functionCall shift to state 23
-- On expr shift to state 34
-- On cast shift to state 31
## Reductions:

State 34:
## Known stack suffix:
## expr MOD expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr MOD expr . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
primary -> expr . PERIOD ID [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On PERIOD shift to state 27
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production expr -> expr MOD expr

State 35:
## Known stack suffix:
## expr DIV
## LR(1) items:
expr -> expr DIV . expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On BNOT shift to state 13
-- On sourceList shift to state 14
-- On primary shift to state 19
-- On moduleAccess shift to state 21
-- On literal shift to state 22
-- On functionCall shift to state 23
-- On expr shift to state 36
-- On cast shift to state 31
## Reductions:

State 36:
## Known stack suffix:
## expr DIV expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr DIV expr . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
primary -> expr . PERIOD ID [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On PERIOD shift to state 27
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production expr -> expr DIV expr

State 37:
## Known stack suffix:
## primary LSBRAC expr RSBRAC
## LR(1) items:
primary -> primary LSBRAC expr RSBRAC . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production primary -> primary LSBRAC expr RSBRAC

State 38:
## Known stack suffix:
## expr NEQ
## LR(1) items:
expr -> expr NEQ . expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On BNOT shift to state 13
-- On sourceList shift to state 14
-- On primary shift to state 19
-- On moduleAccess shift to state 21
-- On literal shift to state 22
-- On functionCall shift to state 23
-- On expr shift to state 39
-- On cast shift to state 31
## Reductions:

State 39:
## Known stack suffix:
## expr NEQ expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr NEQ expr . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
primary -> expr . PERIOD ID [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 25
-- On PERIOD shift to state 27
-- On MUL shift to state 29
-- On MOD shift to state 33
-- On LTE shift to state 40
-- On LT shift to state 44
-- On GTE shift to state 46
-- On GT shift to state 48
-- On DIV shift to state 35
-- On ADD shift to state 42
## Reductions:
-- On SCOLON RSBRAC RPAREN NEQ LOR LAND EOF DEQ COMMA BOR BAND
--   reduce production expr -> expr NEQ expr

State 40:
## Known stack suffix:
## expr LTE
## LR(1) items:
expr -> expr LTE . expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On BNOT shift to state 13
-- On sourceList shift to state 14
-- On primary shift to state 19
-- On moduleAccess shift to state 21
-- On literal shift to state 22
-- On functionCall shift to state 23
-- On expr shift to state 41
-- On cast shift to state 31
## Reductions:

State 41:
## Known stack suffix:
## expr LTE expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr LTE expr . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
primary -> expr . PERIOD ID [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 25
-- On PERIOD shift to state 27
-- On MUL shift to state 29
-- On MOD shift to state 33
-- On DIV shift to state 35
-- On ADD shift to state 42
## Reductions:
-- On SCOLON RSBRAC RPAREN NEQ LTE LT LOR LAND GTE GT EOF DEQ COMMA BOR BAND
--   reduce production expr -> expr LTE expr

State 42:
## Known stack suffix:
## expr ADD
## LR(1) items:
expr -> expr ADD . expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On BNOT shift to state 13
-- On sourceList shift to state 14
-- On primary shift to state 19
-- On moduleAccess shift to state 21
-- On literal shift to state 22
-- On functionCall shift to state 23
-- On expr shift to state 43
-- On cast shift to state 31
## Reductions:

State 43:
## Known stack suffix:
## expr ADD expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr ADD expr . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
primary -> expr . PERIOD ID [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On PERIOD shift to state 27
-- On MUL shift to state 29
-- On MOD shift to state 33
-- On DIV shift to state 35
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN NEQ LTE LT LOR LAND GTE GT EOF DEQ COMMA BOR BAND ADD
--   reduce production expr -> expr ADD expr

State 44:
## Known stack suffix:
## expr LT
## LR(1) items:
expr -> expr LT . expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On BNOT shift to state 13
-- On sourceList shift to state 14
-- On primary shift to state 19
-- On moduleAccess shift to state 21
-- On literal shift to state 22
-- On functionCall shift to state 23
-- On expr shift to state 45
-- On cast shift to state 31
## Reductions:

State 45:
## Known stack suffix:
## expr LT expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr LT expr . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
primary -> expr . PERIOD ID [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 25
-- On PERIOD shift to state 27
-- On MUL shift to state 29
-- On MOD shift to state 33
-- On DIV shift to state 35
-- On ADD shift to state 42
## Reductions:
-- On SCOLON RSBRAC RPAREN NEQ LTE LT LOR LAND GTE GT EOF DEQ COMMA BOR BAND
--   reduce production expr -> expr LT expr

State 46:
## Known stack suffix:
## expr GTE
## LR(1) items:
expr -> expr GTE . expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On BNOT shift to state 13
-- On sourceList shift to state 14
-- On primary shift to state 19
-- On moduleAccess shift to state 21
-- On literal shift to state 22
-- On functionCall shift to state 23
-- On expr shift to state 47
-- On cast shift to state 31
## Reductions:

State 47:
## Known stack suffix:
## expr GTE expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr GTE expr . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
primary -> expr . PERIOD ID [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 25
-- On PERIOD shift to state 27
-- On MUL shift to state 29
-- On MOD shift to state 33
-- On DIV shift to state 35
-- On ADD shift to state 42
## Reductions:
-- On SCOLON RSBRAC RPAREN NEQ LTE LT LOR LAND GTE GT EOF DEQ COMMA BOR BAND
--   reduce production expr -> expr GTE expr

State 48:
## Known stack suffix:
## expr GT
## LR(1) items:
expr -> expr GT . expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On BNOT shift to state 13
-- On sourceList shift to state 14
-- On primary shift to state 19
-- On moduleAccess shift to state 21
-- On literal shift to state 22
-- On functionCall shift to state 23
-- On expr shift to state 49
-- On cast shift to state 31
## Reductions:

State 49:
## Known stack suffix:
## expr GT expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr GT expr . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
primary -> expr . PERIOD ID [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 25
-- On PERIOD shift to state 27
-- On MUL shift to state 29
-- On MOD shift to state 33
-- On DIV shift to state 35
-- On ADD shift to state 42
## Reductions:
-- On SCOLON RSBRAC RPAREN NEQ LTE LT LOR LAND GTE GT EOF DEQ COMMA BOR BAND
--   reduce production expr -> expr GT expr

State 50:
## Known stack suffix:
## expr LOR
## LR(1) items:
expr -> expr LOR . expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On BNOT shift to state 13
-- On sourceList shift to state 14
-- On primary shift to state 19
-- On moduleAccess shift to state 21
-- On literal shift to state 22
-- On functionCall shift to state 23
-- On expr shift to state 51
-- On cast shift to state 31
## Reductions:

State 51:
## Known stack suffix:
## expr LOR expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr LOR expr . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
primary -> expr . PERIOD ID [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 25
-- On PERIOD shift to state 27
-- On NEQ shift to state 38
-- On MUL shift to state 29
-- On MOD shift to state 33
-- On LTE shift to state 40
-- On LT shift to state 44
-- On GTE shift to state 46
-- On GT shift to state 48
-- On DIV shift to state 35
-- On DEQ shift to state 52
-- On BOR shift to state 54
-- On BAND shift to state 56
-- On ADD shift to state 42
## Reductions:
-- On SCOLON RSBRAC RPAREN LOR LAND EOF COMMA
--   reduce production expr -> expr LOR expr

State 52:
## Known stack suffix:
## expr DEQ
## LR(1) items:
expr -> expr DEQ . expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On BNOT shift to state 13
-- On sourceList shift to state 14
-- On primary shift to state 19
-- On moduleAccess shift to state 21
-- On literal shift to state 22
-- On functionCall shift to state 23
-- On expr shift to state 53
-- On cast shift to state 31
## Reductions:

State 53:
## Known stack suffix:
## expr DEQ expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr DEQ expr . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
primary -> expr . PERIOD ID [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 25
-- On PERIOD shift to state 27
-- On MUL shift to state 29
-- On MOD shift to state 33
-- On LTE shift to state 40
-- On LT shift to state 44
-- On GTE shift to state 46
-- On GT shift to state 48
-- On DIV shift to state 35
-- On ADD shift to state 42
## Reductions:
-- On SCOLON RSBRAC RPAREN NEQ LOR LAND EOF DEQ COMMA BOR BAND
--   reduce production expr -> expr DEQ expr

State 54:
## Known stack suffix:
## expr BOR
## LR(1) items:
expr -> expr BOR . expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On BNOT shift to state 13
-- On sourceList shift to state 14
-- On primary shift to state 19
-- On moduleAccess shift to state 21
-- On literal shift to state 22
-- On functionCall shift to state 23
-- On expr shift to state 55
-- On cast shift to state 31
## Reductions:

State 55:
## Known stack suffix:
## expr BOR expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr BOR expr . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
primary -> expr . PERIOD ID [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 25
-- On PERIOD shift to state 27
-- On NEQ shift to state 38
-- On MUL shift to state 29
-- On MOD shift to state 33
-- On LTE shift to state 40
-- On LT shift to state 44
-- On GTE shift to state 46
-- On GT shift to state 48
-- On DIV shift to state 35
-- On DEQ shift to state 52
-- On ADD shift to state 42
## Reductions:
-- On SCOLON RSBRAC RPAREN LOR LAND EOF COMMA BOR BAND
--   reduce production expr -> expr BOR expr

State 56:
## Known stack suffix:
## expr BAND
## LR(1) items:
expr -> expr BAND . expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On BNOT shift to state 13
-- On sourceList shift to state 14
-- On primary shift to state 19
-- On moduleAccess shift to state 21
-- On literal shift to state 22
-- On functionCall shift to state 23
-- On expr shift to state 57
-- On cast shift to state 31
## Reductions:

State 57:
## Known stack suffix:
## expr BAND expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr BAND expr . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
primary -> expr . PERIOD ID [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 25
-- On PERIOD shift to state 27
-- On NEQ shift to state 38
-- On MUL shift to state 29
-- On MOD shift to state 33
-- On LTE shift to state 40
-- On LT shift to state 44
-- On GTE shift to state 46
-- On GT shift to state 48
-- On DIV shift to state 35
-- On DEQ shift to state 52
-- On ADD shift to state 42
## Reductions:
-- On SCOLON RSBRAC RPAREN LOR LAND EOF COMMA BOR BAND
--   reduce production expr -> expr BAND expr

State 58:
## Known stack suffix:
## expr LAND
## LR(1) items:
expr -> expr LAND . expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On BNOT shift to state 13
-- On sourceList shift to state 14
-- On primary shift to state 19
-- On moduleAccess shift to state 21
-- On literal shift to state 22
-- On functionCall shift to state 23
-- On expr shift to state 59
-- On cast shift to state 31
## Reductions:

State 59:
## Known stack suffix:
## expr LAND expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr LAND expr . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
primary -> expr . PERIOD ID [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 25
-- On PERIOD shift to state 27
-- On NEQ shift to state 38
-- On MUL shift to state 29
-- On MOD shift to state 33
-- On LTE shift to state 40
-- On LT shift to state 44
-- On GTE shift to state 46
-- On GT shift to state 48
-- On DIV shift to state 35
-- On DEQ shift to state 52
-- On BOR shift to state 54
-- On BAND shift to state 56
-- On ADD shift to state 42
## Reductions:
-- On SCOLON RSBRAC RPAREN LOR LAND EOF COMMA
--   reduce production expr -> expr LAND expr

State 60:
## Known stack suffix:
## sourceList PERIOD ID LSBRAC expr
## LR(1) items:
expr -> expr . LAND expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LOR expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BAND expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BOR expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GT expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LT expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GTE expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LTE expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . ADD expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . SUB expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MUL expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MOD expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DIV expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
primary -> expr . PERIOD ID [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
primary -> sourceList PERIOD ID LSBRAC expr . RSBRAC [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 25
-- On RSBRAC shift to state 61
-- On PERIOD shift to state 27
-- On NEQ shift to state 38
-- On MUL shift to state 29
-- On MOD shift to state 33
-- On LTE shift to state 40
-- On LT shift to state 44
-- On LOR shift to state 50
-- On LAND shift to state 58
-- On GTE shift to state 46
-- On GT shift to state 48
-- On DIV shift to state 35
-- On DEQ shift to state 52
-- On BOR shift to state 54
-- On BAND shift to state 56
-- On ADD shift to state 42
## Reductions:

State 61:
## Known stack suffix:
## sourceList PERIOD ID LSBRAC expr RSBRAC
## LR(1) items:
primary -> sourceList PERIOD ID LSBRAC expr RSBRAC . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production primary -> sourceList PERIOD ID LSBRAC expr RSBRAC

State 62:
## Known stack suffix:
## sourceList PERIOD ID LPAREN
## LR(1) items:
functionCall -> sourceList PERIOD ID LPAREN . reqUnnamedArgsList RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
functionCall -> sourceList PERIOD ID LPAREN . reqNamedArgsList RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
functionCall -> sourceList PERIOD ID LPAREN . RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On RPAREN shift to state 63
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 64
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On BNOT shift to state 13
-- On sourceList shift to state 14
-- On reqUnnamedArgsList shift to state 80
-- On reqNamedArgsList shift to state 82
-- On primary shift to state 19
-- On moduleAccess shift to state 21
-- On literal shift to state 22
-- On functionCall shift to state 23
-- On expr shift to state 77
-- On cast shift to state 31
## Reductions:

State 63:
## Known stack suffix:
## sourceList PERIOD ID LPAREN RPAREN
## LR(1) items:
functionCall -> sourceList PERIOD ID LPAREN RPAREN . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production functionCall -> sourceList PERIOD ID LPAREN RPAREN

State 64:
## Known stack suffix:
## ID
## LR(1) items:
expr -> ID . [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
functionCall -> ID . LPAREN reqUnnamedArgsList RPAREN [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
functionCall -> ID . LPAREN reqNamedArgsList RPAREN [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
functionCall -> ID . LPAREN RPAREN [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
primary -> ID . LSBRAC expr RSBRAC [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
reqNamedArgsList -> ID . EQ expr [ RPAREN COMMA ]
## Transitions:
-- On LSBRAC shift to state 10
-- On LPAREN shift to state 65
-- On EQ shift to state 78
## Reductions:
-- On SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD
--   reduce production expr -> ID

State 65:
## Known stack suffix:
## ID LPAREN
## LR(1) items:
functionCall -> ID LPAREN . reqUnnamedArgsList RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
functionCall -> ID LPAREN . reqNamedArgsList RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
functionCall -> ID LPAREN . RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On RPAREN shift to state 66
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 64
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On BNOT shift to state 13
-- On sourceList shift to state 14
-- On reqUnnamedArgsList shift to state 67
-- On reqNamedArgsList shift to state 71
-- On primary shift to state 19
-- On moduleAccess shift to state 21
-- On literal shift to state 22
-- On functionCall shift to state 23
-- On expr shift to state 77
-- On cast shift to state 31
## Reductions:

State 66:
## Known stack suffix:
## ID LPAREN RPAREN
## LR(1) items:
functionCall -> ID LPAREN RPAREN . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production functionCall -> ID LPAREN RPAREN

State 67:
## Known stack suffix:
## ID LPAREN reqUnnamedArgsList
## LR(1) items:
functionCall -> ID LPAREN reqUnnamedArgsList . RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
reqUnnamedArgsList -> reqUnnamedArgsList . COMMA expr [ RPAREN COMMA ]
## Transitions:
-- On RPAREN shift to state 68
-- On COMMA shift to state 69
## Reductions:

State 68:
## Known stack suffix:
## ID LPAREN reqUnnamedArgsList RPAREN
## LR(1) items:
functionCall -> ID LPAREN reqUnnamedArgsList RPAREN . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production functionCall -> ID LPAREN reqUnnamedArgsList RPAREN

State 69:
## Known stack suffix:
## reqUnnamedArgsList COMMA
## LR(1) items:
reqUnnamedArgsList -> reqUnnamedArgsList COMMA . expr [ RPAREN COMMA ]
## Transitions:
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On BNOT shift to state 13
-- On sourceList shift to state 14
-- On primary shift to state 19
-- On moduleAccess shift to state 21
-- On literal shift to state 22
-- On functionCall shift to state 23
-- On expr shift to state 70
-- On cast shift to state 31
## Reductions:

State 70:
## Known stack suffix:
## reqUnnamedArgsList COMMA expr
## LR(1) items:
expr -> expr . LAND expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
primary -> expr . PERIOD ID [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
reqUnnamedArgsList -> reqUnnamedArgsList COMMA expr . [ RPAREN COMMA ]
## Transitions:
-- On SUB shift to state 25
-- On PERIOD shift to state 27
-- On NEQ shift to state 38
-- On MUL shift to state 29
-- On MOD shift to state 33
-- On LTE shift to state 40
-- On LT shift to state 44
-- On LOR shift to state 50
-- On LAND shift to state 58
-- On GTE shift to state 46
-- On GT shift to state 48
-- On DIV shift to state 35
-- On DEQ shift to state 52
-- On BOR shift to state 54
-- On BAND shift to state 56
-- On ADD shift to state 42
## Reductions:
-- On RPAREN COMMA
--   reduce production reqUnnamedArgsList -> reqUnnamedArgsList COMMA expr

State 71:
## Known stack suffix:
## ID LPAREN reqNamedArgsList
## LR(1) items:
functionCall -> ID LPAREN reqNamedArgsList . RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
reqNamedArgsList -> reqNamedArgsList . COMMA ID EQ expr [ RPAREN COMMA ]
## Transitions:
-- On RPAREN shift to state 72
-- On COMMA shift to state 73
## Reductions:

State 72:
## Known stack suffix:
## ID LPAREN reqNamedArgsList RPAREN
## LR(1) items:
functionCall -> ID LPAREN reqNamedArgsList RPAREN . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production functionCall -> ID LPAREN reqNamedArgsList RPAREN

State 73:
## Known stack suffix:
## reqNamedArgsList COMMA
## LR(1) items:
reqNamedArgsList -> reqNamedArgsList COMMA . ID EQ expr [ RPAREN COMMA ]
## Transitions:
-- On ID shift to state 74
## Reductions:

State 74:
## Known stack suffix:
## reqNamedArgsList COMMA ID
## LR(1) items:
reqNamedArgsList -> reqNamedArgsList COMMA ID . EQ expr [ RPAREN COMMA ]
## Transitions:
-- On EQ shift to state 75
## Reductions:

State 75:
## Known stack suffix:
## reqNamedArgsList COMMA ID EQ
## LR(1) items:
reqNamedArgsList -> reqNamedArgsList COMMA ID EQ . expr [ RPAREN COMMA ]
## Transitions:
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On BNOT shift to state 13
-- On sourceList shift to state 14
-- On primary shift to state 19
-- On moduleAccess shift to state 21
-- On literal shift to state 22
-- On functionCall shift to state 23
-- On expr shift to state 76
-- On cast shift to state 31
## Reductions:

State 76:
## Known stack suffix:
## reqNamedArgsList COMMA ID EQ expr
## LR(1) items:
expr -> expr . LAND expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
primary -> expr . PERIOD ID [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
reqNamedArgsList -> reqNamedArgsList COMMA ID EQ expr . [ RPAREN COMMA ]
## Transitions:
-- On SUB shift to state 25
-- On PERIOD shift to state 27
-- On NEQ shift to state 38
-- On MUL shift to state 29
-- On MOD shift to state 33
-- On LTE shift to state 40
-- On LT shift to state 44
-- On LOR shift to state 50
-- On LAND shift to state 58
-- On GTE shift to state 46
-- On GT shift to state 48
-- On DIV shift to state 35
-- On DEQ shift to state 52
-- On BOR shift to state 54
-- On BAND shift to state 56
-- On ADD shift to state 42
## Reductions:
-- On RPAREN COMMA
--   reduce production reqNamedArgsList -> reqNamedArgsList COMMA ID EQ expr

State 77:
## Known stack suffix:
## expr
## LR(1) items:
expr -> expr . LAND expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
primary -> expr . PERIOD ID [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
reqUnnamedArgsList -> expr . [ RPAREN COMMA ]
## Transitions:
-- On SUB shift to state 25
-- On PERIOD shift to state 27
-- On NEQ shift to state 38
-- On MUL shift to state 29
-- On MOD shift to state 33
-- On LTE shift to state 40
-- On LT shift to state 44
-- On LOR shift to state 50
-- On LAND shift to state 58
-- On GTE shift to state 46
-- On GT shift to state 48
-- On DIV shift to state 35
-- On DEQ shift to state 52
-- On BOR shift to state 54
-- On BAND shift to state 56
-- On ADD shift to state 42
## Reductions:
-- On RPAREN COMMA
--   reduce production reqUnnamedArgsList -> expr

State 78:
## Known stack suffix:
## ID EQ
## LR(1) items:
reqNamedArgsList -> ID EQ . expr [ RPAREN COMMA ]
## Transitions:
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On BNOT shift to state 13
-- On sourceList shift to state 14
-- On primary shift to state 19
-- On moduleAccess shift to state 21
-- On literal shift to state 22
-- On functionCall shift to state 23
-- On expr shift to state 79
-- On cast shift to state 31
## Reductions:

State 79:
## Known stack suffix:
## ID EQ expr
## LR(1) items:
expr -> expr . LAND expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
primary -> expr . PERIOD ID [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ COMMA BOR BAND ADD ]
reqNamedArgsList -> ID EQ expr . [ RPAREN COMMA ]
## Transitions:
-- On SUB shift to state 25
-- On PERIOD shift to state 27
-- On NEQ shift to state 38
-- On MUL shift to state 29
-- On MOD shift to state 33
-- On LTE shift to state 40
-- On LT shift to state 44
-- On LOR shift to state 50
-- On LAND shift to state 58
-- On GTE shift to state 46
-- On GT shift to state 48
-- On DIV shift to state 35
-- On DEQ shift to state 52
-- On BOR shift to state 54
-- On BAND shift to state 56
-- On ADD shift to state 42
## Reductions:
-- On RPAREN COMMA
--   reduce production reqNamedArgsList -> ID EQ expr

State 80:
## Known stack suffix:
## sourceList PERIOD ID LPAREN reqUnnamedArgsList
## LR(1) items:
functionCall -> sourceList PERIOD ID LPAREN reqUnnamedArgsList . RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
reqUnnamedArgsList -> reqUnnamedArgsList . COMMA expr [ RPAREN COMMA ]
## Transitions:
-- On RPAREN shift to state 81
-- On COMMA shift to state 69
## Reductions:

State 81:
## Known stack suffix:
## sourceList PERIOD ID LPAREN reqUnnamedArgsList RPAREN
## LR(1) items:
functionCall -> sourceList PERIOD ID LPAREN reqUnnamedArgsList RPAREN . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production functionCall -> sourceList PERIOD ID LPAREN reqUnnamedArgsList RPAREN

State 82:
## Known stack suffix:
## sourceList PERIOD ID LPAREN reqNamedArgsList
## LR(1) items:
functionCall -> sourceList PERIOD ID LPAREN reqNamedArgsList . RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
reqNamedArgsList -> reqNamedArgsList . COMMA ID EQ expr [ RPAREN COMMA ]
## Transitions:
-- On RPAREN shift to state 83
-- On COMMA shift to state 73
## Reductions:

State 83:
## Known stack suffix:
## sourceList PERIOD ID LPAREN reqNamedArgsList RPAREN
## LR(1) items:
functionCall -> sourceList PERIOD ID LPAREN reqNamedArgsList RPAREN . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production functionCall -> sourceList PERIOD ID LPAREN reqNamedArgsList RPAREN

State 84:
## Known stack suffix:
## BNOT expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> BNOT expr . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
primary -> expr . PERIOD ID [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On PERIOD shift to state 27
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production expr -> BNOT expr

State 85:
## Known stack suffix:
## ID LSBRAC expr
## LR(1) items:
expr -> expr . LAND expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LOR expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BAND expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BOR expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GT expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LT expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GTE expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LTE expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . ADD expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . SUB expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MUL expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MOD expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DIV expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
primary -> expr . PERIOD ID [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
primary -> ID LSBRAC expr . RSBRAC [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 25
-- On RSBRAC shift to state 86
-- On PERIOD shift to state 27
-- On NEQ shift to state 38
-- On MUL shift to state 29
-- On MOD shift to state 33
-- On LTE shift to state 40
-- On LT shift to state 44
-- On LOR shift to state 50
-- On LAND shift to state 58
-- On GTE shift to state 46
-- On GT shift to state 48
-- On DIV shift to state 35
-- On DEQ shift to state 52
-- On BOR shift to state 54
-- On BAND shift to state 56
-- On ADD shift to state 42
## Reductions:

State 86:
## Known stack suffix:
## ID LSBRAC expr RSBRAC
## LR(1) items:
primary -> ID LSBRAC expr RSBRAC . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production primary -> ID LSBRAC expr RSBRAC

State 87:
## Known stack suffix:
## LNOT expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> LNOT expr . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
primary -> expr . PERIOD ID [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On PERIOD shift to state 27
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production expr -> LNOT expr

State 88:
## Known stack suffix:
## LPAREN INT
## LR(1) items:
cast -> LPAREN INT . RPAREN [ SUB STR_LIT NULL MODULE_ID LPAREN LNOT INT_LIT ID CHAR_LIT BOOL_LIT BNOT ]
## Transitions:
-- On RPAREN shift to state 89
## Reductions:

State 89:
## Known stack suffix:
## LPAREN INT RPAREN
## LR(1) items:
cast -> LPAREN INT RPAREN . [ SUB STR_LIT NULL MODULE_ID LPAREN LNOT INT_LIT ID CHAR_LIT BOOL_LIT BNOT ]
## Transitions:
## Reductions:
-- On SUB STR_LIT NULL MODULE_ID LPAREN LNOT INT_LIT ID CHAR_LIT BOOL_LIT BNOT
--   reduce production cast -> LPAREN INT RPAREN

State 90:
## Known stack suffix:
## LPAREN CHAR
## LR(1) items:
cast -> LPAREN CHAR . RPAREN [ SUB STR_LIT NULL MODULE_ID LPAREN LNOT INT_LIT ID CHAR_LIT BOOL_LIT BNOT ]
## Transitions:
-- On RPAREN shift to state 91
## Reductions:

State 91:
## Known stack suffix:
## LPAREN CHAR RPAREN
## LR(1) items:
cast -> LPAREN CHAR RPAREN . [ SUB STR_LIT NULL MODULE_ID LPAREN LNOT INT_LIT ID CHAR_LIT BOOL_LIT BNOT ]
## Transitions:
## Reductions:
-- On SUB STR_LIT NULL MODULE_ID LPAREN LNOT INT_LIT ID CHAR_LIT BOOL_LIT BNOT
--   reduce production cast -> LPAREN CHAR RPAREN

State 92:
## Known stack suffix:
## LPAREN expr
## LR(1) items:
expr -> expr . LAND expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LOR expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BAND expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BOR expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GT expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LT expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GTE expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LTE expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . ADD expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . SUB expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MUL expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MOD expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DIV expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
primary -> expr . PERIOD ID [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
primary -> LPAREN expr . RPAREN [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 25
-- On RPAREN shift to state 93
-- On PERIOD shift to state 27
-- On NEQ shift to state 38
-- On MUL shift to state 29
-- On MOD shift to state 33
-- On LTE shift to state 40
-- On LT shift to state 44
-- On LOR shift to state 50
-- On LAND shift to state 58
-- On GTE shift to state 46
-- On GT shift to state 48
-- On DIV shift to state 35
-- On DEQ shift to state 52
-- On BOR shift to state 54
-- On BAND shift to state 56
-- On ADD shift to state 42
## Reductions:

State 93:
## Known stack suffix:
## LPAREN expr RPAREN
## LR(1) items:
primary -> LPAREN expr RPAREN . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD
--   reduce production primary -> LPAREN expr RPAREN

State 94:
## Known stack suffix:
## SUB expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
expr -> SUB expr . [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
primary -> expr . PERIOD ID [ SUB SCOLON RSBRAC RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ COMMA BOR BAND ADD ]
## Transitions:
-- On PERIOD shift to state 27
-- On MUL shift to state 29
-- On MOD shift to state 33
-- On DIV shift to state 35
## Reductions:
-- On SUB SCOLON RSBRAC RPAREN NEQ LTE LT LOR LAND GTE GT EOF DEQ COMMA BOR BAND ADD
--   reduce production expr -> SUB expr

State 95:
## Known stack suffix:
## INT
## LR(1) items:
dataType -> INT . kleenelrsbrac [ ID ]
## Transitions:
-- On kleenelrsbrac shift to state 96
## Reductions:
-- On LSBRAC ID
--   reduce production kleenelrsbrac ->

State 96:
## Known stack suffix:
## INT kleenelrsbrac
## LR(1) items:
dataType -> INT kleenelrsbrac . [ ID ]
kleenelrsbrac -> kleenelrsbrac . LSBRAC RSBRAC [ LSBRAC ID ]
## Transitions:
-- On LSBRAC shift to state 97
## Reductions:
-- On ID
--   reduce production dataType -> INT kleenelrsbrac

State 97:
## Known stack suffix:
## kleenelrsbrac LSBRAC
## LR(1) items:
kleenelrsbrac -> kleenelrsbrac LSBRAC . RSBRAC [ LSBRAC ID ]
## Transitions:
-- On RSBRAC shift to state 98
## Reductions:

State 98:
## Known stack suffix:
## kleenelrsbrac LSBRAC RSBRAC
## LR(1) items:
kleenelrsbrac -> kleenelrsbrac LSBRAC RSBRAC . [ LSBRAC ID ]
## Transitions:
## Reductions:
-- On LSBRAC ID
--   reduce production kleenelrsbrac -> kleenelrsbrac LSBRAC RSBRAC

State 99:
## Known stack suffix:
## ID
## LR(1) items:
dataType -> ID . [ ID ]
dataType -> ID . LSBRAC RSBRAC kleenelrsbrac [ ID ]
expr -> ID . [ SUB PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
functionCall -> ID . LPAREN reqUnnamedArgsList RPAREN [ SUB PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
functionCall -> ID . LPAREN reqNamedArgsList RPAREN [ SUB PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
functionCall -> ID . LPAREN RPAREN [ SUB PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
lhs -> ID . [ EQ COMMA ]
lhs -> ID . LSBRAC expr RSBRAC [ EQ COMMA ]
primary -> ID . LSBRAC expr RSBRAC [ SUB PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
## Transitions:
-- On LSBRAC shift to state 100
-- On LPAREN shift to state 65
## Reductions:
-- On ID
--   reduce production dataType -> ID
-- On SUB PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD
--   reduce production expr -> ID
-- On EQ COMMA
--   reduce production lhs -> ID

State 100:
## Known stack suffix:
## ID LSBRAC
## LR(1) items:
dataType -> ID LSBRAC . RSBRAC kleenelrsbrac [ ID ]
lhs -> ID LSBRAC . expr RSBRAC [ EQ COMMA ]
primary -> ID LSBRAC . expr RSBRAC [ SUB PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On RSBRAC shift to state 101
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On BNOT shift to state 13
-- On sourceList shift to state 14
-- On primary shift to state 19
-- On moduleAccess shift to state 21
-- On literal shift to state 22
-- On functionCall shift to state 23
-- On expr shift to state 103
-- On cast shift to state 31
## Reductions:

State 101:
## Known stack suffix:
## ID LSBRAC RSBRAC
## LR(1) items:
dataType -> ID LSBRAC RSBRAC . kleenelrsbrac [ ID ]
## Transitions:
-- On kleenelrsbrac shift to state 102
## Reductions:
-- On LSBRAC ID
--   reduce production kleenelrsbrac ->

State 102:
## Known stack suffix:
## ID LSBRAC RSBRAC kleenelrsbrac
## LR(1) items:
dataType -> ID LSBRAC RSBRAC kleenelrsbrac . [ ID ]
kleenelrsbrac -> kleenelrsbrac . LSBRAC RSBRAC [ LSBRAC ID ]
## Transitions:
-- On LSBRAC shift to state 97
## Reductions:
-- On ID
--   reduce production dataType -> ID LSBRAC RSBRAC kleenelrsbrac

State 103:
## Known stack suffix:
## ID LSBRAC expr
## LR(1) items:
expr -> expr . LAND expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LOR expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BAND expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BOR expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GT expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LT expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GTE expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LTE expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . ADD expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . SUB expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MUL expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MOD expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DIV expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
lhs -> ID LSBRAC expr . RSBRAC [ EQ COMMA ]
primary -> expr . PERIOD ID [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
primary -> ID LSBRAC expr . RSBRAC [ SUB PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 25
-- On RSBRAC shift to state 104
-- On PERIOD shift to state 27
-- On NEQ shift to state 38
-- On MUL shift to state 29
-- On MOD shift to state 33
-- On LTE shift to state 40
-- On LT shift to state 44
-- On LOR shift to state 50
-- On LAND shift to state 58
-- On GTE shift to state 46
-- On GT shift to state 48
-- On DIV shift to state 35
-- On DEQ shift to state 52
-- On BOR shift to state 54
-- On BAND shift to state 56
-- On ADD shift to state 42
## Reductions:

State 104:
## Known stack suffix:
## ID LSBRAC expr RSBRAC
## LR(1) items:
lhs -> ID LSBRAC expr RSBRAC . [ EQ COMMA ]
primary -> ID LSBRAC expr RSBRAC . [ SUB PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
## Transitions:
## Reductions:
-- On EQ COMMA
--   reduce production lhs -> ID LSBRAC expr RSBRAC
-- On SUB PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD
--   reduce production primary -> ID LSBRAC expr RSBRAC

State 105:
## Known stack suffix:
## CONST
## LR(1) items:
varDecl -> CONST . dataType ID [ SCOLON RPAREN RCBRAC EQ COMMA ]
## Transitions:
-- On MODULE_ID shift to state 5
-- On INT shift to state 95
-- On ID shift to state 106
-- On CHAR shift to state 108
-- On BOOL shift to state 110
-- On sourceList shift to state 112
-- On dataType shift to state 118
## Reductions:

State 106:
## Known stack suffix:
## ID
## LR(1) items:
dataType -> ID . [ ID ]
dataType -> ID . LSBRAC RSBRAC kleenelrsbrac [ ID ]
## Transitions:
-- On LSBRAC shift to state 107
## Reductions:
-- On ID
--   reduce production dataType -> ID

State 107:
## Known stack suffix:
## ID LSBRAC
## LR(1) items:
dataType -> ID LSBRAC . RSBRAC kleenelrsbrac [ ID ]
## Transitions:
-- On RSBRAC shift to state 101
## Reductions:

State 108:
## Known stack suffix:
## CHAR
## LR(1) items:
dataType -> CHAR . kleenelrsbrac [ ID ]
## Transitions:
-- On kleenelrsbrac shift to state 109
## Reductions:
-- On LSBRAC ID
--   reduce production kleenelrsbrac ->

State 109:
## Known stack suffix:
## CHAR kleenelrsbrac
## LR(1) items:
dataType -> CHAR kleenelrsbrac . [ ID ]
kleenelrsbrac -> kleenelrsbrac . LSBRAC RSBRAC [ LSBRAC ID ]
## Transitions:
-- On LSBRAC shift to state 97
## Reductions:
-- On ID
--   reduce production dataType -> CHAR kleenelrsbrac

State 110:
## Known stack suffix:
## BOOL
## LR(1) items:
dataType -> BOOL . kleenelrsbrac [ ID ]
## Transitions:
-- On kleenelrsbrac shift to state 111
## Reductions:
-- On LSBRAC ID
--   reduce production kleenelrsbrac ->

State 111:
## Known stack suffix:
## BOOL kleenelrsbrac
## LR(1) items:
dataType -> BOOL kleenelrsbrac . [ ID ]
kleenelrsbrac -> kleenelrsbrac . LSBRAC RSBRAC [ LSBRAC ID ]
## Transitions:
-- On LSBRAC shift to state 97
## Reductions:
-- On ID
--   reduce production dataType -> BOOL kleenelrsbrac

State 112:
## Known stack suffix:
## sourceList
## LR(1) items:
dataType -> sourceList . PERIOD ID [ ID ]
dataType -> sourceList . PERIOD ID LSBRAC RSBRAC kleenelrsbrac [ ID ]
sourceList -> sourceList . PERIOD MODULE_ID [ PERIOD ]
## Transitions:
-- On PERIOD shift to state 113
## Reductions:

State 113:
## Known stack suffix:
## sourceList PERIOD
## LR(1) items:
dataType -> sourceList PERIOD . ID [ ID ]
dataType -> sourceList PERIOD . ID LSBRAC RSBRAC kleenelrsbrac [ ID ]
sourceList -> sourceList PERIOD . MODULE_ID [ PERIOD ]
## Transitions:
-- On MODULE_ID shift to state 16
-- On ID shift to state 114
## Reductions:

State 114:
## Known stack suffix:
## sourceList PERIOD ID
## LR(1) items:
dataType -> sourceList PERIOD ID . [ ID ]
dataType -> sourceList PERIOD ID . LSBRAC RSBRAC kleenelrsbrac [ ID ]
## Transitions:
-- On LSBRAC shift to state 115
## Reductions:
-- On ID
--   reduce production dataType -> sourceList PERIOD ID

State 115:
## Known stack suffix:
## sourceList PERIOD ID LSBRAC
## LR(1) items:
dataType -> sourceList PERIOD ID LSBRAC . RSBRAC kleenelrsbrac [ ID ]
## Transitions:
-- On RSBRAC shift to state 116
## Reductions:

State 116:
## Known stack suffix:
## sourceList PERIOD ID LSBRAC RSBRAC
## LR(1) items:
dataType -> sourceList PERIOD ID LSBRAC RSBRAC . kleenelrsbrac [ ID ]
## Transitions:
-- On kleenelrsbrac shift to state 117
## Reductions:
-- On LSBRAC ID
--   reduce production kleenelrsbrac ->

State 117:
## Known stack suffix:
## sourceList PERIOD ID LSBRAC RSBRAC kleenelrsbrac
## LR(1) items:
dataType -> sourceList PERIOD ID LSBRAC RSBRAC kleenelrsbrac . [ ID ]
kleenelrsbrac -> kleenelrsbrac . LSBRAC RSBRAC [ LSBRAC ID ]
## Transitions:
-- On LSBRAC shift to state 97
## Reductions:
-- On ID
--   reduce production dataType -> sourceList PERIOD ID LSBRAC RSBRAC kleenelrsbrac

State 118:
## Known stack suffix:
## CONST dataType
## LR(1) items:
varDecl -> CONST dataType . ID [ SCOLON RPAREN RCBRAC EQ COMMA ]
## Transitions:
-- On ID shift to state 119
## Reductions:

State 119:
## Known stack suffix:
## CONST dataType ID
## LR(1) items:
varDecl -> CONST dataType ID . [ SCOLON RPAREN RCBRAC EQ COMMA ]
## Transitions:
## Reductions:
-- On SCOLON RPAREN RCBRAC EQ COMMA
--   reduce production varDecl -> CONST dataType ID

State 120:
## Known stack suffix:
## varDecl
## LR(1) items:
lhs -> varDecl . [ EQ COMMA ]
## Transitions:
## Reductions:
-- On EQ COMMA
--   reduce production lhs -> varDecl

State 121:
## Known stack suffix:
## sourceList
## LR(1) items:
dataType -> sourceList . PERIOD ID [ ID ]
dataType -> sourceList . PERIOD ID LSBRAC RSBRAC kleenelrsbrac [ ID ]
functionCall -> sourceList . PERIOD ID LPAREN reqUnnamedArgsList RPAREN [ SUB PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
functionCall -> sourceList . PERIOD ID LPAREN reqNamedArgsList RPAREN [ SUB PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
functionCall -> sourceList . PERIOD ID LPAREN RPAREN [ SUB PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
lhs -> sourceList . PERIOD ID LSBRAC expr RSBRAC [ EQ COMMA ]
moduleAccess -> sourceList . PERIOD ID [ SUB PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EQ DIV DEQ COMMA BOR BAND ADD ]
primary -> sourceList . PERIOD ID LSBRAC expr RSBRAC [ SUB PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
sourceList -> sourceList . PERIOD MODULE_ID [ PERIOD ]
## Transitions:
-- On PERIOD shift to state 122
## Reductions:

State 122:
## Known stack suffix:
## sourceList PERIOD
## LR(1) items:
dataType -> sourceList PERIOD . ID [ ID ]
dataType -> sourceList PERIOD . ID LSBRAC RSBRAC kleenelrsbrac [ ID ]
functionCall -> sourceList PERIOD . ID LPAREN reqUnnamedArgsList RPAREN [ SUB PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
functionCall -> sourceList PERIOD . ID LPAREN reqNamedArgsList RPAREN [ SUB PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
functionCall -> sourceList PERIOD . ID LPAREN RPAREN [ SUB PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
lhs -> sourceList PERIOD . ID LSBRAC expr RSBRAC [ EQ COMMA ]
moduleAccess -> sourceList PERIOD . ID [ SUB PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EQ DIV DEQ COMMA BOR BAND ADD ]
primary -> sourceList PERIOD . ID LSBRAC expr RSBRAC [ SUB PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
sourceList -> sourceList PERIOD . MODULE_ID [ PERIOD ]
## Transitions:
-- On MODULE_ID shift to state 16
-- On ID shift to state 123
## Reductions:

State 123:
## Known stack suffix:
## sourceList PERIOD ID
## LR(1) items:
dataType -> sourceList PERIOD ID . [ ID ]
dataType -> sourceList PERIOD ID . LSBRAC RSBRAC kleenelrsbrac [ ID ]
functionCall -> sourceList PERIOD ID . LPAREN reqUnnamedArgsList RPAREN [ SUB PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
functionCall -> sourceList PERIOD ID . LPAREN reqNamedArgsList RPAREN [ SUB PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
functionCall -> sourceList PERIOD ID . LPAREN RPAREN [ SUB PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
lhs -> sourceList PERIOD ID . LSBRAC expr RSBRAC [ EQ COMMA ]
moduleAccess -> sourceList PERIOD ID . [ SUB PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EQ DIV DEQ COMMA BOR BAND ADD ]
primary -> sourceList PERIOD ID . LSBRAC expr RSBRAC [ SUB PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
## Transitions:
-- On LSBRAC shift to state 124
-- On LPAREN shift to state 62
## Reductions:
-- On ID
--   reduce production dataType -> sourceList PERIOD ID
-- On SUB PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EQ DIV DEQ COMMA BOR BAND ADD
--   reduce production moduleAccess -> sourceList PERIOD ID

State 124:
## Known stack suffix:
## sourceList PERIOD ID LSBRAC
## LR(1) items:
dataType -> sourceList PERIOD ID LSBRAC . RSBRAC kleenelrsbrac [ ID ]
lhs -> sourceList PERIOD ID LSBRAC . expr RSBRAC [ EQ COMMA ]
primary -> sourceList PERIOD ID LSBRAC . expr RSBRAC [ SUB PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On RSBRAC shift to state 116
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On BNOT shift to state 13
-- On sourceList shift to state 14
-- On primary shift to state 19
-- On moduleAccess shift to state 21
-- On literal shift to state 22
-- On functionCall shift to state 23
-- On expr shift to state 125
-- On cast shift to state 31
## Reductions:

State 125:
## Known stack suffix:
## sourceList PERIOD ID LSBRAC expr
## LR(1) items:
expr -> expr . LAND expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LOR expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BAND expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BOR expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GT expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LT expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GTE expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LTE expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . ADD expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . SUB expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MUL expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MOD expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DIV expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
lhs -> sourceList PERIOD ID LSBRAC expr . RSBRAC [ EQ COMMA ]
primary -> expr . PERIOD ID [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
primary -> sourceList PERIOD ID LSBRAC expr . RSBRAC [ SUB PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 25
-- On RSBRAC shift to state 126
-- On PERIOD shift to state 27
-- On NEQ shift to state 38
-- On MUL shift to state 29
-- On MOD shift to state 33
-- On LTE shift to state 40
-- On LT shift to state 44
-- On LOR shift to state 50
-- On LAND shift to state 58
-- On GTE shift to state 46
-- On GT shift to state 48
-- On DIV shift to state 35
-- On DEQ shift to state 52
-- On BOR shift to state 54
-- On BAND shift to state 56
-- On ADD shift to state 42
## Reductions:

State 126:
## Known stack suffix:
## sourceList PERIOD ID LSBRAC expr RSBRAC
## LR(1) items:
lhs -> sourceList PERIOD ID LSBRAC expr RSBRAC . [ EQ COMMA ]
primary -> sourceList PERIOD ID LSBRAC expr RSBRAC . [ SUB PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
## Transitions:
## Reductions:
-- On EQ COMMA
--   reduce production lhs -> sourceList PERIOD ID LSBRAC expr RSBRAC
-- On SUB PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD
--   reduce production primary -> sourceList PERIOD ID LSBRAC expr RSBRAC

State 127:
## Known stack suffix:
## primary
## LR(1) items:
expr -> primary . [ SUB PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
lhs -> primary . LSBRAC expr RSBRAC [ EQ COMMA ]
primary -> primary . LSBRAC expr RSBRAC [ SUB PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
## Transitions:
-- On LSBRAC shift to state 128
## Reductions:
-- On SUB PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD
--   reduce production expr -> primary

State 128:
## Known stack suffix:
## primary LSBRAC
## LR(1) items:
lhs -> primary LSBRAC . expr RSBRAC [ EQ COMMA ]
primary -> primary LSBRAC . expr RSBRAC [ SUB PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On BNOT shift to state 13
-- On sourceList shift to state 14
-- On primary shift to state 19
-- On moduleAccess shift to state 21
-- On literal shift to state 22
-- On functionCall shift to state 23
-- On expr shift to state 129
-- On cast shift to state 31
## Reductions:

State 129:
## Known stack suffix:
## primary LSBRAC expr
## LR(1) items:
expr -> expr . LAND expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LOR expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BAND expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BOR expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GT expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LT expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GTE expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LTE expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . ADD expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . SUB expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MUL expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MOD expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DIV expr [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
lhs -> primary LSBRAC expr . RSBRAC [ EQ COMMA ]
primary -> expr . PERIOD ID [ SUB RSBRAC PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
primary -> primary LSBRAC expr . RSBRAC [ SUB PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 25
-- On RSBRAC shift to state 130
-- On PERIOD shift to state 27
-- On NEQ shift to state 38
-- On MUL shift to state 29
-- On MOD shift to state 33
-- On LTE shift to state 40
-- On LT shift to state 44
-- On LOR shift to state 50
-- On LAND shift to state 58
-- On GTE shift to state 46
-- On GT shift to state 48
-- On DIV shift to state 35
-- On DEQ shift to state 52
-- On BOR shift to state 54
-- On BAND shift to state 56
-- On ADD shift to state 42
## Reductions:

State 130:
## Known stack suffix:
## primary LSBRAC expr RSBRAC
## LR(1) items:
lhs -> primary LSBRAC expr RSBRAC . [ EQ COMMA ]
primary -> primary LSBRAC expr RSBRAC . [ SUB PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
## Transitions:
## Reductions:
-- On EQ COMMA
--   reduce production lhs -> primary LSBRAC expr RSBRAC
-- On SUB PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD
--   reduce production primary -> primary LSBRAC expr RSBRAC

State 131:
## Known stack suffix:
## moduleAccess
## LR(1) items:
expr -> moduleAccess . [ SUB PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
lhs -> moduleAccess . [ EQ COMMA ]
## Transitions:
## Reductions:
-- On SUB PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD
--   reduce production expr -> moduleAccess
-- On EQ COMMA
--   reduce production lhs -> moduleAccess

State 132:
## Known stack suffix:
## main
## LR(1) items:
main' -> main . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept main

State 133:
## Known stack suffix:
## lhsList
## LR(1) items:
assignment -> lhsList . EQ functionCall [ SCOLON EOF ]
lhsList -> lhsList . COMMA lhs [ EQ COMMA ]
## Transitions:
-- On EQ shift to state 134
-- On COMMA shift to state 140
## Reductions:

State 134:
## Known stack suffix:
## lhsList EQ
## LR(1) items:
assignment -> lhsList EQ . functionCall [ SCOLON EOF ]
## Transitions:
-- On MODULE_ID shift to state 5
-- On ID shift to state 135
-- On sourceList shift to state 136
-- On functionCall shift to state 139
## Reductions:

State 135:
## Known stack suffix:
## ID
## LR(1) items:
functionCall -> ID . LPAREN reqUnnamedArgsList RPAREN [ SCOLON EOF ]
functionCall -> ID . LPAREN reqNamedArgsList RPAREN [ SCOLON EOF ]
functionCall -> ID . LPAREN RPAREN [ SCOLON EOF ]
## Transitions:
-- On LPAREN shift to state 65
## Reductions:

State 136:
## Known stack suffix:
## sourceList
## LR(1) items:
functionCall -> sourceList . PERIOD ID LPAREN reqUnnamedArgsList RPAREN [ SCOLON EOF ]
functionCall -> sourceList . PERIOD ID LPAREN reqNamedArgsList RPAREN [ SCOLON EOF ]
functionCall -> sourceList . PERIOD ID LPAREN RPAREN [ SCOLON EOF ]
sourceList -> sourceList . PERIOD MODULE_ID [ PERIOD ]
## Transitions:
-- On PERIOD shift to state 137
## Reductions:

State 137:
## Known stack suffix:
## sourceList PERIOD
## LR(1) items:
functionCall -> sourceList PERIOD . ID LPAREN reqUnnamedArgsList RPAREN [ SCOLON EOF ]
functionCall -> sourceList PERIOD . ID LPAREN reqNamedArgsList RPAREN [ SCOLON EOF ]
functionCall -> sourceList PERIOD . ID LPAREN RPAREN [ SCOLON EOF ]
sourceList -> sourceList PERIOD . MODULE_ID [ PERIOD ]
## Transitions:
-- On MODULE_ID shift to state 16
-- On ID shift to state 138
## Reductions:

State 138:
## Known stack suffix:
## sourceList PERIOD ID
## LR(1) items:
functionCall -> sourceList PERIOD ID . LPAREN reqUnnamedArgsList RPAREN [ SCOLON EOF ]
functionCall -> sourceList PERIOD ID . LPAREN reqNamedArgsList RPAREN [ SCOLON EOF ]
functionCall -> sourceList PERIOD ID . LPAREN RPAREN [ SCOLON EOF ]
## Transitions:
-- On LPAREN shift to state 62
## Reductions:

State 139:
## Known stack suffix:
## lhsList EQ functionCall
## LR(1) items:
assignment -> lhsList EQ functionCall . [ SCOLON EOF ]
## Transitions:
## Reductions:
-- On SCOLON EOF
--   reduce production assignment -> lhsList EQ functionCall

State 140:
## Known stack suffix:
## lhsList COMMA
## LR(1) items:
lhsList -> lhsList COMMA . lhs [ EQ COMMA ]
## Transitions:
-- On USCORE shift to state 1
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On INT shift to state 95
-- On ID shift to state 99
-- On CONST shift to state 105
-- On CHAR_LIT shift to state 11
-- On CHAR shift to state 108
-- On BOOL_LIT shift to state 12
-- On BOOL shift to state 110
-- On BNOT shift to state 13
-- On varDecl shift to state 120
-- On sourceList shift to state 121
-- On primary shift to state 127
-- On moduleAccess shift to state 131
-- On literal shift to state 22
-- On lhs shift to state 141
-- On functionCall shift to state 23
-- On expr shift to state 142
-- On dataType shift to state 145
-- On cast shift to state 31
## Reductions:

State 141:
## Known stack suffix:
## lhsList COMMA lhs
## LR(1) items:
lhsList -> lhsList COMMA lhs . [ EQ COMMA ]
## Transitions:
## Reductions:
-- On EQ COMMA
--   reduce production lhsList -> lhsList COMMA lhs

State 142:
## Known stack suffix:
## expr
## LR(1) items:
expr -> expr . LAND expr [ SUB PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LOR expr [ SUB PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BAND expr [ SUB PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BOR expr [ SUB PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GT expr [ SUB PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LT expr [ SUB PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GTE expr [ SUB PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LTE expr [ SUB PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . ADD expr [ SUB PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . SUB expr [ SUB PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MUL expr [ SUB PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MOD expr [ SUB PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DIV expr [ SUB PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
lhs -> expr . PERIOD ID [ EQ COMMA ]
primary -> expr . PERIOD ID [ SUB PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 25
-- On PERIOD shift to state 143
-- On NEQ shift to state 38
-- On MUL shift to state 29
-- On MOD shift to state 33
-- On LTE shift to state 40
-- On LT shift to state 44
-- On LOR shift to state 50
-- On LAND shift to state 58
-- On GTE shift to state 46
-- On GT shift to state 48
-- On DIV shift to state 35
-- On DEQ shift to state 52
-- On BOR shift to state 54
-- On BAND shift to state 56
-- On ADD shift to state 42
## Reductions:

State 143:
## Known stack suffix:
## expr PERIOD
## LR(1) items:
lhs -> expr PERIOD . ID [ EQ COMMA ]
primary -> expr PERIOD . ID [ SUB PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
## Transitions:
-- On ID shift to state 144
## Reductions:

State 144:
## Known stack suffix:
## expr PERIOD ID
## LR(1) items:
lhs -> expr PERIOD ID . [ EQ COMMA ]
primary -> expr PERIOD ID . [ SUB PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
## Transitions:
## Reductions:
-- On EQ COMMA
--   reduce production lhs -> expr PERIOD ID
-- On SUB PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD
--   reduce production primary -> expr PERIOD ID

State 145:
## Known stack suffix:
## dataType
## LR(1) items:
varDecl -> dataType . ID [ SCOLON RPAREN RCBRAC EQ COMMA ]
## Transitions:
-- On ID shift to state 146
## Reductions:

State 146:
## Known stack suffix:
## dataType ID
## LR(1) items:
varDecl -> dataType ID . [ SCOLON RPAREN RCBRAC EQ COMMA ]
## Transitions:
## Reductions:
-- On SCOLON RPAREN RCBRAC EQ COMMA
--   reduce production varDecl -> dataType ID

State 147:
## Known stack suffix:
## lhs
## LR(1) items:
assignment -> lhs . EQ expr [ SCOLON EOF ]
lhsList -> lhs . COMMA lhs [ EQ COMMA ]
## Transitions:
-- On EQ shift to state 148
-- On COMMA shift to state 150
## Reductions:

State 148:
## Known stack suffix:
## lhs EQ
## LR(1) items:
assignment -> lhs EQ . expr [ SCOLON EOF ]
## Transitions:
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On BNOT shift to state 13
-- On sourceList shift to state 14
-- On primary shift to state 19
-- On moduleAccess shift to state 21
-- On literal shift to state 22
-- On functionCall shift to state 23
-- On expr shift to state 149
-- On cast shift to state 31
## Reductions:

State 149:
## Known stack suffix:
## lhs EQ expr
## LR(1) items:
assignment -> lhs EQ expr . [ SCOLON EOF ]
expr -> expr . LAND expr [ SUB SCOLON PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT EOF DIV DEQ BOR BAND ADD ]
primary -> expr . PERIOD ID [ SUB SCOLON PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT EOF DIV DEQ BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 25
-- On PERIOD shift to state 27
-- On NEQ shift to state 38
-- On MUL shift to state 29
-- On MOD shift to state 33
-- On LTE shift to state 40
-- On LT shift to state 44
-- On LOR shift to state 50
-- On LAND shift to state 58
-- On GTE shift to state 46
-- On GT shift to state 48
-- On DIV shift to state 35
-- On DEQ shift to state 52
-- On BOR shift to state 54
-- On BAND shift to state 56
-- On ADD shift to state 42
## Reductions:
-- On SCOLON EOF
--   reduce production assignment -> lhs EQ expr

State 150:
## Known stack suffix:
## lhs COMMA
## LR(1) items:
lhsList -> lhs COMMA . lhs [ EQ COMMA ]
## Transitions:
-- On USCORE shift to state 1
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On INT shift to state 95
-- On ID shift to state 99
-- On CONST shift to state 105
-- On CHAR_LIT shift to state 11
-- On CHAR shift to state 108
-- On BOOL_LIT shift to state 12
-- On BOOL shift to state 110
-- On BNOT shift to state 13
-- On varDecl shift to state 120
-- On sourceList shift to state 121
-- On primary shift to state 127
-- On moduleAccess shift to state 131
-- On literal shift to state 22
-- On lhs shift to state 151
-- On functionCall shift to state 23
-- On expr shift to state 142
-- On dataType shift to state 145
-- On cast shift to state 31
## Reductions:

State 151:
## Known stack suffix:
## lhs COMMA lhs
## LR(1) items:
lhsList -> lhs COMMA lhs . [ EQ COMMA ]
## Transitions:
## Reductions:
-- On EQ COMMA
--   reduce production lhsList -> lhs COMMA lhs

State 152:
## Known stack suffix:
## assignment
## LR(1) items:
main -> assignment . EOF [ # ]
## Transitions:
-- On EOF shift to state 153
## Reductions:

State 153:
## Known stack suffix:
## assignment EOF
## LR(1) items:
main -> assignment EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production main -> assignment EOF

State 154:
## Known stack suffix:
##
## LR(1) items:
parseInterface' -> . parseInterface [ # ]
## Transitions:
-- On MODULE_ID shift to state 5
-- On sourceList shift to state 155
-- On parseInterface shift to state 157
-- On importList shift to state 158
## Reductions:

State 155:
## Known stack suffix:
## sourceList
## LR(1) items:
importList -> sourceList . [ VOID TYPE MODULE_ID INT IMPORT ID EOF CONST CHAR BOOL ]
sourceList -> sourceList . PERIOD MODULE_ID [ VOID TYPE PERIOD MODULE_ID INT IMPORT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On PERIOD shift to state 156
## Reductions:
-- On VOID TYPE MODULE_ID INT IMPORT ID EOF CONST CHAR BOOL
--   reduce production importList -> sourceList

State 156:
## Known stack suffix:
## sourceList PERIOD
## LR(1) items:
sourceList -> sourceList PERIOD . MODULE_ID [ VOID TYPE PERIOD MODULE_ID INT IMPORT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On MODULE_ID shift to state 16
## Reductions:

State 157:
## Known stack suffix:
## parseInterface
## LR(1) items:
parseInterface' -> parseInterface . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept parseInterface

State 158:
## Known stack suffix:
## importList
## LR(1) items:
importList -> importList . IMPORT sourceList [ VOID TYPE MODULE_ID INT IMPORT ID EOF CONST CHAR BOOL ]
parseInterface -> importList . interfaceFile EOF [ # ]
## Transitions:
-- On IMPORT shift to state 159
-- On interfaceFile shift to state 161
## Reductions:
-- On VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL
--   reduce production interfaceFile ->

State 159:
## Known stack suffix:
## importList IMPORT
## LR(1) items:
importList -> importList IMPORT . sourceList [ VOID TYPE MODULE_ID INT IMPORT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On MODULE_ID shift to state 5
-- On sourceList shift to state 160
## Reductions:

State 160:
## Known stack suffix:
## importList IMPORT sourceList
## LR(1) items:
importList -> importList IMPORT sourceList . [ VOID TYPE MODULE_ID INT IMPORT ID EOF CONST CHAR BOOL ]
sourceList -> sourceList . PERIOD MODULE_ID [ VOID TYPE PERIOD MODULE_ID INT IMPORT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On PERIOD shift to state 156
## Reductions:
-- On VOID TYPE MODULE_ID INT IMPORT ID EOF CONST CHAR BOOL
--   reduce production importList -> importList IMPORT sourceList

State 161:
## Known stack suffix:
## importList interfaceFile
## LR(1) items:
interfaceFile -> interfaceFile . varDecl SCOLON [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
interfaceFile -> interfaceFile . functionDecl [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
interfaceFile -> interfaceFile . typeExpose [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
interfaceFile -> interfaceFile . typeDef [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
parseInterface -> importList interfaceFile . EOF [ # ]
## Transitions:
-- On VOID shift to state 162
-- On TYPE shift to state 171
-- On MODULE_ID shift to state 5
-- On INT shift to state 95
-- On ID shift to state 181
-- On EOF shift to state 185
-- On CONST shift to state 105
-- On CHAR shift to state 108
-- On BOOL shift to state 110
-- On varDecl shift to state 186
-- On typeExpose shift to state 188
-- On typeDef shift to state 189
-- On sourceList shift to state 112
-- On functionDecl shift to state 190
-- On dataType shift to state 191
## Reductions:

State 162:
## Known stack suffix:
## VOID
## LR(1) items:
functionDecl -> VOID . ID LPAREN varDeclList RPAREN [ VOID TYPE MODULE_ID LCBRAC INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On ID shift to state 163
## Reductions:

State 163:
## Known stack suffix:
## VOID ID
## LR(1) items:
functionDecl -> VOID ID . LPAREN varDeclList RPAREN [ VOID TYPE MODULE_ID LCBRAC INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On LPAREN shift to state 164
## Reductions:

State 164:
## Known stack suffix:
## VOID ID LPAREN
## LR(1) items:
functionDecl -> VOID ID LPAREN . varDeclList RPAREN [ VOID TYPE MODULE_ID LCBRAC INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On MODULE_ID shift to state 5
-- On INT shift to state 95
-- On ID shift to state 106
-- On CONST shift to state 105
-- On CHAR shift to state 108
-- On BOOL shift to state 110
-- On varDeclList shift to state 165
-- On varDecl shift to state 167
-- On sourceList shift to state 112
-- On reqVarDeclList shift to state 168
-- On dataType shift to state 145
## Reductions:
-- On RPAREN
--   reduce production varDeclList ->

State 165:
## Known stack suffix:
## VOID ID LPAREN varDeclList
## LR(1) items:
functionDecl -> VOID ID LPAREN varDeclList . RPAREN [ VOID TYPE MODULE_ID LCBRAC INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On RPAREN shift to state 166
## Reductions:

State 166:
## Known stack suffix:
## VOID ID LPAREN varDeclList RPAREN
## LR(1) items:
functionDecl -> VOID ID LPAREN varDeclList RPAREN . [ VOID TYPE MODULE_ID LCBRAC INT ID EOF CONST CHAR BOOL ]
## Transitions:
## Reductions:
-- On VOID TYPE MODULE_ID LCBRAC INT ID EOF CONST CHAR BOOL
--   reduce production functionDecl -> VOID ID LPAREN varDeclList RPAREN

State 167:
## Known stack suffix:
## varDecl
## LR(1) items:
reqVarDeclList -> varDecl . [ RPAREN RCBRAC COMMA ]
## Transitions:
## Reductions:
-- On RPAREN RCBRAC COMMA
--   reduce production reqVarDeclList -> varDecl

State 168:
## Known stack suffix:
## reqVarDeclList
## LR(1) items:
reqVarDeclList -> reqVarDeclList . COMMA varDecl [ RPAREN RCBRAC COMMA ]
varDeclList -> reqVarDeclList . [ RPAREN RCBRAC ]
## Transitions:
-- On COMMA shift to state 169
## Reductions:
-- On RPAREN RCBRAC
--   reduce production varDeclList -> reqVarDeclList

State 169:
## Known stack suffix:
## reqVarDeclList COMMA
## LR(1) items:
reqVarDeclList -> reqVarDeclList COMMA . varDecl [ RPAREN RCBRAC COMMA ]
## Transitions:
-- On MODULE_ID shift to state 5
-- On INT shift to state 95
-- On ID shift to state 106
-- On CONST shift to state 105
-- On CHAR shift to state 108
-- On BOOL shift to state 110
-- On varDecl shift to state 170
-- On sourceList shift to state 112
-- On dataType shift to state 145
## Reductions:

State 170:
## Known stack suffix:
## reqVarDeclList COMMA varDecl
## LR(1) items:
reqVarDeclList -> reqVarDeclList COMMA varDecl . [ RPAREN RCBRAC COMMA ]
## Transitions:
## Reductions:
-- On RPAREN RCBRAC COMMA
--   reduce production reqVarDeclList -> reqVarDeclList COMMA varDecl

State 171:
## Known stack suffix:
## TYPE
## LR(1) items:
typeDef -> TYPE . ID EQ LCBRAC varDeclList RCBRAC [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
typeExpose -> TYPE . ID COLON LCBRAC varDeclList RCBRAC [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On ID shift to state 172
## Reductions:

State 172:
## Known stack suffix:
## TYPE ID
## LR(1) items:
typeDef -> TYPE ID . EQ LCBRAC varDeclList RCBRAC [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
typeExpose -> TYPE ID . COLON LCBRAC varDeclList RCBRAC [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On EQ shift to state 173
-- On COLON shift to state 177
## Reductions:

State 173:
## Known stack suffix:
## TYPE ID EQ
## LR(1) items:
typeDef -> TYPE ID EQ . LCBRAC varDeclList RCBRAC [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On LCBRAC shift to state 174
## Reductions:

State 174:
## Known stack suffix:
## TYPE ID EQ LCBRAC
## LR(1) items:
typeDef -> TYPE ID EQ LCBRAC . varDeclList RCBRAC [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On MODULE_ID shift to state 5
-- On INT shift to state 95
-- On ID shift to state 106
-- On CONST shift to state 105
-- On CHAR shift to state 108
-- On BOOL shift to state 110
-- On varDeclList shift to state 175
-- On varDecl shift to state 167
-- On sourceList shift to state 112
-- On reqVarDeclList shift to state 168
-- On dataType shift to state 145
## Reductions:
-- On RCBRAC
--   reduce production varDeclList ->

State 175:
## Known stack suffix:
## TYPE ID EQ LCBRAC varDeclList
## LR(1) items:
typeDef -> TYPE ID EQ LCBRAC varDeclList . RCBRAC [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On RCBRAC shift to state 176
## Reductions:

State 176:
## Known stack suffix:
## TYPE ID EQ LCBRAC varDeclList RCBRAC
## LR(1) items:
typeDef -> TYPE ID EQ LCBRAC varDeclList RCBRAC . [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
## Reductions:
-- On VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL
--   reduce production typeDef -> TYPE ID EQ LCBRAC varDeclList RCBRAC

State 177:
## Known stack suffix:
## TYPE ID COLON
## LR(1) items:
typeExpose -> TYPE ID COLON . LCBRAC varDeclList RCBRAC [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On LCBRAC shift to state 178
## Reductions:

State 178:
## Known stack suffix:
## TYPE ID COLON LCBRAC
## LR(1) items:
typeExpose -> TYPE ID COLON LCBRAC . varDeclList RCBRAC [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On MODULE_ID shift to state 5
-- On INT shift to state 95
-- On ID shift to state 106
-- On CONST shift to state 105
-- On CHAR shift to state 108
-- On BOOL shift to state 110
-- On varDeclList shift to state 179
-- On varDecl shift to state 167
-- On sourceList shift to state 112
-- On reqVarDeclList shift to state 168
-- On dataType shift to state 145
## Reductions:
-- On RCBRAC
--   reduce production varDeclList ->

State 179:
## Known stack suffix:
## TYPE ID COLON LCBRAC varDeclList
## LR(1) items:
typeExpose -> TYPE ID COLON LCBRAC varDeclList . RCBRAC [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On RCBRAC shift to state 180
## Reductions:

State 180:
## Known stack suffix:
## TYPE ID COLON LCBRAC varDeclList RCBRAC
## LR(1) items:
typeExpose -> TYPE ID COLON LCBRAC varDeclList RCBRAC . [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
## Reductions:
-- On VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL
--   reduce production typeExpose -> TYPE ID COLON LCBRAC varDeclList RCBRAC

State 181:
## Known stack suffix:
## ID
## LR(1) items:
dataType -> ID . [ ID ]
dataType -> ID . LSBRAC RSBRAC kleenelrsbrac [ ID ]
functionDecl -> ID . LPAREN varDeclList RPAREN [ VOID TYPE MODULE_ID LCBRAC INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On LSBRAC shift to state 107
-- On LPAREN shift to state 182
## Reductions:
-- On ID
--   reduce production dataType -> ID

State 182:
## Known stack suffix:
## ID LPAREN
## LR(1) items:
functionDecl -> ID LPAREN . varDeclList RPAREN [ VOID TYPE MODULE_ID LCBRAC INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On MODULE_ID shift to state 5
-- On INT shift to state 95
-- On ID shift to state 106
-- On CONST shift to state 105
-- On CHAR shift to state 108
-- On BOOL shift to state 110
-- On varDeclList shift to state 183
-- On varDecl shift to state 167
-- On sourceList shift to state 112
-- On reqVarDeclList shift to state 168
-- On dataType shift to state 145
## Reductions:
-- On RPAREN
--   reduce production varDeclList ->

State 183:
## Known stack suffix:
## ID LPAREN varDeclList
## LR(1) items:
functionDecl -> ID LPAREN varDeclList . RPAREN [ VOID TYPE MODULE_ID LCBRAC INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On RPAREN shift to state 184
## Reductions:

State 184:
## Known stack suffix:
## ID LPAREN varDeclList RPAREN
## LR(1) items:
functionDecl -> ID LPAREN varDeclList RPAREN . [ VOID TYPE MODULE_ID LCBRAC INT ID EOF CONST CHAR BOOL ]
## Transitions:
## Reductions:
-- On VOID TYPE MODULE_ID LCBRAC INT ID EOF CONST CHAR BOOL
--   reduce production functionDecl -> ID LPAREN varDeclList RPAREN

State 185:
## Known stack suffix:
## importList interfaceFile EOF
## LR(1) items:
parseInterface -> importList interfaceFile EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production parseInterface -> importList interfaceFile EOF

State 186:
## Known stack suffix:
## interfaceFile varDecl
## LR(1) items:
interfaceFile -> interfaceFile varDecl . SCOLON [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On SCOLON shift to state 187
## Reductions:

State 187:
## Known stack suffix:
## interfaceFile varDecl SCOLON
## LR(1) items:
interfaceFile -> interfaceFile varDecl SCOLON . [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
## Reductions:
-- On VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL
--   reduce production interfaceFile -> interfaceFile varDecl SCOLON

State 188:
## Known stack suffix:
## interfaceFile typeExpose
## LR(1) items:
interfaceFile -> interfaceFile typeExpose . [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
## Reductions:
-- On VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL
--   reduce production interfaceFile -> interfaceFile typeExpose

State 189:
## Known stack suffix:
## interfaceFile typeDef
## LR(1) items:
interfaceFile -> interfaceFile typeDef . [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
## Reductions:
-- On VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL
--   reduce production interfaceFile -> interfaceFile typeDef

State 190:
## Known stack suffix:
## interfaceFile functionDecl
## LR(1) items:
interfaceFile -> interfaceFile functionDecl . [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
## Reductions:
-- On VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL
--   reduce production interfaceFile -> interfaceFile functionDecl

State 191:
## Known stack suffix:
## dataType
## LR(1) items:
functionDecl -> dataType . ID LPAREN varDeclList RPAREN [ VOID TYPE MODULE_ID LCBRAC INT ID EOF CONST CHAR BOOL ]
varDecl -> dataType . ID [ SCOLON EQ ]
## Transitions:
-- On ID shift to state 192
## Reductions:

State 192:
## Known stack suffix:
## dataType ID
## LR(1) items:
functionDecl -> dataType ID . LPAREN varDeclList RPAREN [ VOID TYPE MODULE_ID LCBRAC INT ID EOF CONST CHAR BOOL ]
varDecl -> dataType ID . [ SCOLON EQ ]
## Transitions:
-- On LPAREN shift to state 193
## Reductions:
-- On SCOLON EQ
--   reduce production varDecl -> dataType ID

State 193:
## Known stack suffix:
## dataType ID LPAREN
## LR(1) items:
functionDecl -> dataType ID LPAREN . varDeclList RPAREN [ VOID TYPE MODULE_ID LCBRAC INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On MODULE_ID shift to state 5
-- On INT shift to state 95
-- On ID shift to state 106
-- On CONST shift to state 105
-- On CHAR shift to state 108
-- On BOOL shift to state 110
-- On varDeclList shift to state 194
-- On varDecl shift to state 167
-- On sourceList shift to state 112
-- On reqVarDeclList shift to state 168
-- On dataType shift to state 145
## Reductions:
-- On RPAREN
--   reduce production varDeclList ->

State 194:
## Known stack suffix:
## dataType ID LPAREN varDeclList
## LR(1) items:
functionDecl -> dataType ID LPAREN varDeclList . RPAREN [ VOID TYPE MODULE_ID LCBRAC INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On RPAREN shift to state 195
## Reductions:

State 195:
## Known stack suffix:
## dataType ID LPAREN varDeclList RPAREN
## LR(1) items:
functionDecl -> dataType ID LPAREN varDeclList RPAREN . [ VOID TYPE MODULE_ID LCBRAC INT ID EOF CONST CHAR BOOL ]
## Transitions:
## Reductions:
-- On VOID TYPE MODULE_ID LCBRAC INT ID EOF CONST CHAR BOOL
--   reduce production functionDecl -> dataType ID LPAREN varDeclList RPAREN

State 196:
## Known stack suffix:
##
## LR(1) items:
parseModule' -> . parseModule [ # ]
## Transitions:
-- On MODULE_ID shift to state 5
-- On sourceList shift to state 155
-- On parseModule shift to state 197
-- On importList shift to state 198
## Reductions:

State 197:
## Known stack suffix:
## parseModule
## LR(1) items:
parseModule' -> parseModule . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept parseModule

State 198:
## Known stack suffix:
## importList
## LR(1) items:
importList -> importList . IMPORT sourceList [ VOID TYPE MODULE_ID INT IMPORT ID EOF CONST CHAR BOOL ]
parseModule -> importList . moduleFile EOF [ # ]
## Transitions:
-- On IMPORT shift to state 159
-- On moduleFile shift to state 199
## Reductions:
-- On VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL
--   reduce production moduleFile ->

State 199:
## Known stack suffix:
## importList moduleFile
## LR(1) items:
moduleFile -> moduleFile . functionDef [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
moduleFile -> moduleFile . varDecl SCOLON [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
moduleFile -> moduleFile . varDecl EQ literal SCOLON [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
moduleFile -> moduleFile . varDecl EQ litConstructorCall SCOLON [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
moduleFile -> moduleFile . typeDef [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
parseModule -> importList moduleFile . EOF [ # ]
## Transitions:
-- On VOID shift to state 162
-- On TYPE shift to state 200
-- On MODULE_ID shift to state 5
-- On INT shift to state 95
-- On ID shift to state 181
-- On EOF shift to state 202
-- On CONST shift to state 105
-- On CHAR shift to state 108
-- On BOOL shift to state 110
-- On varDecl shift to state 203
-- On typeDef shift to state 228
-- On sourceList shift to state 112
-- On functionDef shift to state 229
-- On functionDecl shift to state 230
-- On dataType shift to state 191
## Reductions:

State 200:
## Known stack suffix:
## TYPE
## LR(1) items:
typeDef -> TYPE . ID EQ LCBRAC varDeclList RCBRAC [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On ID shift to state 201
## Reductions:

State 201:
## Known stack suffix:
## TYPE ID
## LR(1) items:
typeDef -> TYPE ID . EQ LCBRAC varDeclList RCBRAC [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On EQ shift to state 173
## Reductions:

State 202:
## Known stack suffix:
## importList moduleFile EOF
## LR(1) items:
parseModule -> importList moduleFile EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production parseModule -> importList moduleFile EOF

State 203:
## Known stack suffix:
## moduleFile varDecl
## LR(1) items:
moduleFile -> moduleFile varDecl . SCOLON [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
moduleFile -> moduleFile varDecl . EQ literal SCOLON [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
moduleFile -> moduleFile varDecl . EQ litConstructorCall SCOLON [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On SCOLON shift to state 204
-- On EQ shift to state 205
## Reductions:

State 204:
## Known stack suffix:
## moduleFile varDecl SCOLON
## LR(1) items:
moduleFile -> moduleFile varDecl SCOLON . [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
## Reductions:
-- On VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL
--   reduce production moduleFile -> moduleFile varDecl SCOLON

State 205:
## Known stack suffix:
## moduleFile varDecl EQ
## LR(1) items:
moduleFile -> moduleFile varDecl EQ . literal SCOLON [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
moduleFile -> moduleFile varDecl EQ . litConstructorCall SCOLON [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On INT_LIT shift to state 8
-- On ID shift to state 206
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On sourceList shift to state 218
-- On literal shift to state 224
-- On litConstructorCall shift to state 226
## Reductions:

State 206:
## Known stack suffix:
## ID
## LR(1) items:
litConstructorCall -> ID . LPAREN litNamedArgsList RPAREN [ SCOLON ]
## Transitions:
-- On LPAREN shift to state 207
## Reductions:

State 207:
## Known stack suffix:
## ID LPAREN
## LR(1) items:
litConstructorCall -> ID LPAREN . litNamedArgsList RPAREN [ SCOLON ]
## Transitions:
-- On ID shift to state 208
-- On reqLitNamedArgsList shift to state 211
-- On litNamedArgsList shift to state 216
## Reductions:
-- On RPAREN
--   reduce production litNamedArgsList ->

State 208:
## Known stack suffix:
## ID
## LR(1) items:
reqLitNamedArgsList -> ID . EQ literal [ RPAREN COMMA ]
## Transitions:
-- On EQ shift to state 209
## Reductions:

State 209:
## Known stack suffix:
## ID EQ
## LR(1) items:
reqLitNamedArgsList -> ID EQ . literal [ RPAREN COMMA ]
## Transitions:
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On INT_LIT shift to state 8
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On literal shift to state 210
## Reductions:

State 210:
## Known stack suffix:
## ID EQ literal
## LR(1) items:
reqLitNamedArgsList -> ID EQ literal . [ RPAREN COMMA ]
## Transitions:
## Reductions:
-- On RPAREN COMMA
--   reduce production reqLitNamedArgsList -> ID EQ literal

State 211:
## Known stack suffix:
## reqLitNamedArgsList
## LR(1) items:
litNamedArgsList -> reqLitNamedArgsList . [ RPAREN ]
reqLitNamedArgsList -> reqLitNamedArgsList . COMMA ID EQ literal [ RPAREN COMMA ]
## Transitions:
-- On COMMA shift to state 212
## Reductions:
-- On RPAREN
--   reduce production litNamedArgsList -> reqLitNamedArgsList

State 212:
## Known stack suffix:
## reqLitNamedArgsList COMMA
## LR(1) items:
reqLitNamedArgsList -> reqLitNamedArgsList COMMA . ID EQ literal [ RPAREN COMMA ]
## Transitions:
-- On ID shift to state 213
## Reductions:

State 213:
## Known stack suffix:
## reqLitNamedArgsList COMMA ID
## LR(1) items:
reqLitNamedArgsList -> reqLitNamedArgsList COMMA ID . EQ literal [ RPAREN COMMA ]
## Transitions:
-- On EQ shift to state 214
## Reductions:

State 214:
## Known stack suffix:
## reqLitNamedArgsList COMMA ID EQ
## LR(1) items:
reqLitNamedArgsList -> reqLitNamedArgsList COMMA ID EQ . literal [ RPAREN COMMA ]
## Transitions:
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On INT_LIT shift to state 8
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On literal shift to state 215
## Reductions:

State 215:
## Known stack suffix:
## reqLitNamedArgsList COMMA ID EQ literal
## LR(1) items:
reqLitNamedArgsList -> reqLitNamedArgsList COMMA ID EQ literal . [ RPAREN COMMA ]
## Transitions:
## Reductions:
-- On RPAREN COMMA
--   reduce production reqLitNamedArgsList -> reqLitNamedArgsList COMMA ID EQ literal

State 216:
## Known stack suffix:
## ID LPAREN litNamedArgsList
## LR(1) items:
litConstructorCall -> ID LPAREN litNamedArgsList . RPAREN [ SCOLON ]
## Transitions:
-- On RPAREN shift to state 217
## Reductions:

State 217:
## Known stack suffix:
## ID LPAREN litNamedArgsList RPAREN
## LR(1) items:
litConstructorCall -> ID LPAREN litNamedArgsList RPAREN . [ SCOLON ]
## Transitions:
## Reductions:
-- On SCOLON
--   reduce production litConstructorCall -> ID LPAREN litNamedArgsList RPAREN

State 218:
## Known stack suffix:
## sourceList
## LR(1) items:
litConstructorCall -> sourceList . PERIOD ID LPAREN litNamedArgsList RPAREN [ SCOLON ]
sourceList -> sourceList . PERIOD MODULE_ID [ PERIOD ]
## Transitions:
-- On PERIOD shift to state 219
## Reductions:

State 219:
## Known stack suffix:
## sourceList PERIOD
## LR(1) items:
litConstructorCall -> sourceList PERIOD . ID LPAREN litNamedArgsList RPAREN [ SCOLON ]
sourceList -> sourceList PERIOD . MODULE_ID [ PERIOD ]
## Transitions:
-- On MODULE_ID shift to state 16
-- On ID shift to state 220
## Reductions:

State 220:
## Known stack suffix:
## sourceList PERIOD ID
## LR(1) items:
litConstructorCall -> sourceList PERIOD ID . LPAREN litNamedArgsList RPAREN [ SCOLON ]
## Transitions:
-- On LPAREN shift to state 221
## Reductions:

State 221:
## Known stack suffix:
## sourceList PERIOD ID LPAREN
## LR(1) items:
litConstructorCall -> sourceList PERIOD ID LPAREN . litNamedArgsList RPAREN [ SCOLON ]
## Transitions:
-- On ID shift to state 208
-- On reqLitNamedArgsList shift to state 211
-- On litNamedArgsList shift to state 222
## Reductions:
-- On RPAREN
--   reduce production litNamedArgsList ->

State 222:
## Known stack suffix:
## sourceList PERIOD ID LPAREN litNamedArgsList
## LR(1) items:
litConstructorCall -> sourceList PERIOD ID LPAREN litNamedArgsList . RPAREN [ SCOLON ]
## Transitions:
-- On RPAREN shift to state 223
## Reductions:

State 223:
## Known stack suffix:
## sourceList PERIOD ID LPAREN litNamedArgsList RPAREN
## LR(1) items:
litConstructorCall -> sourceList PERIOD ID LPAREN litNamedArgsList RPAREN . [ SCOLON ]
## Transitions:
## Reductions:
-- On SCOLON
--   reduce production litConstructorCall -> sourceList PERIOD ID LPAREN litNamedArgsList RPAREN

State 224:
## Known stack suffix:
## moduleFile varDecl EQ literal
## LR(1) items:
moduleFile -> moduleFile varDecl EQ literal . SCOLON [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On SCOLON shift to state 225
## Reductions:

State 225:
## Known stack suffix:
## moduleFile varDecl EQ literal SCOLON
## LR(1) items:
moduleFile -> moduleFile varDecl EQ literal SCOLON . [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
## Reductions:
-- On VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL
--   reduce production moduleFile -> moduleFile varDecl EQ literal SCOLON

State 226:
## Known stack suffix:
## moduleFile varDecl EQ litConstructorCall
## LR(1) items:
moduleFile -> moduleFile varDecl EQ litConstructorCall . SCOLON [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On SCOLON shift to state 227
## Reductions:

State 227:
## Known stack suffix:
## moduleFile varDecl EQ litConstructorCall SCOLON
## LR(1) items:
moduleFile -> moduleFile varDecl EQ litConstructorCall SCOLON . [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
## Reductions:
-- On VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL
--   reduce production moduleFile -> moduleFile varDecl EQ litConstructorCall SCOLON

State 228:
## Known stack suffix:
## moduleFile typeDef
## LR(1) items:
moduleFile -> moduleFile typeDef . [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
## Reductions:
-- On VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL
--   reduce production moduleFile -> moduleFile typeDef

State 229:
## Known stack suffix:
## moduleFile functionDef
## LR(1) items:
moduleFile -> moduleFile functionDef . [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
## Reductions:
-- On VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL
--   reduce production moduleFile -> moduleFile functionDef

State 230:
## Known stack suffix:
## functionDecl
## LR(1) items:
functionDef -> functionDecl . body [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
-- On LCBRAC shift to state 231
-- On body shift to state 276
## Reductions:

State 231:
## Known stack suffix:
## LCBRAC
## LR(1) items:
body -> LCBRAC . stmtList RCBRAC [ WHILE VOID USCORE TYPE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR EOF ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
-- On stmtList shift to state 232
## Reductions:
-- On WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT
--   reduce production stmtList ->

State 232:
## Known stack suffix:
## LCBRAC stmtList
## LR(1) items:
body -> LCBRAC stmtList . RCBRAC [ WHILE VOID USCORE TYPE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR EOF ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
stmtList -> stmtList . stmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
-- On WHILE shift to state 233
-- On USCORE shift to state 1
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On RETURN shift to state 237
-- On RCBRAC shift to state 273
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On LCBRAC shift to state 231
-- On INT_LIT shift to state 8
-- On INT shift to state 95
-- On IF shift to state 241
-- On ID shift to state 99
-- On FOR shift to state 245
-- On CONTINUE shift to state 253
-- On CONST shift to state 105
-- On CHAR_LIT shift to state 11
-- On CHAR shift to state 108
-- On BREAK shift to state 255
-- On BOOL_LIT shift to state 12
-- On BOOL shift to state 110
-- On BNOT shift to state 13
-- On varDecl shift to state 257
-- On stmt shift to state 274
-- On sourceList shift to state 121
-- On primary shift to state 127
-- On otherStmt shift to state 259
-- On openStmt shift to state 266
-- On moduleAccess shift to state 131
-- On literal shift to state 22
-- On lhsList shift to state 133
-- On lhs shift to state 147
-- On functionCall shift to state 23
-- On expr shift to state 142
-- On dataType shift to state 145
-- On closedStmt shift to state 275
-- On cast shift to state 31
-- On body shift to state 262
-- On assignment shift to state 263
## Reductions:

State 233:
## Known stack suffix:
## WHILE
## LR(1) items:
closedStmt -> WHILE . LPAREN expr RPAREN closedStmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
openStmt -> WHILE . LPAREN expr RPAREN openStmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
-- On LPAREN shift to state 234
## Reductions:

State 234:
## Known stack suffix:
## WHILE LPAREN
## LR(1) items:
closedStmt -> WHILE LPAREN . expr RPAREN closedStmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
openStmt -> WHILE LPAREN . expr RPAREN openStmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On BNOT shift to state 13
-- On sourceList shift to state 14
-- On primary shift to state 19
-- On moduleAccess shift to state 21
-- On literal shift to state 22
-- On functionCall shift to state 23
-- On expr shift to state 235
-- On cast shift to state 31
## Reductions:

State 235:
## Known stack suffix:
## WHILE LPAREN expr
## LR(1) items:
closedStmt -> WHILE LPAREN expr . RPAREN closedStmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
expr -> expr . LAND expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LOR expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BAND expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BOR expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GT expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LT expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GTE expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LTE expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . ADD expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . SUB expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MUL expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MOD expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DIV expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
openStmt -> WHILE LPAREN expr . RPAREN openStmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
primary -> expr . PERIOD ID [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 25
-- On RPAREN shift to state 236
-- On PERIOD shift to state 27
-- On NEQ shift to state 38
-- On MUL shift to state 29
-- On MOD shift to state 33
-- On LTE shift to state 40
-- On LT shift to state 44
-- On LOR shift to state 50
-- On LAND shift to state 58
-- On GTE shift to state 46
-- On GT shift to state 48
-- On DIV shift to state 35
-- On DEQ shift to state 52
-- On BOR shift to state 54
-- On BAND shift to state 56
-- On ADD shift to state 42
## Reductions:

State 236:
## Known stack suffix:
## WHILE LPAREN expr RPAREN
## LR(1) items:
closedStmt -> WHILE LPAREN expr RPAREN . closedStmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
openStmt -> WHILE LPAREN expr RPAREN . openStmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
-- On WHILE shift to state 233
-- On USCORE shift to state 1
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On RETURN shift to state 237
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On LCBRAC shift to state 231
-- On INT_LIT shift to state 8
-- On INT shift to state 95
-- On IF shift to state 241
-- On ID shift to state 99
-- On FOR shift to state 245
-- On CONTINUE shift to state 253
-- On CONST shift to state 105
-- On CHAR_LIT shift to state 11
-- On CHAR shift to state 108
-- On BREAK shift to state 255
-- On BOOL_LIT shift to state 12
-- On BOOL shift to state 110
-- On BNOT shift to state 13
-- On varDecl shift to state 257
-- On sourceList shift to state 121
-- On primary shift to state 127
-- On otherStmt shift to state 259
-- On openStmt shift to state 271
-- On moduleAccess shift to state 131
-- On literal shift to state 22
-- On lhsList shift to state 133
-- On lhs shift to state 147
-- On functionCall shift to state 23
-- On expr shift to state 142
-- On dataType shift to state 145
-- On closedStmt shift to state 272
-- On cast shift to state 31
-- On body shift to state 262
-- On assignment shift to state 263
## Reductions:

State 237:
## Known stack suffix:
## RETURN
## LR(1) items:
otherStmt -> RETURN . optExpr SCOLON [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On BNOT shift to state 13
-- On sourceList shift to state 14
-- On primary shift to state 19
-- On optExpr shift to state 238
-- On moduleAccess shift to state 21
-- On literal shift to state 22
-- On functionCall shift to state 23
-- On expr shift to state 240
-- On cast shift to state 31
## Reductions:
-- On SCOLON
--   reduce production optExpr ->

State 238:
## Known stack suffix:
## RETURN optExpr
## LR(1) items:
otherStmt -> RETURN optExpr . SCOLON [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
-- On SCOLON shift to state 239
## Reductions:

State 239:
## Known stack suffix:
## RETURN optExpr SCOLON
## LR(1) items:
otherStmt -> RETURN optExpr SCOLON . [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
## Reductions:
-- On WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT
--   reduce production otherStmt -> RETURN optExpr SCOLON

State 240:
## Known stack suffix:
## expr
## LR(1) items:
expr -> expr . LAND expr [ SUB SCOLON RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LOR expr [ SUB SCOLON RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BAND expr [ SUB SCOLON RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BOR expr [ SUB SCOLON RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB SCOLON RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB SCOLON RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GT expr [ SUB SCOLON RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LT expr [ SUB SCOLON RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GTE expr [ SUB SCOLON RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LTE expr [ SUB SCOLON RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . ADD expr [ SUB SCOLON RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . SUB expr [ SUB SCOLON RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MUL expr [ SUB SCOLON RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MOD expr [ SUB SCOLON RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DIV expr [ SUB SCOLON RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
optExpr -> expr . [ SCOLON RPAREN ]
primary -> expr . PERIOD ID [ SUB SCOLON RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 25
-- On PERIOD shift to state 27
-- On NEQ shift to state 38
-- On MUL shift to state 29
-- On MOD shift to state 33
-- On LTE shift to state 40
-- On LT shift to state 44
-- On LOR shift to state 50
-- On LAND shift to state 58
-- On GTE shift to state 46
-- On GT shift to state 48
-- On DIV shift to state 35
-- On DEQ shift to state 52
-- On BOR shift to state 54
-- On BAND shift to state 56
-- On ADD shift to state 42
## Reductions:
-- On SCOLON RPAREN
--   reduce production optExpr -> expr

State 241:
## Known stack suffix:
## IF
## LR(1) items:
closedStmt -> IF . LPAREN expr RPAREN closedStmt ELSE closedStmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
openStmt -> IF . LPAREN expr RPAREN stmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
openStmt -> IF . LPAREN expr RPAREN closedStmt ELSE openStmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
-- On LPAREN shift to state 242
## Reductions:

State 242:
## Known stack suffix:
## IF LPAREN
## LR(1) items:
closedStmt -> IF LPAREN . expr RPAREN closedStmt ELSE closedStmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
openStmt -> IF LPAREN . expr RPAREN stmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
openStmt -> IF LPAREN . expr RPAREN closedStmt ELSE openStmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On BNOT shift to state 13
-- On sourceList shift to state 14
-- On primary shift to state 19
-- On moduleAccess shift to state 21
-- On literal shift to state 22
-- On functionCall shift to state 23
-- On expr shift to state 243
-- On cast shift to state 31
## Reductions:

State 243:
## Known stack suffix:
## IF LPAREN expr
## LR(1) items:
closedStmt -> IF LPAREN expr . RPAREN closedStmt ELSE closedStmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
expr -> expr . LAND expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LOR expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BAND expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . BOR expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DEQ expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . NEQ expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GT expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LT expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . GTE expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . LTE expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . ADD expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . SUB expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MUL expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . MOD expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
expr -> expr . DIV expr [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
openStmt -> IF LPAREN expr . RPAREN stmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
openStmt -> IF LPAREN expr . RPAREN closedStmt ELSE openStmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
primary -> expr . PERIOD ID [ SUB RPAREN PERIOD NEQ MUL MOD LTE LT LSBRAC LOR LAND GTE GT DIV DEQ BOR BAND ADD ]
## Transitions:
-- On SUB shift to state 25
-- On RPAREN shift to state 244
-- On PERIOD shift to state 27
-- On NEQ shift to state 38
-- On MUL shift to state 29
-- On MOD shift to state 33
-- On LTE shift to state 40
-- On LT shift to state 44
-- On LOR shift to state 50
-- On LAND shift to state 58
-- On GTE shift to state 46
-- On GT shift to state 48
-- On DIV shift to state 35
-- On DEQ shift to state 52
-- On BOR shift to state 54
-- On BAND shift to state 56
-- On ADD shift to state 42
## Reductions:

State 244:
## Known stack suffix:
## IF LPAREN expr RPAREN
## LR(1) items:
closedStmt -> IF LPAREN expr RPAREN . closedStmt ELSE closedStmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
openStmt -> IF LPAREN expr RPAREN . stmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
openStmt -> IF LPAREN expr RPAREN . closedStmt ELSE openStmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
-- On WHILE shift to state 233
-- On USCORE shift to state 1
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On RETURN shift to state 237
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On LCBRAC shift to state 231
-- On INT_LIT shift to state 8
-- On INT shift to state 95
-- On IF shift to state 241
-- On ID shift to state 99
-- On FOR shift to state 245
-- On CONTINUE shift to state 253
-- On CONST shift to state 105
-- On CHAR_LIT shift to state 11
-- On CHAR shift to state 108
-- On BREAK shift to state 255
-- On BOOL_LIT shift to state 12
-- On BOOL shift to state 110
-- On BNOT shift to state 13
-- On varDecl shift to state 257
-- On stmt shift to state 265
-- On sourceList shift to state 121
-- On primary shift to state 127
-- On otherStmt shift to state 259
-- On openStmt shift to state 266
-- On moduleAccess shift to state 131
-- On literal shift to state 22
-- On lhsList shift to state 133
-- On lhs shift to state 147
-- On functionCall shift to state 23
-- On expr shift to state 142
-- On dataType shift to state 145
-- On closedStmt shift to state 267
-- On cast shift to state 31
-- On body shift to state 262
-- On assignment shift to state 263
## Reductions:

State 245:
## Known stack suffix:
## FOR
## LR(1) items:
closedStmt -> FOR . LPAREN optExpr SCOLON optExpr SCOLON optExpr RPAREN closedStmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
openStmt -> FOR . LPAREN optExpr SCOLON optExpr SCOLON optExpr RPAREN openStmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
-- On LPAREN shift to state 246
## Reductions:

State 246:
## Known stack suffix:
## FOR LPAREN
## LR(1) items:
closedStmt -> FOR LPAREN . optExpr SCOLON optExpr SCOLON optExpr RPAREN closedStmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
openStmt -> FOR LPAREN . optExpr SCOLON optExpr SCOLON optExpr RPAREN openStmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On BNOT shift to state 13
-- On sourceList shift to state 14
-- On primary shift to state 19
-- On optExpr shift to state 247
-- On moduleAccess shift to state 21
-- On literal shift to state 22
-- On functionCall shift to state 23
-- On expr shift to state 240
-- On cast shift to state 31
## Reductions:
-- On SCOLON
--   reduce production optExpr ->

State 247:
## Known stack suffix:
## FOR LPAREN optExpr
## LR(1) items:
closedStmt -> FOR LPAREN optExpr . SCOLON optExpr SCOLON optExpr RPAREN closedStmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
openStmt -> FOR LPAREN optExpr . SCOLON optExpr SCOLON optExpr RPAREN openStmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
-- On SCOLON shift to state 248
## Reductions:

State 248:
## Known stack suffix:
## FOR LPAREN optExpr SCOLON
## LR(1) items:
closedStmt -> FOR LPAREN optExpr SCOLON . optExpr SCOLON optExpr RPAREN closedStmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
openStmt -> FOR LPAREN optExpr SCOLON . optExpr SCOLON optExpr RPAREN openStmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On BNOT shift to state 13
-- On sourceList shift to state 14
-- On primary shift to state 19
-- On optExpr shift to state 249
-- On moduleAccess shift to state 21
-- On literal shift to state 22
-- On functionCall shift to state 23
-- On expr shift to state 240
-- On cast shift to state 31
## Reductions:
-- On SCOLON
--   reduce production optExpr ->

State 249:
## Known stack suffix:
## FOR LPAREN optExpr SCOLON optExpr
## LR(1) items:
closedStmt -> FOR LPAREN optExpr SCOLON optExpr . SCOLON optExpr RPAREN closedStmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
openStmt -> FOR LPAREN optExpr SCOLON optExpr . SCOLON optExpr RPAREN openStmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
-- On SCOLON shift to state 250
## Reductions:

State 250:
## Known stack suffix:
## FOR LPAREN optExpr SCOLON optExpr SCOLON
## LR(1) items:
closedStmt -> FOR LPAREN optExpr SCOLON optExpr SCOLON . optExpr RPAREN closedStmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
openStmt -> FOR LPAREN optExpr SCOLON optExpr SCOLON . optExpr RPAREN openStmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On INT_LIT shift to state 8
-- On ID shift to state 9
-- On CHAR_LIT shift to state 11
-- On BOOL_LIT shift to state 12
-- On BNOT shift to state 13
-- On sourceList shift to state 14
-- On primary shift to state 19
-- On optExpr shift to state 251
-- On moduleAccess shift to state 21
-- On literal shift to state 22
-- On functionCall shift to state 23
-- On expr shift to state 240
-- On cast shift to state 31
## Reductions:
-- On RPAREN
--   reduce production optExpr ->

State 251:
## Known stack suffix:
## FOR LPAREN optExpr SCOLON optExpr SCOLON optExpr
## LR(1) items:
closedStmt -> FOR LPAREN optExpr SCOLON optExpr SCOLON optExpr . RPAREN closedStmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
openStmt -> FOR LPAREN optExpr SCOLON optExpr SCOLON optExpr . RPAREN openStmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
-- On RPAREN shift to state 252
## Reductions:

State 252:
## Known stack suffix:
## FOR LPAREN optExpr SCOLON optExpr SCOLON optExpr RPAREN
## LR(1) items:
closedStmt -> FOR LPAREN optExpr SCOLON optExpr SCOLON optExpr RPAREN . closedStmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
openStmt -> FOR LPAREN optExpr SCOLON optExpr SCOLON optExpr RPAREN . openStmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
-- On WHILE shift to state 233
-- On USCORE shift to state 1
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On RETURN shift to state 237
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On LCBRAC shift to state 231
-- On INT_LIT shift to state 8
-- On INT shift to state 95
-- On IF shift to state 241
-- On ID shift to state 99
-- On FOR shift to state 245
-- On CONTINUE shift to state 253
-- On CONST shift to state 105
-- On CHAR_LIT shift to state 11
-- On CHAR shift to state 108
-- On BREAK shift to state 255
-- On BOOL_LIT shift to state 12
-- On BOOL shift to state 110
-- On BNOT shift to state 13
-- On varDecl shift to state 257
-- On sourceList shift to state 121
-- On primary shift to state 127
-- On otherStmt shift to state 259
-- On openStmt shift to state 260
-- On moduleAccess shift to state 131
-- On literal shift to state 22
-- On lhsList shift to state 133
-- On lhs shift to state 147
-- On functionCall shift to state 23
-- On expr shift to state 142
-- On dataType shift to state 145
-- On closedStmt shift to state 261
-- On cast shift to state 31
-- On body shift to state 262
-- On assignment shift to state 263
## Reductions:

State 253:
## Known stack suffix:
## CONTINUE
## LR(1) items:
otherStmt -> CONTINUE . SCOLON [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
-- On SCOLON shift to state 254
## Reductions:

State 254:
## Known stack suffix:
## CONTINUE SCOLON
## LR(1) items:
otherStmt -> CONTINUE SCOLON . [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
## Reductions:
-- On WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT
--   reduce production otherStmt -> CONTINUE SCOLON

State 255:
## Known stack suffix:
## BREAK
## LR(1) items:
otherStmt -> BREAK . SCOLON [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
-- On SCOLON shift to state 256
## Reductions:

State 256:
## Known stack suffix:
## BREAK SCOLON
## LR(1) items:
otherStmt -> BREAK SCOLON . [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
## Reductions:
-- On WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT
--   reduce production otherStmt -> BREAK SCOLON

State 257:
## Known stack suffix:
## varDecl
## LR(1) items:
lhs -> varDecl . [ EQ COMMA ]
otherStmt -> varDecl . SCOLON [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
-- On SCOLON shift to state 258
## Reductions:
-- On EQ COMMA
--   reduce production lhs -> varDecl

State 258:
## Known stack suffix:
## varDecl SCOLON
## LR(1) items:
otherStmt -> varDecl SCOLON . [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
## Reductions:
-- On WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT
--   reduce production otherStmt -> varDecl SCOLON

State 259:
## Known stack suffix:
## otherStmt
## LR(1) items:
closedStmt -> otherStmt . [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
## Reductions:
-- On WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT
--   reduce production closedStmt -> otherStmt

State 260:
## Known stack suffix:
## FOR LPAREN optExpr SCOLON optExpr SCOLON optExpr RPAREN openStmt
## LR(1) items:
openStmt -> FOR LPAREN optExpr SCOLON optExpr SCOLON optExpr RPAREN openStmt . [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
## Reductions:
-- On WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT
--   reduce production openStmt -> FOR LPAREN optExpr SCOLON optExpr SCOLON optExpr RPAREN openStmt

State 261:
## Known stack suffix:
## FOR LPAREN optExpr SCOLON optExpr SCOLON optExpr RPAREN closedStmt
## LR(1) items:
closedStmt -> FOR LPAREN optExpr SCOLON optExpr SCOLON optExpr RPAREN closedStmt . [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
## Reductions:
-- On WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT
--   reduce production closedStmt -> FOR LPAREN optExpr SCOLON optExpr SCOLON optExpr RPAREN closedStmt

State 262:
## Known stack suffix:
## body
## LR(1) items:
otherStmt -> body . [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
## Reductions:
-- On WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT
--   reduce production otherStmt -> body

State 263:
## Known stack suffix:
## assignment
## LR(1) items:
otherStmt -> assignment . SCOLON [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
-- On SCOLON shift to state 264
## Reductions:

State 264:
## Known stack suffix:
## assignment SCOLON
## LR(1) items:
otherStmt -> assignment SCOLON . [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
## Reductions:
-- On WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT
--   reduce production otherStmt -> assignment SCOLON

State 265:
## Known stack suffix:
## IF LPAREN expr RPAREN stmt
## LR(1) items:
openStmt -> IF LPAREN expr RPAREN stmt . [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
## Reductions:
-- On WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT
--   reduce production openStmt -> IF LPAREN expr RPAREN stmt

State 266:
## Known stack suffix:
## openStmt
## LR(1) items:
stmt -> openStmt . [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
## Reductions:
-- On WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT
--   reduce production stmt -> openStmt

State 267:
## Known stack suffix:
## IF LPAREN expr RPAREN closedStmt
## LR(1) items:
closedStmt -> IF LPAREN expr RPAREN closedStmt . ELSE closedStmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
openStmt -> IF LPAREN expr RPAREN closedStmt . ELSE openStmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
stmt -> closedStmt . [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
-- On ELSE shift to state 268
## Reductions:
-- On WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT
--   reduce production stmt -> closedStmt

State 268:
## Known stack suffix:
## IF LPAREN expr RPAREN closedStmt ELSE
## LR(1) items:
closedStmt -> IF LPAREN expr RPAREN closedStmt ELSE . closedStmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
openStmt -> IF LPAREN expr RPAREN closedStmt ELSE . openStmt [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
-- On WHILE shift to state 233
-- On USCORE shift to state 1
-- On SUB shift to state 2
-- On STR_LIT shift to state 3
-- On RETURN shift to state 237
-- On NULL shift to state 4
-- On MODULE_ID shift to state 5
-- On LPAREN shift to state 6
-- On LNOT shift to state 7
-- On LCBRAC shift to state 231
-- On INT_LIT shift to state 8
-- On INT shift to state 95
-- On IF shift to state 241
-- On ID shift to state 99
-- On FOR shift to state 245
-- On CONTINUE shift to state 253
-- On CONST shift to state 105
-- On CHAR_LIT shift to state 11
-- On CHAR shift to state 108
-- On BREAK shift to state 255
-- On BOOL_LIT shift to state 12
-- On BOOL shift to state 110
-- On BNOT shift to state 13
-- On varDecl shift to state 257
-- On sourceList shift to state 121
-- On primary shift to state 127
-- On otherStmt shift to state 259
-- On openStmt shift to state 269
-- On moduleAccess shift to state 131
-- On literal shift to state 22
-- On lhsList shift to state 133
-- On lhs shift to state 147
-- On functionCall shift to state 23
-- On expr shift to state 142
-- On dataType shift to state 145
-- On closedStmt shift to state 270
-- On cast shift to state 31
-- On body shift to state 262
-- On assignment shift to state 263
## Reductions:

State 269:
## Known stack suffix:
## IF LPAREN expr RPAREN closedStmt ELSE openStmt
## LR(1) items:
openStmt -> IF LPAREN expr RPAREN closedStmt ELSE openStmt . [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
## Reductions:
-- On WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT
--   reduce production openStmt -> IF LPAREN expr RPAREN closedStmt ELSE openStmt

State 270:
## Known stack suffix:
## IF LPAREN expr RPAREN closedStmt ELSE closedStmt
## LR(1) items:
closedStmt -> IF LPAREN expr RPAREN closedStmt ELSE closedStmt . [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
## Reductions:
-- On WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT
--   reduce production closedStmt -> IF LPAREN expr RPAREN closedStmt ELSE closedStmt

State 271:
## Known stack suffix:
## WHILE LPAREN expr RPAREN openStmt
## LR(1) items:
openStmt -> WHILE LPAREN expr RPAREN openStmt . [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
## Reductions:
-- On WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT
--   reduce production openStmt -> WHILE LPAREN expr RPAREN openStmt

State 272:
## Known stack suffix:
## WHILE LPAREN expr RPAREN closedStmt
## LR(1) items:
closedStmt -> WHILE LPAREN expr RPAREN closedStmt . [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
## Reductions:
-- On WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT
--   reduce production closedStmt -> WHILE LPAREN expr RPAREN closedStmt

State 273:
## Known stack suffix:
## LCBRAC stmtList RCBRAC
## LR(1) items:
body -> LCBRAC stmtList RCBRAC . [ WHILE VOID USCORE TYPE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR EOF ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
## Reductions:
-- On WHILE VOID USCORE TYPE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR EOF ELSE CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT
--   reduce production body -> LCBRAC stmtList RCBRAC

State 274:
## Known stack suffix:
## stmtList stmt
## LR(1) items:
stmtList -> stmtList stmt . [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
## Reductions:
-- On WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT
--   reduce production stmtList -> stmtList stmt

State 275:
## Known stack suffix:
## closedStmt
## LR(1) items:
stmt -> closedStmt . [ WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT ]
## Transitions:
## Reductions:
-- On WHILE USCORE SUB STR_LIT RETURN RCBRAC NULL MODULE_ID LPAREN LNOT LCBRAC INT_LIT INT IF ID FOR CONTINUE CONST CHAR_LIT CHAR BREAK BOOL_LIT BOOL BNOT
--   reduce production stmt -> closedStmt

State 276:
## Known stack suffix:
## functionDecl body
## LR(1) items:
functionDef -> functionDecl body . [ VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL ]
## Transitions:
## Reductions:
-- On VOID TYPE MODULE_ID INT ID EOF CONST CHAR BOOL
--   reduce production functionDef -> functionDecl body

